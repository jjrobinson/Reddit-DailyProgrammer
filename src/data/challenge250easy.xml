<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>For learning, refreshing, or just for fun!</title><link>https://www.reddit.com/r/dailyprogrammer/</link><description>**Welcome to r/DailyProgrammer!** First time visitors of Daily Programmer please [Read the Wiki] (http://www.reddit.com/r/dailyprogrammer/wiki/index) to learn everything about this subreddit. 3 Programming Challenges a week!</description><image><url>https://d.thumbs.redditmedia.com/mASxBAsOsW90oWe-.png</url><title>For learning, refreshing, or just for fun!</title><link>https://www.reddit.com/r/dailyprogrammer/</link></image><atom:link rel="self" href="https://www.reddit.com/r/dailyprogrammer/.xml" type="application/rss+xml" /><item><title>[Meta] 2016 New Year Feedback Thread</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3zgexx/meta_2016_new_year_feedback_thread/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3zgexx/meta_2016_new_year_feedback_thread/</guid><pubDate>Mon, 04 Jan 2016 20:10:19 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Hey folks! As 2016 is starting and we&amp;#39;re gearing up for more interesting challenges, we (the mods of &lt;a href=&#34;/r/dailyprogramming&#34;&gt;/r/dailyprogramming&lt;/a&gt;) would like to hear from you! How are we doing?&lt;/p&gt; &lt;p&gt;Are the problems too easy? Too hard? Just right? Boring/exciting? Varied/same? Anything you would like to see us do that we&amp;#39;re not doing? Anything we&amp;#39;re doing that we should just stop?&lt;/p&gt; &lt;p&gt;Any particular challenges (or types of challenges) that you loved? What about any that you didn&amp;#39;t love so much?&lt;/p&gt; &lt;p&gt;Anything you would like to work on, or look into, in the coming year (programming languages, specialty fields like AI, etc)?&lt;/p&gt; &lt;p&gt;Please let us know! Together we can keep the sub great, and maybe make it even better!&lt;/p&gt; &lt;p&gt;Thanks!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3zgexx/meta_2016_new_year_feedback_thread/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3zgexx/meta_2016_new_year_feedback_thread/"&gt;[40 comments]&lt;/a&gt;</description></item><item><title>[2016-01-18] Challenge #250 [Easy] Scraping /r/dailyprogrammer</title><link>https://www.reddit.com/r/dailyprogrammer/comments/41hp6u/20160118_challenge_250_easy_scraping/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/41hp6u/20160118_challenge_250_easy_scraping/</guid><pubDate>Mon, 18 Jan 2016 06:19:40 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;As you all know, we have a not very wel updated &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/wiki/challenges&#34;&gt;list of all the challenges&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Today we are going to build a webscraper that creates that list for us, preferably using the &lt;a href=&#34;https://www.reddit.com/dev/api&#34;&gt;reddit api&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Normally when I create a challenge I don&amp;#39;t mind how you format input and output, but now, since it has to be &lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;markdown&lt;/a&gt;, I do care about the output.&lt;/p&gt; &lt;hr/&gt; &lt;p&gt;Our List of challenges consist of a 4-column table, showing the Easy, Intermediate and Hard challenges, as wel as an extra&amp;#39;s.&lt;/p&gt; &lt;table&gt;&lt;thead&gt; &lt;tr&gt; &lt;th&gt;Easy&lt;/th&gt; &lt;th&gt;Intermediate&lt;/th&gt; &lt;th&gt;Hard&lt;/th&gt; &lt;th&gt;Weekly/Bonus&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;&lt;tbody&gt; &lt;tr&gt; &lt;td&gt;[]()&lt;/td&gt; &lt;td&gt;[]()&lt;/td&gt; &lt;td&gt;[]()&lt;/td&gt; &lt;td&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/r/dailyprogrammer/comments/3ltee2/20150921_challenge_233_easy_the_house_that_ascii/&#34;&gt;[2015-09-21] Challenge #233 [Easy] The house that ASCII built&lt;/a&gt;&lt;/td&gt; &lt;td&gt;[]()&lt;/td&gt; &lt;td&gt;[]()&lt;/td&gt; &lt;td&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;a href=&#34;/r/dailyprogrammer/comments/3kx6oh/20150914_challenge_232_easy_palindromes/&#34;&gt;[2015-09-14] Challenge #232 [Easy] Palindromes&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/r/dailyprogrammer/comments/3l61vx/20150916_challenge_232_intermediate_where_should/&#34;&gt;[2015-09-16] Challenge #232 [Intermediate] Where Should Grandma&amp;#39;s House Go?&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;a href=&#34;/r/dailyprogrammer/comments/3lf3i2/20150918_challenge_232_hard_redistricting_voting/&#34;&gt;[2015-09-18] Challenge #232 [Hard] Redistricting Voting Blocks&lt;/a&gt;&lt;/td&gt; &lt;td&gt;&lt;strong&gt;-&lt;/strong&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; &lt;p&gt;The code code behind looks like this (minus the white line behind &lt;code&gt;Easy | Intermediate | Hard | Weekly/Bonus&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Easy | Intermediate | Hard | Weekly/Bonus -----|--------------|------|------------- | []() | []() | []() | **-** | | [[2015-09-21] Challenge #233 [Easy] The house that ASCII built](/r/dailyprogrammer/comments/3ltee2/20150921_challenge_233_easy_the_house_that_ascii/) | []() | []() | **-** | | [[2015-09-14] Challenge #232 [Easy] Palindromes](/r/dailyprogrammer/comments/3kx6oh/20150914_challenge_232_easy_palindromes/) | [[2015-09-16] Challenge #232 [Intermediate] Where Should Grandma&amp;#39;s House Go?](/r/dailyprogrammer/comments/3l61vx/20150916_challenge_232_intermediate_where_should/) | [[2015-09-18] Challenge #232 [Hard] Redistricting Voting Blocks](/r/dailyprogrammer/comments/3lf3i2/20150918_challenge_232_hard_redistricting_voting/) | **-** | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Not really, we need to be able to this.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The entire table starting with the latest entries on top. There won&amp;#39;t be 3 challenges for each week, so take considuration. But challenges from the same week are with the same index number (e.g. &lt;code&gt;#1&lt;/code&gt;, &lt;code&gt;#243&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note&lt;/em&gt; We have changed the names from &lt;code&gt;Difficult&lt;/code&gt; to &lt;code&gt;Hard&lt;/code&gt; at some point&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Bonus 1&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;It would also be nice if we could have the header generated. These are the 4 links you see at the top of &lt;a href=&#34;/r/dailyprogrammer&#34;&gt;/r/dailyprogrammer&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;This is just a list and the source looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1. [Challenge #242: **Easy**] (/r/dailyprogrammer/comments/3twuwf/20151123_challenge_242_easy_funny_plant/) 2. [Challenge #242: **Intermediate**](/r/dailyprogrammer/comments/3u6o56/20151118_challenge_242_intermediate_vhs_recording/) 3. [Challenge #242: **Hard**](/r/dailyprogrammer/comments/3ufwyf/20151127_challenge_242_hard_start_to_rummikub/) 4. [Weekly #24: **Mini Challenges**](/r/dailyprogrammer/comments/3o4tpz/weekly_24_mini_challenges/) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Bonus 2&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Here we do want to use an input.&lt;/p&gt; &lt;p&gt;We want to be able to generate just a one or a few rows by giving the rownumber(s)&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;213 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;| [[2015-09-07] Challenge #213 [Easy] Cellular Automata: Rule 90](/r/dailyprogrammer/comments/3jz8tt/20150907_challenge_213_easy_cellular_automata/) | [[2015-09-09] Challenge #231 [Intermediate] Set Game Solver](/r/dailyprogrammer/comments/3ke4l6/20150909_challenge_231_intermediate_set_game/) | [[2015-09-11] Challenge #231 [Hard] Eight Husbands for Eight Sisters](/r/dailyprogrammer/comments/3kj1v9/20150911_challenge_231_hard_eight_husbands_for/) | **-** | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;229 228 227 226 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;| [[2015-08-24] Challenge #229 [Easy] The Dottie Number](/r/dailyprogrammer/comments/3i99w8/20150824_challenge_229_easy_the_dottie_number/) | [[2015-08-26] Challenge #229 [Intermediate] Reverse Fizz Buzz](/r/dailyprogrammer/comments/3iimw3/20150826_challenge_229_intermediate_reverse_fizz/) | [[2015-08-28] Challenge #229 [Hard] Divisible by 7](/r/dailyprogrammer/comments/3irzsi/20150828_challenge_229_hard_divisible_by_7/) | **-** | | [[2015-08-17] Challenge #228 [Easy] Letters in Alphabetical Order](/r/dailyprogrammer/comments/3h9pde/20150817_challenge_228_easy_letters_in/) | [[2015-08-19] Challenge #228 [Intermediate] Use a Web Service to Find Bitcoin Prices](/r/dailyprogrammer/comments/3hj4o2/20150819_challenge_228_intermediate_use_a_web/) | [[08-21-2015] Challenge #228 [Hard] Golomb Rulers](/r/dailyprogrammer/comments/3hsgr0/08212015_challenge_228_hard_golomb_rulers/) | **-** | | [[2015-08-10] Challenge #227 [Easy] Square Spirals](/r/dailyprogrammer/comments/3ggli3/20150810_challenge_227_easy_square_spirals/) | [[2015-08-12] Challenge #227 [Intermediate] Contiguous chains](/r/dailyprogrammer/comments/3gpjn3/20150812_challenge_227_intermediate_contiguous/) | [[2015-08-14] Challenge #227 [Hard] Adjacency Matrix Generator](/r/dailyprogrammer/comments/3h0uki/20150814_challenge_227_hard_adjacency_matrix/) | **-** | | [[2015-08-03] Challenge #226 [Easy] Adding fractions](/r/dailyprogrammer/comments/3fmke1/20150803_challenge_226_easy_adding_fractions/) | [[2015-08-05] Challenge #226 [Intermediate] Connect Four](/r/dailyprogrammer/comments/3fva66/20150805_challenge_226_intermediate_connect_four/) | [[2015-08-07] Challenge #226 [Hard] Kakuro Solver](/r/dailyprogrammer/comments/3g2tby/20150807_challenge_226_hard_kakuro_solver/) | **-** | &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; As &lt;a href=&#34;/u/cheerse&#34;&gt;/u/cheerse&lt;/a&gt; points out, you can use the &lt;a href=&#34;https://github.com/reddit/reddit/wiki/API-Wrappers&#34;&gt;Reddit api wrappers&lt;/a&gt; if available for your language&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/fvandepitte&#34;&gt; fvandepitte &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/41hp6u/20160118_challenge_250_easy_scraping/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/41hp6u/20160118_challenge_250_easy_scraping/"&gt;[37 comments]&lt;/a&gt;</description></item><item><title>[2016-01-15] Challenge #249 [Hard] Museum Cameras</title><link>https://www.reddit.com/r/dailyprogrammer/comments/41346z/20160115_challenge_249_hard_museum_cameras/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/41346z/20160115_challenge_249_hard_museum_cameras/</guid><pubDate>Fri, 15 Jan 2016 13:39:00 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;You run a museum, and you have a small budget - but you have to protect the museum with cameras. Given some descriptions of rooms, can you organize the smallest number of cameras to view the whole room?&lt;/p&gt; &lt;p&gt;Some assumptions and other factors for you to work with:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Cameras can&amp;#39;t see around corners. &lt;/li&gt; &lt;li&gt;You can only place cameras in corners.&lt;/li&gt; &lt;li&gt;Assume every camera has a field of view of 180 degrees, yielding a semicircular field of view. &lt;/li&gt; &lt;li&gt;Assume every camera&amp;#39;s field of view will be equal to the left and right of the line in the corner where the camera is placed; this line bisects the angle of the corner. The camera points away from the corner.&lt;/li&gt; &lt;li&gt;Assume every camera has an otherwise infinite view.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;You&amp;#39;ll be given a row with a single number &lt;em&gt;N&lt;/em&gt; that tells you how many points to read. Then on the next line you&amp;#39;ll be given &lt;em&gt;N&lt;/em&gt; points in a Cartesian coordinate space to draw the bounding box of the museum room. For example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;3 (0,0) (3,6) (6,0) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This translates to (pardon my ugly ASCII art) this triangle:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; . . / \ =&amp;gt; / \ / \ / \ / \ . . .___________. &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should emit the position of the cameras needed to cover the area. From our example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;(0,0) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;That&amp;#39;s one possible solution (for this one any of the corners would have worked). &lt;/p&gt; &lt;p&gt;If the shape has no solution, emit something like &amp;quot;The architect has no concept of security&amp;quot; because maybe they&amp;#39;re collaborating with art theives. &lt;/p&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;p&gt;first room&lt;/p&gt; &lt;pre&gt;&lt;code&gt;4 (0,0) (5,0) (5,6) (0,6) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;second room&lt;/p&gt; &lt;pre&gt;&lt;code&gt;5 (0,0) (7,0) (7,3) (5,6) (0,6) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;third room&lt;/p&gt; &lt;pre&gt;&lt;code&gt;13 (0,5) (2,8) (5,7) (9,6) (10,9) (13,10) (13,6) (17,6) (16,3) (13,1) (7,1) (5,3) (2,3) &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Notes&lt;/h1&gt; &lt;p&gt;This is a classic computational geometry problem called the &lt;a href=&#34;https://en.wikipedia.org/wiki/Art_gallery_problem&#34;&gt;Art Gallery Problem&lt;/a&gt;. For some ideas on calculating 2d visibility from a top down map, &lt;a href=&#34;http://www.redblobgames.com/articles/visibility/&#34;&gt;click here&lt;/a&gt; &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/41346z/20160115_challenge_249_hard_museum_cameras/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/41346z/20160115_challenge_249_hard_museum_cameras/"&gt;[21 comments]&lt;/a&gt;</description></item><item><title>[2016-01-13] Challenge #249 [Intermediate] Hello World Genetic or Evolutionary Algorithm</title><link>https://www.reddit.com/r/dailyprogrammer/comments/40rs67/20160113_challenge_249_intermediate_hello_world/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/40rs67/20160113_challenge_249_intermediate_hello_world/</guid><pubDate>Wed, 13 Jan 2016 12:20:19 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Use either an &lt;a href=&#34;http://en.wikipedia.org/wiki/Evolutionary_algorithm&#34;&gt;Evolutionary&lt;/a&gt; or &lt;a href=&#34;http://en.wikipedia.org/wiki/Genetic_algorithm&#34;&gt;Genetic Algorithm&lt;/a&gt; to evolve a solution to the fitness functions provided!&lt;/p&gt; &lt;h1&gt;Input description&lt;/h1&gt; &lt;p&gt;The input string should be the target string you want to evolve the initial random solution into.&lt;/p&gt; &lt;p&gt;The target string (and therefore input) will be &lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;#39;Hello, world!&amp;#39; &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;However, you want your program to initialize the process by randomly generating a string of the same length as the input. The only thing you want to use the input for is to determine the fitness of your function, so you don&amp;#39;t want to just cheat by printing out the input string!&lt;/p&gt; &lt;h1&gt;Output description&lt;/h1&gt; &lt;p&gt;The ideal output of the program will be the evolutions of the population until the program reaches &amp;#39;Hello, world!&amp;#39; (if your algorithm works correctly). You want your algorithm to be able to turn the random string from the initial generation to the output phrase as quickly as possible!&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Gen: 1 | Fitness: 219 | JAmYv&amp;#39;&amp;amp;L_Cov1 Gen: 2 | Fitness: 150 | Vlrrd:VnuBc Gen: 4 | Fitness: 130 | JPmbj6ljThT Gen: 5 | Fitness: 105 | :^mYv&amp;#39;&amp;amp;oj\jb( Gen: 6 | Fitness: 100 | Ilrrf,(sluBc Gen: 7 | Fitness: 68 | Iilsj6lrsgd Gen: 9 | Fitness: 52 | Iildq-(slusc Gen: 10 | Fitness: 41 | Iildq-(vnuob Gen: 11 | Fitness: 38 | Iilmh&amp;#39;&amp;amp;wmsjb Gen: 12 | Fitness: 33 | Iilmh&amp;#39;&amp;amp;wmunb! Gen: 13 | Fitness: 27 | Iildq-wmsjd# Gen: 14 | Fitness: 25 | Ihnlr,(wnunb! Gen: 15 | Fitness: 22 | Iilmj-wnsjb! Gen: 16 | Fitness: 21 | Iillq-&amp;amp;wmsjd# Gen: 17 | Fitness: 16 | Iillq,wmsjd! Gen: 19 | Fitness: 14 | Igllq,wmsjd! Gen: 20 | Fitness: 12 | Igllq,wmsjd! Gen: 22 | Fitness: 11 | Igllq,wnsld# Gen: 23 | Fitness: 10 | Igllq,wmsld! Gen: 24 | Fitness: 8 | Igllq,wnsld! Gen: 27 | Fitness: 7 | Igllq,!wosld! Gen: 30 | Fitness: 6 | Igllo,!wnsld! Gen: 32 | Fitness: 5 | Hglln,!wosld! Gen: 34 | Fitness: 4 | Igllo,world! Gen: 36 | Fitness: 3 | Hgllo,world! Gen: 37 | Fitness: 2 | Iello,!world! Gen: 40 | Fitness: 1 | Hello,!world! Gen: 77 | Fitness: 0 | Hello, world! Elapsed time is 0.069605 seconds. &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Notes/Hints&lt;/h1&gt; &lt;p&gt;One of the hardest parts of making an evolutionary or genetic algorithm is deciding what a decent fitness function is, or the way we go about evaluating how good each individual (or potential solution) really is.&lt;/p&gt; &lt;p&gt;One possible fitness function is &lt;a href=&#34;http://en.wikipedia.org/wiki/Hamming_distance&#34;&gt;The Hamming Distance&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Bonus&lt;/h1&gt; &lt;p&gt;As a bonus make your algorithm able to accept any input string and still evaluate the function efficiently (the longer the string you input the lower your mutation rate you&amp;#39;ll have to use, so consider using scaling mutation rates, but don&amp;#39;t cheat and scale the rate of mutation with fitness instead scale it to size of the input string!)&lt;/p&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/pantsforbirds&#34;&gt;/u/pantsforbirds&lt;/a&gt;. Have a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/40rs67/20160113_challenge_249_intermediate_hello_world/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/40rs67/20160113_challenge_249_intermediate_hello_world/"&gt;[113 comments]&lt;/a&gt;</description></item><item><title>[2016-01-11] Challenge #249 [Easy] Playing the Stock Market</title><link>https://www.reddit.com/r/dailyprogrammer/comments/40h9pd/20160111_challenge_249_easy_playing_the_stock/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/40h9pd/20160111_challenge_249_easy_playing_the_stock/</guid><pubDate>Mon, 11 Jan 2016 15:39:19 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Let&amp;#39;s assume I&amp;#39;m playing the stock market - buy low, sell high. I&amp;#39;m a day trader, so I want to get in and out of a stock before the day is done, and I want to time my trades so that I make the biggest gain possible. &lt;/p&gt; &lt;p&gt;The market has a rule that won&amp;#39;t let me buy and sell in a pair of ticks - I have to wait for at least one tick to go buy. And obviously I can&amp;#39;t buy in the future and sell in the past. &lt;/p&gt; &lt;p&gt;So, given a list of stock price ticks for the day, can you tell me what trades I should make to maximize my gain within the constraints of the market? Remember - buy low, sell high, and you can&amp;#39;t sell before you buy.&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;You&amp;#39;ll be given a list of stock prices as a space separated list of 2 decimal floats (dollars and cents), listed in chronological order. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;19.35 19.30 18.88 18.93 18.95 19.03 19.00 18.97 18.97 18.98 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should emit the two trades in chronological order - what you think I should buy at and sell at. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;18.88 19.03 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;9.20 8.03 10.02 8.08 8.14 8.10 8.31 8.28 8.35 8.34 8.39 8.45 8.38 8.38 8.32 8.36 8.28 8.28 8.38 8.48 8.49 8.54 8.73 8.72 8.76 8.74 8.87 8.82 8.81 8.82 8.85 8.85 8.86 8.63 8.70 8.68 8.72 8.77 8.69 8.65 8.70 8.98 8.98 8.87 8.71 9.17 9.34 9.28 8.98 9.02 9.16 9.15 9.07 9.14 9.13 9.10 9.16 9.06 9.10 9.15 9.11 8.72 8.86 8.83 8.70 8.69 8.73 8.73 8.67 8.70 8.69 8.81 8.82 8.83 8.91 8.80 8.97 8.86 8.81 8.87 8.82 8.78 8.82 8.77 8.54 8.32 8.33 8.32 8.51 8.53 8.52 8.41 8.55 8.31 8.38 8.34 8.34 8.19 8.17 8.16 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;8.03 9.34 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/40h9pd/20160111_challenge_249_easy_playing_the_stock/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/40h9pd/20160111_challenge_249_easy_playing_the_stock/"&gt;[238 comments]&lt;/a&gt;</description></item><item><title>[2016-01-08] Challenge #248 [Hard] NotClick game</title><link>https://www.reddit.com/r/dailyprogrammer/comments/40035o/20160108_challenge_248_hard_notclick_game/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/40035o/20160108_challenge_248_hard_notclick_game/</guid><pubDate>Fri, 08 Jan 2016 07:26:11 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Click games such as &lt;a href=&#34;http://orteil.dashnet.org/cookieclicker/&#34;&gt;http://orteil.dashnet.org/cookieclicker/&lt;/a&gt; are resource games where, part of the game, is obtaining free resources limited by how fast you can repeatedly click for them.&lt;/p&gt; &lt;p&gt;Today&amp;#39;s challenge simulates these games with a constant 1 click per second, and a build order queue. Allowing the game to be played in a console, and finish &amp;quot;instantly&amp;quot;.&lt;/p&gt; &lt;p&gt;For our game, cookies is the name of the generated resources.&lt;/p&gt; &lt;h1&gt;setup&lt;/h1&gt; &lt;p&gt;for each line in this input, each word is: &lt;/p&gt; &lt;ol&gt; &lt;li&gt;Name of building (can be discarded or split into its own array for formatting use)&lt;br/&gt;&lt;/li&gt; &lt;li&gt;Cost for first building purchase.&lt;br/&gt;&lt;/li&gt; &lt;li&gt;Number of Cookies each building generates.&lt;br/&gt;&lt;/li&gt; &lt;li&gt;Number of extra cookies the building generates on first upgrade. (all subsequent upgrades double production)&lt;br/&gt;&lt;/li&gt; &lt;li&gt;Cost of first upgrade.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;setup input&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;cursor 12 0.1 0.1 100 grandma 100 0.8 0.3 1000 farm 500 4 1 10000 mine 1000 10 3 50000 factory 5000 40 10 200000 bank 100000 100 40 5000000 temple 1000000 400 100 100000000 city 300000000 5000 2000 1000000000 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Not in input are 2 constants for each line. &lt;/p&gt; &lt;ol&gt; &lt;li&gt; The cost growth rate of each new building. Fixed at 1.2 (20% cost growth per purchase of the same building)&lt;/li&gt; &lt;li&gt; The cost growth rate of each upgrade. Fixed at 3 (200% cost increase for each upgrade of the same building)&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;┌────────┬─────────┬────┬──────┬────────────┬────────────┬────────────┐ │BUILDING│COST1 │PROD│BOOST1│UPGRADE_cOST│BCOST_GROWTH│UCOST_GROWTH│ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │cursor │12 │0.1 │0.1 │100 │1.2 │3 │ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │grandma │100 │0.8 │0.3 │1000 │1.2 │3 │ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │farm │500 │4 │1 │10000 │1.2 │3 │ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │mine │1000 │10 │3 │50000 │1.2 │3 │ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │factory │5000 │40 │10 │200000 │1.2 │3 │ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │bank │100000 │100 │40 │5000000 │1.2 │3 │ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │temple │1000000 │400 │100 │100000000 │1.2 │3 │ ├────────┼─────────┼────┼──────┼────────────┼────────────┼────────────┤ │city │300000000│5000│2000 │1000000000 │1.2 │3 │ └────────┴─────────┴────┴──────┴────────────┴────────────┴────────────┘ &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;simulation&lt;/h1&gt; &lt;p&gt;Your challenge is to create a function that models resources after each turn. It has 2 inputs:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;the number of iterations (turns) to run the simulation.&lt;/li&gt; &lt;li&gt;A queue of building and upgrade orders coded as 0-7, for a building order (0 = cursor, 1 = grandma etc...) and 100-107 for an upgrade (100 = upgrade cursor, 101 = upgrade grandma ...)&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The simulation order is:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Add resources created from buildings.&lt;/li&gt; &lt;li&gt;Add automatic resources from turn: These are from the 1 click per turn. &lt;strong&gt;turn resources = 1 + resources from &amp;quot;cursors building&amp;quot;&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;If there is enough resources to buy the first building or upgrade in queue, then it is bought, and the total number of owned buildings or upgrades of that type is increased by one, and the cost of the building or upgrade reduced from cash/cookie balance. &lt;strong&gt;this can be done on same turn resources above came in&lt;/strong&gt;. Can only build one building per turn.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Its recommended that you track &lt;code&gt;turns passed&lt;/code&gt; &lt;code&gt;total resources collected&lt;/code&gt;&lt;/p&gt; &lt;h1&gt;sample input 1&lt;/h1&gt; &lt;p&gt;in J format with function name G, and iterations as left parameter, and build queue. (table output formatting not needed)&lt;/p&gt; &lt;p&gt;20 iterations, and build queue 0 0 1 &lt;/p&gt; &lt;pre&gt;&lt;code&gt; 20 G 0 0 1 ┌─────┬────┬────┬─┬───────────────┬───────────────┬─────┐ │turns│gen │CASH│M│Builds │Upgrades │Queue│ ├─────┼────┼────┼─┼───────────────┼───────────────┼─────┤ │20 │21.6│9.6 │1│1 0 0 0 0 0 0 0│0 0 0 0 0 0 0 0│0 1 │ └─────┴────┴────┴─┴───────────────┴───────────────┴─────┘ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;12 cookies generated after 12th turn.&lt;br/&gt; cursor bought on 12th turn.&lt;br/&gt; for remaining 8 turns, 8 more cookies generated + 1.6 from 1 cursor building that generates 0.1 per turn, but is special in that it also adds 0.1 to each of the 8 auto-clicks that occurred over the 8 turns the building existed.&lt;/p&gt; &lt;p&gt;The output shows that 1 cursor building is owned, and the queue still outstanding has 1 cursor and 1 grandma.&lt;/p&gt; &lt;h1&gt;sample input 2&lt;/h1&gt; &lt;p&gt;To play the game, you probably need to track the current costs of each purchase option as well as production rates of each option. To choose which option has the highest ROI.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 1000 G 0 0 0 1 0 0 0 100 0 0 0 2 0 100 0 0 1 0 0 100 0 0 100 0 0 0 3 3 0 3 1 1 4 3 2 3 4 2 4 3 2 4 0 1 ┌───────┬───────┬───────┬──────┬───────┬───────┬──────┬──────┬────┬──────┬───────┬─────┬─────┬───────┬────┬──────┬────┐ │CPS │cursor │grandma│farm │mine │factory│bank │temple│city│cursor│grandma│farm │mine │factory│bank│temple│city│ ├───────┼───────┼───────┼──────┼───────┼───────┼──────┼──────┼────┼──────┼───────┼─────┼─────┼───────┼────┼──────┼────┤ │308.2 │552.061│248.832│1036.8│2985.98│10368 │100000│1e6 │3e8 │8100 │1000 │10000│50000│200000 │5e6 │1e8 │1e9 │ ├───────┼───────┼───────┼──────┼───────┼───────┼──────┼──────┼────┼──────┼───────┼─────┼─────┼───────┼────┼──────┼────┤ │1024.05│33.6 │4 │16 │60 │160 │0 │0 │0 │1.6 │0.8 │4 │10 │40 │100 │400 │5000│ └───────┴───────┴───────┴──────┴───────┴───────┴──────┴──────┴────┴──────┴───────┴─────┴─────┴───────┴────┴──────┴────┘ ┌─────┬──────┬───────┬─┬────────────────┬───────────────┬─────┐ │turns│gen │CASH │M│Builds │Upgrades │Queue│ ├─────┼──────┼───────┼─┼────────────────┼───────────────┼─────┤ │1000 │118484│71585.4│1│21 5 4 6 4 0 0 0│4 0 0 0 0 0 0 0│ │ └─────┴──────┴───────┴─┴────────────────┴───────────────┴─────┘ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The 2nd table output is the same as sample input #1.&lt;br/&gt; After 1000 turns, $71585 cash balance is generated, from 21 cursors, 5 grandmas 4 farms, 6 mines, and 4 factories, with cursors upgraded 4 times. The queue has been emptied of all orders.&lt;/p&gt; &lt;p&gt;The first table, ommitting the first column, has buidling then upgrade info. The first row is the cost of the next building or upgrade. The 2nd row has the total production for each building type in the left half, and the per building production (by type) in the right half.&lt;/p&gt; &lt;p&gt;The first column &lt;code&gt;CPS&lt;/code&gt; has in first row, total production rate per turn including special rules for cursors, and in 2nd row, an indicator formula I thought might be useful CPS + CASH / 100&lt;/p&gt; &lt;h1&gt;Challenge 0 (sample with output)&lt;/h1&gt; &lt;p&gt;What is the earliest turn you can build a farm (building 2)?&lt;/p&gt; &lt;p&gt;&lt;strong&gt;output&lt;/strong&gt; The output is the function inputs, followed by the simulation results to show that the simulation results in the farm being built. There is a better solution (ie fewer turns than 300) than this (&lt;code&gt;300 iterations&lt;/code&gt; with queue &lt;code&gt;0 0 0 1 0 2&lt;/code&gt;)that appears in a spoiler in the comments.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 300 G 0 0 0 1 0 2 ┌───────┬───────┬───────┬────┬────┬───────┬──────┬──────┬────┬──────┬───────┬─────┬─────┬───────┬────┬──────┬────┐ │CPS │cursor │grandma│farm│mine│factory│bank │temple│city│cursor│grandma│farm │mine │factory│bank│temple│city│ ├───────┼───────┼───────┼────┼────┼───────┼──────┼──────┼────┼──────┼───────┼─────┼─────┼───────┼────┼──────┼────┤ │6.6 │24.8832│120 │600 │1000│5000 │100000│1e6 │3e8 │100 │1000 │10000│50000│200000 │5e6 │1e8 │1e9 │ ├───────┼───────┼───────┼────┼────┼───────┼──────┼──────┼────┼──────┼───────┼─────┼─────┼───────┼────┼──────┼────┤ │6.60184│0.4 │0.8 │4 │0 │0 │0 │0 │0 │0.1 │0.8 │4 │10 │40 │100 │400 │5000│ └───────┴───────┴───────┴────┴────┴───────┴──────┴──────┴────┴──────┴───────┴─────┴─────┴───────┴────┴──────┴────┘ ┌─────┬─────┬─────┬─┬───────────────┬───────────────┬─────┐ │turns│gen │CASH │M│Builds │Upgrades │Queue│ ├─────┼─────┼─────┼─┼───────────────┼───────────────┼─────┤ │300 │664.6│0.184│1│4 1 1 0 0 0 0 0│0 0 0 0 0 0 0 0│ │ └─────┴─────┴─────┴─┴───────────────┴───────────────┴─────┘ &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge 1&lt;/h1&gt; &lt;p&gt;Find a build queue that generates over 100000 cash in 1000 turns.&lt;/p&gt; &lt;h1&gt;Challenge 2&lt;/h1&gt; &lt;p&gt;Get enough cash to buy a city ($300M) in under 6300 turns. (or close to it if you can&amp;#39;t make it)&lt;/p&gt; &lt;p&gt;Its ok to use tools such as the above to handcraft solutions. Solving this type of challenge automatically will be a later part 2 challenge.&lt;/p&gt; &lt;h1&gt;Bonus, TBD&lt;/h1&gt; &lt;p&gt;&lt;del&gt;A bonus for this challenge will be added later today. It involves adding special upgrades that interact with buildings/state in more comprehensive and intertwined manners.&lt;/del&gt; &lt;/p&gt; &lt;p&gt;Medals awarded: Gold to &lt;a href=&#34;/u/fibonaci&#34;&gt;u/fibonaci&lt;/a&gt; and &lt;a href=&#34;/u/godspiral&#34;&gt;u/godspiral&lt;/a&gt;. Silvers to other solutions.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/40035o/20160108_challenge_248_hard_notclick_game/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/40035o/20160108_challenge_248_hard_notclick_game/"&gt;[57 comments]&lt;/a&gt;</description></item><item><title>[2016-01-06] Challenge #248 [Intermediate] A Measure of Edginess</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3zqiiq/20160106_challenge_248_intermediate_a_measure_of/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3zqiiq/20160106_challenge_248_intermediate_a_measure_of/</guid><pubDate>Wed, 06 Jan 2016 16:30:54 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Want to write a program that actually understands images it sees? &lt;/p&gt; &lt;p&gt;One of the mainstays of the computer vision toolkit is &lt;em&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Edge_detection&#34;&gt;edge detection&lt;/a&gt;&lt;/em&gt; -- a series of different approaches to find places where color/brightness in an image changes abruptly. It is a process that takes a regular image as input, and returns an image that highlights locations at which &amp;quot;edges&amp;quot; exist. &lt;/p&gt; &lt;p&gt;On Monday we &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3zfajl/20160104_challenge_248_easy_draw_me_like_one_of/&#34;&gt;took a look&lt;/a&gt; at how the Netpbm image format works, and built a very simple drawing program using PPM images. Let&amp;#39;s use the same format (as it is very simple to read/write without any special libraries) to handle this challenge.&lt;/p&gt; &lt;h1&gt;Formal Input&lt;/h1&gt; &lt;p&gt;The input to your program is an image in PPM format. Because edge detection requires images that are larger than can be comfortably typed or copy/pasted, you may want to input this from a file.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Sample input:&lt;/strong&gt; &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/valve_original.png&#34;&gt;PNG version&lt;/a&gt;, &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/valve_original.ppm&#34;&gt;PPM (P3, RGB color) version&lt;/a&gt; (3.1 MB). Image courtesy of &lt;a href=&#34;https://en.wikipedia.org/wiki/Sobel_operator#/media/File:Valve_original_(1).PNG&#34;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;Formal Output&lt;/h1&gt; &lt;p&gt;The output must be a &lt;del&gt;black and white&lt;/del&gt; &lt;em&gt;grayscale&lt;/em&gt; (edited for clarification) image of the same size as the input. Edges from the input image must be highlighted in white.&lt;/p&gt; &lt;p&gt;This is not a strict &amp;quot;right or wrong answer&amp;quot; challenge. There are many ways to do edge detection, and they each may yield a different result. As such, expect outputs to vary. In general though, try to aim for crisp (thin) edges, with little noise from non-edges.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Sample output:&lt;/strong&gt; &lt;a href=&#34;https://raw.githubusercontent.com/fsufitch/dailyprogrammer/master/ideas/edgedetect/valve_sobel.png&#34;&gt;Converted to PNG&lt;/a&gt;. This is the sample output that Wikipedia gives for the application of a Sobel filter -- one of the most basic forms of edge detection.&lt;/p&gt; &lt;h1&gt;Challenge Inputs&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Taters: &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/potatoes.jpg&#34;&gt;JPG&lt;/a&gt;, &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/potatoes.ppm&#34;&gt;PPM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Utah teapot: &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/utah_teapot.jpg&#34;&gt;JPG&lt;/a&gt;, &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/utah_teapot.ppm&#34;&gt;PPM&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Advice dog: &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/advice_dog.jpg&#34;&gt;JPG&lt;/a&gt;, &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/edgedetect/advice_dog.ppm&#34;&gt;PPM&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Hints / guidance&lt;/h1&gt; &lt;p&gt;&lt;em&gt;If you prefer to figure it out / research it yourself, do not read this section&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;While the Wikipedia article on edge detection has plenty of details about how to approach it, it is a bit overwhelming for the purpose of a daily challenge. As such, here&amp;#39;s a quick overview of how one of the simpler edge detection approaches, the &lt;strong&gt;Sobel operator&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;The Sobel operator focuses on finding edges based on the &amp;quot;brightness&amp;quot; of the image, requiring each pixel in the image to have a &amp;quot;brightness&amp;quot; value. In other words, it requires a grayscale, not color image. The first step, then, is to convert the input (RGB color) image to grayscale -- perhaps by averaging the red, green, and blue values.&lt;/p&gt; &lt;p&gt;Next, we can actually apply the Sobel transformation. That involves iterating through each pixel and figuring out how &amp;quot;edgy&amp;quot; it is. This is done by looking at the pixels around it. Suppose our current pixel is &lt;code&gt;X&lt;/code&gt; in the table below, while its surrounding pixels are &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;h&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;a b c d X e f g h &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since at this point each of these values are integers, we can just do some simple arithmetic to figure out how much this selection of 9 pixels is changing horizontally. We&amp;#39;ll just subtract the rightmost three pixels from the leftmost ones (and give the central ones, &lt;code&gt;d&lt;/code&gt; and &lt;code&gt;e&lt;/code&gt; a bit more weight since they&amp;#39;re closer and more relevant to how edgy &lt;code&gt;X&lt;/code&gt; is).&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Edge_horizontal = E_h = (c + 2*e + h) - (a + 2*d + f) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Similarly, we can calculate the edginess in a vertical direction.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Edge_vertical = E_v = (f + 2*g + h) - (a + 2*b + c) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If we imagine these horizontal and vertical edges as the sides of a right triangle, we can calculate the overall edginess (and thus, the value of &lt;code&gt;X&lt;/code&gt;) by using the Pythagorean theorem.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;X = sqrt((E_h * E_h) + (E_v * E_v)) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;That&amp;#39;s it. When we apply this calculation for every pixel in the image, the outcome will be something like the problem&amp;#39;s sample output. We can then print out the PPM image using the same value for red, green, and blue, giving us the grayscale output we want.&lt;/p&gt; &lt;h1&gt;Finally...&lt;/h1&gt; &lt;p&gt;&lt;strong&gt;Have any cool ideas for challenges?&lt;/strong&gt; Come post them over in &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;! &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Got feedback?&lt;/strong&gt; We (the mods) would like to know how we&amp;#39;re doing! Are the problems too easy? Too hard? Just right? Boring/exciting? Varied/same? Anything you would like to see us do that we&amp;#39;re not doing? Anything we&amp;#39;re doing that we should just stop? Come by this &lt;a href=&#34;https://redd.it/3zgexx&#34;&gt;feedback thread&lt;/a&gt; and let us know! &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3zqiiq/20160106_challenge_248_intermediate_a_measure_of/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3zqiiq/20160106_challenge_248_intermediate_a_measure_of/"&gt;[71 comments]&lt;/a&gt;</description></item><item><title>r/DailyProgrammer is a Trending Subreddit of the Day!</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3zk7y5/rdailyprogrammer_is_a_trending_subreddit_of_the/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3zk7y5/rdailyprogrammer_is_a_trending_subreddit_of_the/</guid><pubDate>Tue, 05 Jan 2016 13:52:07 +0000</pubDate><description>&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3zk7y5/rdailyprogrammer_is_a_trending_subreddit_of_the/&#34;&gt;&lt;img src=&#34;https://b.thumbs.redditmedia.com/yK_6r3YinYWZqCLBZCiwLylDjFyKmXXOmjQXXC6-vIA.jpg&#34; alt=&#34;r/DailyProgrammer is a Trending Subreddit of the Day!&#34; title=&#34;r/DailyProgrammer is a Trending Subreddit of the Day!&#34; /&gt;&lt;/a&gt; &lt;/td&gt;&lt;td&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/trendingsubreddits/comments/3zj9e8/trending_subreddits_for_20160105_roculus/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3zk7y5/rdailyprogrammer_is_a_trending_subreddit_of_the/"&gt;[5 comments]&lt;/a&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><media:title>r/DailyProgrammer is a Trending Subreddit of the Day!</media:title><media:thumbnail url="https://b.thumbs.redditmedia.com/yK_6r3YinYWZqCLBZCiwLylDjFyKmXXOmjQXXC6-vIA.jpg" /></item><item><title>[2016-01-04] Challenge #248 [Easy] Draw Me Like One Of Your Bitmaps</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3zfajl/20160104_challenge_248_easy_draw_me_like_one_of/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3zfajl/20160104_challenge_248_easy_draw_me_like_one_of/</guid><pubDate>Mon, 04 Jan 2016 15:51:48 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Let&amp;#39;s build a basic paint program! Your task for today will be to create a basic paint program that can draw points, lines, and filled rectangles, then output an image file that many image viewers can read. But first, some background:&lt;/p&gt; &lt;h1&gt;Netpbm Formats&lt;/h1&gt; &lt;p&gt;PNG, GIF, JPEG, and even BMP are all image formats that are way too complex for an [Easy] challenge. Instead, we are going to be using &lt;a href=&#34;https://en.wikipedia.org/wiki/Netpbm_format&#34;&gt;Netpbm formats&lt;/a&gt;. More specifically, we will be using the PPM format, which supports 24-bit RGB color. Here&amp;#39;s how a &lt;code&gt;.ppm&lt;/code&gt; file looks (courtesy of Wikipedia):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;P3 # The P3 means colors are in ASCII, then 3 columns and 2 rows, # then 255 for max color, then RGB triplets 3 2 255 255 0 0 0 255 0 0 0 255 255 255 0 255 255 255 0 0 0 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Each pixel in the image is represented with 3 integers (0-255) for its Red, Green, and Blue pixel values. The above &lt;code&gt;.ppm&lt;/code&gt; file gets displayed as &lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/5/57/Tiny6pixel.png&#34;&gt;this&lt;/a&gt; (zoomed in). &lt;/p&gt; &lt;p&gt;Everything is separated by whitespace, but what the whitespace is (and how much of it there is) doesn&amp;#39;t matter. Comments (anything after a &lt;code&gt;#&lt;/code&gt;) are also ignored. In other words, the following PPM file renders exactly the same image:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;P3 3 2 255 255 0 0 0 255 0 0 0 255 255 255 0 255 255 255 0 0 0 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Lastly, note that in image processing, pixels are indexed using &lt;code&gt;(row, column)&lt;/code&gt; coordinates, counting up from &lt;code&gt;(0, 0)&lt;/code&gt;. Thus, in the image above, the pixel at &lt;code&gt;(0, 2)&lt;/code&gt; is on row 0, column 2, which has the RGB value of &lt;code&gt;0 0 255&lt;/code&gt;, or in other words, is blue.&lt;/p&gt; &lt;p&gt;Now that that&amp;#39;s out of the way, let&amp;#39;s get to painting!&lt;/p&gt; &lt;h1&gt;Formal Input&lt;/h1&gt; &lt;p&gt;Your input file will contain an X/Y size for an image to create, followed by a series of commands, each on its own line. The commands each start with &lt;code&gt;point&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt;, or &lt;code&gt;rect&lt;/code&gt;, followed by a RGB color, followed by whatever arguments the command needs. Here&amp;#39;s a sample:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;5 3 point 0 0 255 0 0 line 100 100 100 0 2 2 4 rect 77 0 0 1 3 2 2 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Breaking the file down line by line:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;5 3&lt;/code&gt;: The output image is 5 columns wide and 3 rows tall&lt;/li&gt; &lt;li&gt;&lt;code&gt;point&lt;/code&gt;: we&amp;#39;re drawing a single point... &lt;code&gt;0 0 255&lt;/code&gt;: with this RGB color (blue)... &lt;code&gt;0 0&lt;/code&gt;: at this coordinate (top left)&lt;/li&gt; &lt;li&gt;&lt;code&gt;line&lt;/code&gt;: we&amp;#39;re drawing a line... &lt;code&gt;100 100 100&lt;/code&gt;: with this RGB color (grey)... &lt;code&gt;0 2&lt;/code&gt;: from this coordinate... &lt;code&gt;2 4&lt;/code&gt; to this coordinate (for oblique lines, make a &amp;quot;best effort&amp;quot; to approximate the line; no need to do any antialiasing or other fancy stuff)&lt;/li&gt; &lt;li&gt;&lt;code&gt;rect&lt;/code&gt;: we&amp;#39;re drawing a rectangle... &lt;code&gt;77 0 0&lt;/code&gt;: with this RGB color (dark red)... &lt;code&gt;1 3&lt;/code&gt;: with its top left coordinate here... &lt;code&gt;2 2&lt;/code&gt; with its sides being 2 pixels tall and 2 pixels wide&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The &amp;quot;unpainted&amp;quot; background can be assumed to be black (&lt;code&gt;0 0 0&lt;/code&gt;).&lt;/p&gt; &lt;h1&gt;Formal Output&lt;/h1&gt; &lt;p&gt;The output PPM file for the above example should look like this (more or less, spacing notwithstanding):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;P3 5 3 255 0 0 255 0 0 0 100 100 100 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 77 0 0 77 0 0 0 0 0 0 0 0 0 0 0 77 0 0 77 0 0 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;And it should render like &lt;a href=&#34;https://i.imgur.com/EaGSFdZ.png&#34;&gt;this&lt;/a&gt; (zoomed in).&lt;/p&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;400 300 rect 0 0 255 0 0 300 400 line 255 255 255 0 0 299 399 line 255 255 255 299 0 0 399 rect 200 200 0 100 150 100 100 point 0 0 0 150 200 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;p&gt;Actual output: &lt;a href=&#34;https://raw.githubusercontent.com/fsufitch/dailyprogrammer/master/248_easy/sample2_tight.ppm&#34;&gt;https://raw.githubusercontent.com/fsufitch/dailyprogrammer/master/248_easy/sample2_tight.ppm&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Converted to PNG and posted to Imgur: &lt;a href=&#34;https://i.imgur.com/nRmSoUf.png&#34;&gt;https://i.imgur.com/nRmSoUf.png&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Big Challenge&lt;/h1&gt; &lt;p&gt;Run these commands: &lt;a href=&#34;https://raw.githubusercontent.com/fsufitch/dailyprogrammer/master/248_easy/sierpinsky.txt&#34;&gt;https://raw.githubusercontent.com/fsufitch/dailyprogrammer/master/248_easy/sierpinsky.txt&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You should get something like this: &lt;a href=&#34;https://i.imgur.com/5F31DSE.png&#34;&gt;https://i.imgur.com/5F31DSE.png&lt;/a&gt;&lt;/p&gt; &lt;h1&gt;Bonus Points&lt;/h1&gt; &lt;p&gt;If you would like more of a challenge, implement the following commands:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;bline &amp;lt;R&amp;gt; &amp;lt;G&amp;gt; &amp;lt;B&amp;gt; &amp;lt;row1&amp;gt; &amp;lt;col1&amp;gt; &amp;lt;row2&amp;gt; &amp;lt;col2&amp;gt;&lt;/code&gt; draw a line using &lt;a href=&#34;https://en.wikipedia.org/wiki/Bresenham%27s_line_algorithm&#34;&gt;Bresenham&amp;#39;s line algorithm&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;circle &amp;lt;R&amp;gt; &amp;lt;G&amp;gt; &amp;lt;B&amp;gt; &amp;lt;centerRow&amp;gt; &amp;lt;centerCol&amp;gt; &amp;lt;radius&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ellipse &amp;lt;R&amp;gt; &amp;lt;G&amp;gt; &amp;lt;B&amp;gt; &amp;lt;centerRow&amp;gt; &amp;lt;centerCol&amp;gt; &amp;lt;radiusVertical&amp;gt; &amp;lt;radiusHorizontal&amp;gt;&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;fill &amp;lt;R&amp;gt; &amp;lt;G&amp;gt; &amp;lt;B&amp;gt; &amp;lt;row&amp;gt; &amp;lt;col&amp;gt;&lt;/code&gt; (flood fill one color starting at the given point)&lt;/li&gt; &lt;li&gt;&lt;code&gt;smartfill &amp;lt;R&amp;gt; &amp;lt;G&amp;gt; &amp;lt;B&amp;gt; &amp;lt;row&amp;gt; &amp;lt;col&amp;gt; &amp;lt;tolerance&amp;gt;&lt;/code&gt; (flood fill similar colors starting at the given point, filling pixels as long as the gradient distance (&lt;code&gt;sqrt( (r2-r1)^2 + (g2-g1)^2 + (b2-b1)^2)&lt;/code&gt;) is less than the tolerance.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Resources&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Online PPM format converter: &lt;a href=&#34;https://convertio.co/ppm-png/&#34;&gt;https://convertio.co/ppm-png/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;For local command line conversion: &lt;a href=&#34;https://www.imagemagick.org/&#34;&gt;https://www.imagemagick.org/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;For local GUI editing/conversion: &lt;a href=&#34;https://www.gimp.org/&#34;&gt;https://www.gimp.org/&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt; &lt;p&gt;&lt;strong&gt;Have any cool ideas for challenges?&lt;/strong&gt; Come post them over in &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;!&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Got feedback?&lt;/strong&gt; We (the mods) would like to know how we&amp;#39;re doing! Are the problems too easy? Too hard? Just right? Boring/exciting? Varied/same? Anything you would like to see us do that we&amp;#39;re not doing? Anything we&amp;#39;re doing that we should just stop? Come by this &lt;a href=&#34;https://redd.it/3zgexx&#34;&gt;feedback thread&lt;/a&gt; and let us know!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3zfajl/20160104_challenge_248_easy_draw_me_like_one_of/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3zfajl/20160104_challenge_248_easy_draw_me_like_one_of/"&gt;[67 comments]&lt;/a&gt;</description></item><item><title>[2016-01-01] CHallenge #247 [Hard] Zombies on the highways!</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3z1cxs/20160101_challenge_247_hard_zombies_on_the/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3z1cxs/20160101_challenge_247_hard_zombies_on_the/</guid><pubDate>Fri, 01 Jan 2016 17:54:12 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Happy new year everyone!&lt;/p&gt; &lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Well, the zombie apocalypse finally happened. Zombies are everywhere, and you need to get from city to city to the last bastion of hope for humanity - &lt;a href=&#34;https://www.google.com/maps/place/Last+Chance,+CA/@39.0848839,-120.6641083,7z/data=!4m2!3m1!1s0x809bbbd69ad1f261:0xf9407c77fe97af2&#34;&gt;Last Chance, CA&lt;/a&gt;. Some highways are more clogged than others. You have one secret weapon: the BFZG 3000, which completely clears whichever highway you&amp;#39;re on, but you can only use it once! Get your clunky RV, thankfully solar powered, to Last Chance whilst encountering the fewest number of zombies, with the help of your BFZG 3000.&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;Input is a list of 3-tuples: The first two numbers indicate an undirected edge between cities, and the third number lists the number of zombies on that road.Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;(0, 1, 394), (0, 2, 4), (1, 3, 50), (1, 2, 5), (2, 3, 600) &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output description&lt;/h1&gt; &lt;p&gt;Display the list of cities that you traversed whilst minimizing the number of zombies encountered. Display when you used your BFZG 3000 and how many zombies you encountered (minus those you obliterated with the BFZG) and the total time in milliseconds. You start at city 0 and end at city N-1, (AKA Last Chance). In the example above, it would be prudent to go from 0 to 2 and then blast our BFZG 3000 into 3.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;0 to 2, 2 *BLAST* to 3, Reached Last Chance encountering 4 zombies in 1 milliseconds. &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Notes&lt;/h1&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Shortest_path_problem&#34;&gt;Shortest path algorithms&lt;/a&gt; are a good starting place.&lt;/p&gt; &lt;h1&gt;Challenge Inputs&lt;/h1&gt; &lt;p&gt;1.&lt;/p&gt; &lt;p&gt;(0, 1, 1024), (1, 3, 1029), (1, 5, 2720), (2, 1, 1065), (3, 0, 635), (4, 1, 811), (4, 2, 1732), (4, 3, 1918), (4, 5, 1016), (6, 5, 939)&lt;/p&gt; &lt;p&gt;2.&lt;/p&gt; &lt;p&gt;(0, 20, 2026), (1, 39, 1801), (2, 4, 2758), (2, 19, 2131), (2, 32, 1480), (2, 42, 1888), (2, 46, 1052), (3, 24, 2138), (4, 24, 8), (4, 30, 60), (4, 36, 1540), (5, 14, 77), (5, 40, 1063), (6, 39, 1016), (6, 42, 2101), (9, 30, 234), (11, 49, 262), (12, 40, 2158), (14, 22, 2498), (15, 6, 423), (16, 5, 1292), (16, 11, 1004), (17, 29, 626), (18, 22, 170), (18, 46, 1878), (19, 8, 1331), (20, 38, 1829), (22, 13, 2500), (23, 6, 1786), (25, 3, 1064), (25, 18, 1142), (25, 27, 299), (26, 19, 1140), (26, 20, 839), (27, 37, 1006), (28, 18, 2435), (28, 30, 1145), (29, 43, 1339), (31, 7, 1768), (31, 11, 785), (31, 21, 1772), (31, 27, 114), (32, 17, 2170), (32, 37, 1236), (33, 39, 2019), (33, 44, 1477), (35, 32, 2966), (35, 38, 2390), (36, 10, 2965), (36, 34, 1330), (37, 36, 1901), (37, 48, 2272), (39, 45, 1088), (40, 9, 370), (42, 46, 2388), (46, 0, 1737), (47, 36, 2140), (48, 36, 1068), (49, 17, 2520), (49, 41, 499)&lt;/p&gt; &lt;p&gt;3.&lt;/p&gt; &lt;p&gt;(0, 4, 2330), (1, 31, 1090), (1, 63, 759), (1, 92, 1204), (1, 97, 2103), (2, 72, 72), (5, 11, 2163), (6, 95, 1234), (7, 36, 1647), (7, 52, 690), (8, 27, 293), (9, 44, 2369), (10, 15, 103), (10, 51, 5), (12, 8, 2705), (14, 82, 2587), (15, 42, 2759), (16, 14, 56), (16, 70, 1264), (17, 78, 22), (18, 10, 2540), (19, 37, 241), (20, 15, 2635), (21, 14, 1381), (21, 17, 2953), (21, 45, 357), (22, 4, 1023), (22, 23, 670), (22, 34, 1664), (23, 46, 1885), (24, 89, 1965), (25, 3, 2497), (25, 40, 2087), (25, 47, 2091), (26, 38, 2008), (27, 33, 2271), (27, 91, 2915), (28, 60, 2349), (29, 89, 2822), (32, 77, 1089), (32, 97, 210), (33, 57, 23), (33, 59, 2752), (33, 87, 2108), (34, 7, 2621), (37, 31, 7), (41, 16, 990), (45, 67, 2632), (45, 90, 456), (46, 80, 901), (47, 99, 437), (49, 97, 1067), (50, 78, 1695), (52, 60, 2519), (52, 98, 2926), (53, 28, 1245), (53, 37, 1628), (55, 36, 1176), (55, 73, 812), (55, 75, 2529), (56, 23, 2635), (56, 78, 1952), (57, 45, 2976), (58, 6, 364), (60, 14, 1610), (61, 31, 733), (61, 39, 2063), (63, 11, 1780), (63, 30, 832), (63, 94, 561), (64, 68, 243), (65, 1, 1572), (67, 81, 517), (67, 87, 375), (69, 30, 995), (69, 37, 1639), (69, 47, 2977), (70, 9, 849), (70, 32, 342), (71, 26, 2132), (71, 75, 2243), (72, 54, 562), (75, 13, 1589), (75, 43, 737), (75, 61, 1090), (75, 89, 289), (76, 37, 1984), (76, 66, 552), (77, 9, 1790), (77, 45, 1642), (79, 20, 798), (79, 26, 619), (80, 57, 2444), (80, 67, 1818), (81, 31, 2119), (82, 35, 1220), (82, 37, 546), (83, 12, 572), (83, 77, 2156), (84, 57, 624), (84, 91, 423), (85, 66, 979), (86, 59, 102), (87, 74, 935), (89, 2, 2412), (89, 36, 889), (90, 95, 544), (91, 72, 1201), (92, 9, 79), (92, 40, 1329), (92, 88, 82), (93, 56, 875), (93, 62, 1425), (93, 64, 2400), (94, 2, 2209), (96, 60, 1116), (97, 37, 2921), (97, 48, 2488), (98, 44, 2609), (98, 56, 1335)&lt;/p&gt; &lt;h1&gt;Bonus&lt;/h1&gt; &lt;p&gt;Consider if you could have 3 blasts of your BFZG.. how would that differ? Bonus bonus: Solve this in a stochastic manner to get around that pesky exponential cost. &lt;/p&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/captain_breakdance&#34;&gt;/u/captain_breakdance&lt;/a&gt;. If you have any challenge ideas please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a good chance we&amp;#39;ll use them!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3z1cxs/20160101_challenge_247_hard_zombies_on_the/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3z1cxs/20160101_challenge_247_hard_zombies_on_the/"&gt;[24 comments]&lt;/a&gt;</description></item><item><title>[2015-12-30] Challenge #247 [Intermediate] Moving (diagonally) Up in Life</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3ysdm2/20151230_challenge_247_intermediate_moving/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3ysdm2/20151230_challenge_247_intermediate_moving/</guid><pubDate>Wed, 30 Dec 2015 14:43:34 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;&lt;a href=&#34;#IntermediateIcon&#34;&gt;&lt;/a&gt; &lt;em&gt;(Intermediate)&lt;/em&gt;: Moving (diagonally) Up in Life&lt;/h1&gt; &lt;p&gt;Imagine you live on a grid of characters, like the one below. For this example, we&amp;#39;ll use a 2*2 grid for simplicity.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;. X X . &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You start at the &lt;code&gt;X&lt;/code&gt; at the bottom-left, and you want to get to the &lt;code&gt;X&lt;/code&gt; at the top-right. However, you can only move up, to the right, and diagonally right and up in one go. This means there are three possible paths to get from one &lt;code&gt;X&lt;/code&gt; to the other &lt;code&gt;X&lt;/code&gt; (with the path represented by &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;|&lt;/code&gt;):&lt;/p&gt; &lt;pre&gt;&lt;code&gt;+-X . X . X | / | X . X . X-+ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;What if you&amp;#39;re on a 3*3 grid, such as this one?&lt;/p&gt; &lt;pre&gt;&lt;code&gt;. . X . . . X . . &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Let&amp;#39;s enumerate all the possible paths:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;+---X . +-X . +-X . +-X . . X . +-X . . X | / | | / | | | . . + . . +-+ . . + . . / . . | . +---+ | | | / / | | X . . X . . X . . X . . X . . X-+ . X . . . . X . . X . . X . . X . . X . . X / | | | | / . + . . +-+ . . + . . | . +-+ +-+ . | | / | / | X-+ . X-+ . X-+ . X---+ X . . X . . &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;That makes a total of 13 paths through a 3*3 grid.&lt;/p&gt; &lt;p&gt;However, what if you wanted to pass through 3 &lt;code&gt;X&lt;/code&gt;s on the grid? Something like this?&lt;/p&gt; &lt;pre&gt;&lt;code&gt;. . X . X . X . . &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Because we can only move up and right, if we&amp;#39;re going to pass through the middle &lt;code&gt;X&lt;/code&gt; then there is no possible way to reach the top-left and bottom-right space on the grid:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; . X . X . X . &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Hence, this situation is like two 2*2 grids joined together end-to-end. This means there are 3&lt;sup&gt;2&lt;/sup&gt;=9 possible paths through the grid, as there are 3 ways to traverse the 2*2 grid. (Try it yourself!)&lt;/p&gt; &lt;p&gt;Finally, some situations are impossible. Here, you cannot reach all 4 &lt;code&gt;X&lt;/code&gt;s on the grid - either the top-left or bottom-right &lt;code&gt;X&lt;/code&gt; must be missed:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;X . X . . . X . X &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This is because we cannot go left or down, only up or right - so this situation is an invalid one.&lt;/p&gt; &lt;p&gt;Your challenge today is, given a grid with a certain number of Xs on it, determine first whether the situation is valid (ie. all &lt;code&gt;X&lt;/code&gt;s can be reached), and if it&amp;#39;s valid, the number of possible paths traversing all the &lt;code&gt;X&lt;/code&gt;s.&lt;/p&gt; &lt;h1&gt;Formal Inputs and Outputs&lt;/h1&gt; &lt;h2&gt;Input Specification&lt;/h2&gt; &lt;p&gt;You&amp;#39;ll be given a tuple &lt;strong&gt;M, N&lt;/strong&gt; on one line, followed by &lt;strong&gt;N&lt;/strong&gt; further lines (of length &lt;strong&gt;M&lt;/strong&gt;) containing a grid of spaces and &lt;code&gt;X&lt;/code&gt;s, like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;5, 4 ....X ..X.. ..... X.... &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that the top-right &lt;code&gt;X&lt;/code&gt; need not be at the very top-right of the grid, same for the bottom-left &lt;code&gt;X&lt;/code&gt;. Also, unlike the example grids shown above, there are no spaces between the cells.&lt;/p&gt; &lt;h2&gt;Output Description&lt;/h2&gt; &lt;p&gt;Output the number of valid path combinations in the input, or an error message if the input is invalid. For the above input, the output is:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;65 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Sample Inputs and Outputs&lt;/h1&gt; &lt;h2&gt;Example 1&lt;/h2&gt; &lt;h3&gt;Input&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;3, 3 ..X .X. X.. &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Output&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;9 &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Example 2&lt;/h2&gt; &lt;h3&gt;Input&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;10, 10 .........X .......... ....X..... .......... .......... ....X..... .......... .X........ .......... X......... &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Output&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;7625 &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;£xample 3&lt;/h2&gt; &lt;h3&gt;Input&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;5, 5 ....X .X... ..... ...X. X.... &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Output&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;&amp;lt;invalid input&amp;gt;&lt;/strong&gt;&lt;/p&gt; &lt;h2&gt;Example 4&lt;/h2&gt; &lt;h3&gt;Input&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;7, 7 ...X..X ....... ....... .X.X... ....... ....... XX..... &lt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Output&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;1 &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Example 5&lt;/h2&gt; &lt;h3&gt;Input&lt;/h3&gt; &lt;pre&gt;&lt;code&gtlt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Output&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;19475329563 &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Example 6&lt;/h2&gt; &lt;h3&gt;Input&lt;/h3&gt; &lt;pre&gt;&lt;code&gtlt;/code&gt;&lt;/pre&gt; &lt;h3&gt;Output&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;6491776521 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Finally&lt;/h1&gt; &lt;p&gt;Got any cool challenge ideas? Submit them to &lt;a href=&#34;/r/DailyProgrammer_Ideas&#34;&gt;/r/DailyProgrammer_Ideas&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Elite6809&#34;&gt; Elite6809 &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3ysdm2/20151230_challenge_247_intermediate_moving/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3ysdm2/20151230_challenge_247_intermediate_moving/"&gt;[62 comments]&lt;/a&gt;</description></item><item><title>[2015-12-28] Challenge #247 [Easy] Secret Santa</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3yiy2d/20151228_challenge_247_easy_secret_santa/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3yiy2d/20151228_challenge_247_easy_secret_santa/</guid><pubDate>Mon, 28 Dec 2015 14:28:41 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Every December my friends do a &amp;quot;Secret Santa&amp;quot; - the traditional gift exchange where everybody is randomly assigned to give a gift to a friend. To make things exciting, the matching is all random (you cannot pick your gift recipient) and nobody knows who got assigned to who until the day when the gifts are exchanged - hence, the &amp;quot;secret&amp;quot; in the name.&lt;/p&gt; &lt;p&gt;Since we&amp;#39;re a big group with many couples and families, often a husband gets his wife as secret santa (or vice-versa), or a father is assigned to one of his children. This creates a series of issues:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you have a younger kid and he/she is assigned to you, you might end up paying for your own gift and ruining the surprise.&lt;/li&gt; &lt;li&gt;When your significant other asks &amp;quot;who did you get for Secret Santa&amp;quot;, you have to lie, hide gifts, etc.&lt;/li&gt; &lt;li&gt;The inevitable &amp;quot;this game is rigged!&amp;quot; commentary on the day of revelation.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To fix this, you must design a program that randomly assigns the Secret Santa gift exchange, but &lt;em&gt;prevents people from the same family to be assigned to each other&lt;/em&gt;.&lt;/p&gt; &lt;h1&gt;Input&lt;/h1&gt; &lt;p&gt;A list of all Secret Santa participants. People who belong to the same family are listed in the same line separated by spaces. Thus, &amp;quot;Jeff Jerry&amp;quot; represents two people, Jeff and Jerry, who are family and should not be assigned to eachother.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Joe Jeff Jerry Johnson &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output&lt;/h1&gt; &lt;p&gt;The list of Secret Santa assignments. As Secret Santa is a random assignment, output may vary.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Joe -&amp;gt; Jeff Johnson -&amp;gt; Jerry Jerry -&amp;gt; Joe Jeff -&amp;gt; Johnson &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;But &lt;strong&gt;not&lt;/strong&gt; &lt;code&gt;Jeff -&amp;gt; Jerry&lt;/code&gt; or &lt;code&gt;Jerry -&amp;gt; Jeff&lt;/code&gt;!&lt;/p&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;Sean Winnie Brian Amy Samir Joe Bethany Bruno Anna Matthew Lucas Gabriel Martha Philip Andre Danielle Leo Cinthia Paula Mary Jane Anderson Priscilla Regis Julianna Arthur Mark Marina Alex Andrea &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Bonus&lt;/h1&gt; &lt;p&gt;The assignment list must avoid &amp;quot;closed loops&amp;quot; where smaller subgroups get assigned to each other, breaking the overall loop.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Joe -&amp;gt; Jeff Jeff -&amp;gt; Joe # Closed loop of 2 Jerry -&amp;gt; Johnson Johnson -&amp;gt; Jerry # Closed loop of 2 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Credit&lt;/h1&gt; &lt;p&gt;Thanks to &lt;a href=&#34;/u/oprimo&#34;&gt;/u/oprimo&lt;/a&gt; for his idea in &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/G33kDude&#34;&gt; G33kDude &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3yiy2d/20151228_challenge_247_easy_secret_santa/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3yiy2d/20151228_challenge_247_easy_secret_santa/"&gt;[109 comments]&lt;/a&gt;</description></item><item><title>[2015-12-23] Challenge # 246 [Intermediate] Letter Splits</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3xye4g/20151223_challenge_246_intermediate_letter_splits/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3xye4g/20151223_challenge_246_intermediate_letter_splits/</guid><pubDate>Wed, 23 Dec 2015 12:05:27 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;This problem is a simplified version of Text Segmentation in Natural Language Processing.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Given a positive integer, return all the ways that the integer can be represented by letters using the mapping:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;1&lt;/code&gt; -&amp;gt; &lt;code&gt;A&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;2&lt;/code&gt; -&amp;gt; &lt;code&gt;B&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;code&gt;3&lt;/code&gt; -&amp;gt; &lt;code&gt;C&lt;/code&gt;&lt;/p&gt; &lt;p&gt;...&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;code&gt;25&lt;/code&gt; -&amp;gt; &lt;code&gt;Y&lt;/code&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;code&gt;26&lt;/code&gt; -&amp;gt; &lt;code&gt;Z&lt;/code&gt;&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For example, the integer &lt;code&gt;1234&lt;/code&gt; can be represented by the words :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;ABCD&lt;/code&gt; -&amp;gt; &lt;code&gt;[1,2,3,4]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;AWD&lt;/code&gt; -&amp;gt; &lt;code&gt;[1,23,4]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;LCD&lt;/code&gt; -&amp;gt; &lt;code&gt;[12,3,4]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Input description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;A positive integer:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Output description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All possible ways the number can be represented once per line.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Examples&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Example 1:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1234 ABCD AWD LCD &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Example 2:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1234567899876543210 LCDEFGHIIHGFEDCBJ AWDEFGHIIHGFEDCBJ ABCDEFGHIIHGFEDCBJ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Example 3:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;10520 jet &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Bonus&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We can use our beloved &lt;a href=&#34;https://code.google.com/p/dotnetperls-controls/downloads/detail?name=enable1.txt&#34;&gt;enable1.txt&lt;/a&gt; (or other if you prefer that) to find real words or even sentences.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Example 1&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1321205 ACUTE MUTE &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Example 2&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1252020518 LETTER ABETTER &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Example 3&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;85121215231518124 HELLOWORLD &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Bonus Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;81161625815129412519419122516181571811313518 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Finally&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Thanks to &lt;a href=&#34;/u/wizao&#34;&gt;/u/wizao&lt;/a&gt; and &lt;a href=&#34;/u/smls&#34;&gt;/u/smls&lt;/a&gt; for the idea and bonus idea&lt;/p&gt; &lt;p&gt;Have a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/fvandepitte&#34;&gt; fvandepitte &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3xye4g/20151223_challenge_246_intermediate_letter_splits/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3xye4g/20151223_challenge_246_intermediate_letter_splits/"&gt;[59 comments]&lt;/a&gt;</description></item><item><title>[2015-12-21] Challenge # 246 [Easy] X-mass lights</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3xpgj8/20151221_challenge_246_easy_xmass_lights/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3xpgj8/20151221_challenge_246_easy_xmass_lights/</guid><pubDate>Mon, 21 Dec 2015 14:37:44 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We are going to calculate how long we can light our X-mass lights with 1 battery. First off all some quick rules in the electronics.&lt;/p&gt; &lt;p&gt;All things connected in parallel share the same voltage, but they have their own current. All things connected in serial share the same current, but they have their own voltage.&lt;/p&gt; &lt;p&gt;Parallel:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;----O---- | | ---O--- &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Serial:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;---O---O--- &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;We are going to use 9V batteries for our calculation. They suply a voltage of 9V (Volt) (big surprise there) and have a capacity from around 1200mAh (milliAmpere hour).&lt;/p&gt; &lt;p&gt;The lifetime of the battery can be calculate by deviding the capacity by the total Amperes we draw. E.g. If we have a 9V battery and we use a light that uses 600 mA, we can light the light for 2 hours (1200/600)&lt;/p&gt; &lt;p&gt;For our lights we&amp;#39;ll use average leds, wich need an voltage of 1.7V and a current of 20mA to operate. Since we have a 9V we can have a max of 5 leds connected in serial. But by placing circuits in parallel, we can have more than 5 leds in total, but then we&amp;#39;ll drain the battery faster.&lt;/p&gt; &lt;p&gt;I&amp;#39;ll split the challengs up in a few parts from here on.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Part 1&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;As input you&amp;#39;ll be given the length in hours that the lights needs te be lit. You have give me the max number of led&amp;#39;s we can have for that time&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;300 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Explanation:&lt;/p&gt; &lt;p&gt;We can have 5 leds in serial, but then they&amp;#39;ll take only a current of 20mA. The battery can give us 1200mA for 1 hour. So if we devide 1200 by 20 we get that we could have 60 times 5 leds.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Inputs&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1 4 8 12 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Outputs&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;300 75 35 (37 is also possible, but then we can&amp;#39;t have 5 leds in serial for each parallel circuit) 25 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Part 2&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Draw out the circuit. A led is drawn in this way &lt;code&gt;-|&amp;gt;|-&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;20 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;*--|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|--* | | --|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|-- | | --|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|-- &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;inputs&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;12 6 100 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Part 3&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Our circuit is not complete without a resistor to regulate the current and catch the voltage difference. We need to calcute what the resistance should be from the resistor. This can be done by using &lt;a href=&#34;https://en.wikipedia.org/wiki/Ohm%27s_law&#34;&gt;Ohm&amp;#39;s law&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;We know we can have 5 leds of 1.7V in serie, so that is 0.5V over the resistor. If we know the current we need we can calculate the resistance.&lt;/p&gt; &lt;p&gt;E.g. If we need 1 hour we can have a current of 1200 mA and we have 0.5V so the resistance is the voltage devided by the current. =&amp;gt; 0.5(V)/1.2(A) = 0.417 ohms&lt;/p&gt; &lt;p&gt;&lt;em&gt;inputs&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1 4 8 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Outputs&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;0.417 1.667 3.333 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Part 4&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Putting it all Together&lt;/p&gt; &lt;p&gt;You&amp;#39;ll be given 5 numbers, the voltage drop over a Led, the current it needs, the voltage of the battery and the capacity and the time the leds need to be lit.&lt;/p&gt; &lt;p&gt;The units are in voltage V, current mA (devide by 1000 for A), voltave V, capacity (mAh), timespan h&lt;/p&gt; &lt;p&gt;&lt;em&gt;input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1.7 20 9 1200 20 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Resistor: 8.333 Ohms Scheme: *--|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|--* | | --|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|-- | | --|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|---|&amp;gt;|-- &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Finally&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Have a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;/r/derision&#34;&gt;/r/derision&lt;/a&gt; spotted a mistake.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/fvandepitte&#34;&gt; fvandepitte &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3xpgj8/20151221_challenge_246_easy_xmass_lights/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3xpgj8/20151221_challenge_246_easy_xmass_lights/"&gt;[54 comments]&lt;/a&gt;</description></item><item><title>[2015-12-18] Challenge #245 [Hard] Guess Who(is)?</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3xdmtw/20151218_challenge_245_hard_guess_whois/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3xdmtw/20151218_challenge_245_hard_guess_whois/</guid><pubDate>Fri, 18 Dec 2015 19:12:21 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Guess Who(is)?&lt;/h1&gt; &lt;p&gt;You are working as the only software engineer at a small but successful startup. One day, though, there is a problem. You got this e-mail from the CEO:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;My dearest programmer,&lt;/p&gt; &lt;p&gt;Wonderful news! It looks like our website exploded in popularity last night! We are going to be rich! We have hundreds to thousands of people accessing the site every second, and growing fast.&lt;/p&gt; &lt;p&gt;To capitalize on this, we need to immediately identify who the biggest sources of traffic are. Fortunately, my friend Quincy has sent me this huge list of internet addresses coupled with associated names. Isn&amp;#39;t that cool?&lt;/p&gt; &lt;p&gt;Can you write something that takes our huge amount of visitors, compares it against this list of addresses/names, and creates some statistics? I dunno, a list of names with a count of how many visits they each paid us?&lt;/p&gt; &lt;p&gt;Do this and I&amp;#39;ll throw a pizza party for everyone!&lt;/p&gt; &lt;p&gt;Toodles!&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;/u/Blackshell&#34;&gt;/u/Blackshell&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;lt;attachment: ip_ranges.txt, 33 MB&amp;gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;The attached file looks like it contains a list of IP address ranges and names. Using your server administration skills, you are also able to extract a file with a long list of IPs of visitors to your company&amp;#39;s website. That means it&amp;#39;s all in your capable hands now. Can you write a program that can &lt;em&gt;look up more than 1000 IPs per second&lt;/em&gt;, generate statistics, save the day, and get pizza?&lt;/p&gt; &lt;h1&gt;Formal Input&lt;/h1&gt; &lt;p&gt;The input comes in two pieces. The first is a text file containing Quincy&amp;#39;s IP ranges. These come as one entry per line, with two space-separated IPs and a name.&lt;/p&gt; &lt;p&gt;The second file is just a list of IPs, one per line, that must be looked up.&lt;/p&gt; &lt;h2&gt;Sample Input IPs&lt;/h2&gt; &lt;p&gt;The input is composed of a large number of lines that contain two IPs, followed by the name of whatever/whoever is associated with the IP range.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;123.45.17.8 123.45.123.45 University of Vestige 123.50.1.1 123.50.10.1 National Center for Pointlessness 188.0.0.3 200.0.0.250 Mayo Tarkington 200.0.0.251 200.0.0.255 Daubs Haywire Committee 200.0.1.1 200.255.255.255 Geopolitical Encyclopedia 222.222.222.222 233.233.233.233 SAP Rostov 250.1.2.3 250.4.5.6 Shavian Refillable Committee 123.45.100.0 123.60.32.1 United Adverbs 190.0.0.1 201.1.1.1 Shavian Refillable Committee 238.0.0.1 254.1.2.3 National Center for Pointlessness &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As a visual representation of it, I have made a &lt;a href=&#34;https://i.imgur.com/AL6cASf.png&#34;&gt;quick whiteboard doodle&lt;/a&gt; of the ranges in relation to each other (not to scale). A couple of things to note: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;These IP ranges are &lt;strong&gt;not guaranteed to be IPv4 &amp;quot;subnets&amp;quot;&lt;/strong&gt;. This means that they may not be accurately represented by prefix-based &lt;a href=&#34;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing#CIDR_blocks&#34;&gt;CIDR blocks&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;The ranges may (and probably do) overlap. Possibly more than two layers deep.&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;There may be multiple ranges associated with the same name.&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;em&gt;If you are unfamiliar with how IPs addresses work, see the section at the bottom of the post.&lt;/em&gt;&lt;/p&gt; &lt;h2&gt;Sample Input Lookups&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;250.1.3.4 123.50.1.20 189.133.73.57 123.50.1.21 250.1.2.4 123.50.1.21 250.1.3.100 250.1.3.5 188.0.0.5 123.50.1.100 123.50.2.34 123.50.1.100 123.51.100.52 127.0.0.1 123.50.1.22 123.50.1.21 188.0.0.5 123.45.101.100 123.45.31.52 230.230.230.230 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Formal Output&lt;/h1&gt; &lt;p&gt;You must output a reverse-ordered list of the total number of times the varying institutions/people visited your website. Each visitor IP should only count once, and it should count for the &lt;strong&gt;smallest&lt;/strong&gt; range it is a member of. IPs that were not found in the given rangescan count as &lt;code&gt;&amp;lt;unknown&amp;gt;&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;8 - National Center for Pointlessness 4 - Shavian Refillable Committee 3 - Mayo Tarkington 2 - University of Vestige 1 - SAP Rostov 1 - United Adverbs 1 - &amp;lt;unknown&amp;gt; &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Explanation&lt;/h2&gt; &lt;p&gt;Here&amp;#39;s each input IP and which name it mapped to:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;National Center for Pointlessness 123.50.1.20 123.50.1.21 123.50.1.22 123.50.1.21 123.50.1.21 123.50.1.100 123.50.1.100 123.50.2.34 Shavian Refillable Committee 250.1.2.4 250.1.3.4 250.1.3.5 250.1.3.100 Mayo Tarkington 188.0.0.5 188.0.0.5 189.133.73.57 University of Vestige 123.45.101.100 123.45.31.52 SAP Rostov 230.230.230.230 United Adverbs 123.51.100.52 &amp;lt;unknown&amp;gt; 127.0.0.1 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;The Catch / The Challenge&lt;/h1&gt; &lt;p&gt;This seems simple, right? Well... Make your program work efficiently for the below inputs. The target speed (per your CEO&amp;#39;s email) is at least 1,000-2,000 queries per second. Target run time is listed for each query file, assuming 1,500 queries per second. You should try to hit that run time even using the largest IP range file.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;IP range files:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/fsufitch/dailyprogrammer/master/ideas/whois/ips500.txt&#34;&gt;500 ranges&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/whois/ips2500.txt&#34;&gt;2,500 ranges&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/whois/ips10k.txt&#34;&gt;10,000 ranges&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/whois/ips300k.txt&#34;&gt;300,000 ranges&lt;/a&gt; (file size warning: 15 MB)&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/whois/ips1mil.txt&#34;&gt;1,000,000 ranges&lt;/a&gt; (file size warning: 49 MB)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Query files:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/whois/query100.txt&#34;&gt;100 queries&lt;/a&gt;; Target: 0.07 sec&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/whois/query1k.txt&#34;&gt;1,000 queries&lt;/a&gt;; Target: 0.67 sec&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/raw/master/ideas/whois/query10k.txt&#34;&gt;10,000 queries&lt;/a&gt;; Target: 6.67 sec&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You can mix and match the IP range files and the query files; they are purely random, not constructed to trip anything in particular up.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Food for thought&lt;/strong&gt;: you may want to split the program into two steps: one for parsing / recording / organizing the IP ranges into a database (or something similar), and another for performing lookups against the database. &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Bonus points:&lt;/strong&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt;Modify your solution to work for &lt;a href=&#34;https://en.wikipedia.org/wiki/IPv6_address&#34;&gt;IPv6 (128-bit) addresses&lt;/a&gt; in addition to IPv4 (32-bit) addresses.&lt;/li&gt; &lt;li&gt;Test your solution against some super-huge data sets (10-100 million IP ranges). You will have to generate those inputs yourself, though. You can use my &lt;a href=&#34;https://github.com/fsufitch/dailyprogrammer/blob/master/ideas/whois/ipgen2.py&#34;&gt;generation script&lt;/a&gt; if you would like.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Background: How IP Addresses Work&lt;/h1&gt; &lt;p&gt;An IP address is a string composed of 4 numbers between 0 and 255 (8 bit, or 1 byte), with periods between them.&lt;/p&gt; &lt;p&gt;At its core is fundamentally a 32 bit integer formatted in chunks, to make it more readable/memorable. For example, the standard for calling your own computer is the address &lt;code&gt;127.0.0.1&lt;/code&gt;. That address is the same as the number &lt;code&gt;2130706433&lt;/code&gt;, but it&amp;#39;s much easier to remember. How did we get that?&lt;/p&gt; &lt;p&gt;Let&amp;#39;s convert the components of &lt;code&gt;127.0.0.1&lt;/code&gt; to 8-bit binary:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;127&lt;/code&gt; = &lt;code&gt;011111111&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;0&lt;/code&gt; = &lt;code&gt;00000000&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;0&lt;/code&gt; = &lt;code&gt;00000000&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;1&lt;/code&gt; = &lt;code&gt;00000001&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Then, concatenate them: &lt;code&gt;01111111000000000000000000000001&lt;/code&gt;. Converting that number back to decimal (base 10), we get &lt;code&gt;2130706433&lt;/code&gt;. We can go in the opposite direction to go from a 32 bit integer to an IP address.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Counting and ranges.&lt;/strong&gt; Since IP addresses are basically numbers, we can count from one to the next. The biggest difference is that they &amp;quot;carry over&amp;quot; into the next byte when you reach &lt;code&gt;256&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;127.0.0.1 127.0.0.2 127.0.0.3 ... 127.0.0.254 127.0.0.255 127.0.1.0 127.0.1.1 ... 127.255.255.253 127.255.255.254 127.255.255.255 128.0.0.0 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;That means that the IP address &lt;code&gt;127.0.0.100&lt;/code&gt; is inside the range &lt;code&gt;127.0.0.1 - 127.0.1.1&lt;/code&gt;, for example.&lt;/p&gt; &lt;p&gt;For the purposes of this challenge though, since the output does not contain any IP addresses, it is safe to convert all input IPs to integers and forget about it. Here&amp;#39;s some &lt;a href=&#34;https://gist.github.com/fsufitch/ba893ce1eefd93bd1f9c&#34;&gt;sample C code&lt;/a&gt; to do it, given the address&amp;#39;s four component bytes. Some languages, like Python 3.x, even include &lt;a href=&#34;https://docs.python.org/3/howto/ipaddress.html&#34;&gt;IP address libraries&lt;/a&gt; to make your life easier. However, keep in mind that the more complex and &amp;quot;feature-filled&amp;quot; your tools are, the slower they are more likely to be -- which may negatively impact your lookup speed.&lt;/p&gt; &lt;h2&gt;Finally&lt;/h2&gt; &lt;p&gt;Do you have a cool idea for a programming challenge? Head on over to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and let us know!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3xdmtw/20151218_challenge_245_hard_guess_whois/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3xdmtw/20151218_challenge_245_hard_guess_whois/"&gt;[55 comments]&lt;/a&gt;</description></item><item><title>[2015-12-16] Challenge #245 [Intermediate] Ggggggg gggg Ggggg-ggggg!</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3x3hqa/20151216_challenge_245_intermediate_ggggggg_gggg/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3x3hqa/20151216_challenge_245_intermediate_ggggggg_gggg/</guid><pubDate>Wed, 16 Dec 2015 16:45:22 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;We have discovered a new species of aliens! They look like &lt;a href=&#34;https://www.redditstatic.com/about/assets/reddit-alien.png&#34;&gt;this&lt;/a&gt; and are trying to communicate with us using the &lt;a href=&#34;/r/ggggg&#34;&gt;/r/ggggg&lt;/a&gt; subreddit! As you might have been able to tell, though, it is awfully hard to understand what they&amp;#39;re saying since their super-advanced alphabet only makes use of two letters: &amp;quot;g&amp;quot; and &amp;quot;G&amp;quot;. Fortunately, their numbers, spacing and punctuation are the same.&lt;/p&gt; &lt;p&gt;We are going to write a program to translate to and from our alphabet to theirs, so we can be enlightened by their intelligence.&lt;/p&gt; &lt;p&gt;Feel free to code either the encoding program, the decoding program, or both.&lt;/p&gt; &lt;p&gt;&lt;sup&gt;Also,&lt;/sup&gt; &lt;sup&gt;please&lt;/sup&gt; &lt;sup&gt;do&lt;/sup&gt; &lt;sup&gt;not&lt;/sup&gt; &lt;sup&gt;actually&lt;/sup&gt; &lt;sup&gt;harass&lt;/sup&gt; &lt;sup&gt;the&lt;/sup&gt; &lt;sup&gt;residents&lt;/sup&gt; &lt;sup&gt;of&lt;/sup&gt; &lt;sup&gt;&lt;a href=&#34;/r/ggggg&#34;&gt;/r/ggggg&lt;/a&gt;.&lt;/sup&gt;&lt;/p&gt; &lt;h1&gt;Part 1: Decoding&lt;/h1&gt; &lt;p&gt;First, we need to be able to understand what the Ggggg aliens are saying. Fortunately, they are cooperative in this matter, and they helpfully include a &amp;quot;key&amp;quot; to translate between their g-based letters and our Latin letters. Your decoder program needs to read this key from the first line of the input, then use it to translate the rest of the input.&lt;/p&gt; &lt;h2&gt;Sample decoder input 1&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;H GgG d gGg e ggG l GGg o gGG r Ggg w ggg GgGggGGGgGGggGG, ggggGGGggGGggGg! &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Sample decoder output 1&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;Hello, world! &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Explanation:&lt;/strong&gt; Reading the input, the key is:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;H = GgG&lt;/li&gt; &lt;li&gt;d = gGg&lt;/li&gt; &lt;li&gt;e = ggG&lt;/li&gt; &lt;li&gt;l = GGg&lt;/li&gt; &lt;li&gt;o = gGG&lt;/li&gt; &lt;li&gt;r = Ggg&lt;/li&gt; &lt;li&gt;w = ggg&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;When we read the message from left to right, we can divide it into letters like so (alternating letters bolded):&lt;/p&gt; &lt;p&gt;&amp;gt; &lt;strong&gt;GgG&lt;/strong&gt;ggG&lt;strong&gt;GGg&lt;/strong&gt;GGg&lt;strong&gt;gGG&lt;/strong&gt;, &lt;strong&gt;ggg&lt;/strong&gt;gGG&lt;strong&gt;Ggg&lt;/strong&gt;GGg&lt;strong&gt;gGg&lt;/strong&gt;!&lt;/p&gt; &lt;p&gt;Take those letter groups and turn them into letters using the key, and you get &amp;quot;Hello, world!&amp;quot;&lt;/p&gt; &lt;h2&gt;Sample decoder input 2&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;a GgG d GggGg e GggGG g GGGgg h GGGgG i GGGGg l GGGGG m ggg o GGg p Gggg r gG y ggG GGGgGGGgGGggGGgGggG /gG/GggGgGgGGGGGgGGGGGggGGggggGGGgGGGgggGGgGggggggGggGGgG! &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that the letters are &lt;em&gt;not&lt;/em&gt; guaranteed to be of equal length.&lt;/p&gt; &lt;h2&gt;Sample decoder output 2&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;hooray /r/dailyprogrammer! &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Part 2: Encoding&lt;/h1&gt; &lt;p&gt;Next, we will go in the other direction. Come up with a key based on the letters &amp;quot;g&amp;quot; and &amp;quot;G&amp;quot; that maps all the letters in a given message to Ggggg equivalents, use it to translate the message, then output both the key and the translated message. You can double-check your work using the decoding script from part 1.&lt;/p&gt; &lt;h2&gt;Sample input&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;Hello, world! &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Sample output&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;H GgG d gGg e ggG l GGg o gGG r Ggg w ggg GgGggGGGgGGggGG, ggggGGGggGGggGg! &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Your key (and thus message) may end up being completely different than the one provided here. That&amp;#39;s fine, as long as it can be translated back.&lt;/p&gt; &lt;h1&gt;Part 2.1 (Bonus points): Compression&lt;/h1&gt; &lt;p&gt;Just as it annoys us to see someone typing &amp;quot;llliiiiikkkeeee ttttthhhiiiisssss&amp;quot;, the Ggggg aliens don&amp;#39;t actually enjoy unnecessary verbosity. Modify your encoding script to create a key that results in the &lt;em&gt;shortest possible Ggggg message&lt;/em&gt;. You should be able to decode the output using the same decoder used in part 1 (the second sample input/output in part 1 is actually compressed).&lt;/p&gt; &lt;p&gt;Here&amp;#39;s a &lt;a href=&#34;https://en.wikipedia.org/wiki/Variable-length_code&#34;&gt;hint&lt;/a&gt;. &lt;/p&gt; &lt;h2&gt;Sample input:&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;Here&amp;#39;s the thing. You said a &amp;quot;jackdaw is a crow.&amp;quot; Is it in the same family? Yes. No one&amp;#39;s arguing that. As someone who is a scientist who studies crows, I am telling you, specifically, in science, no one calls jackdaws crows. If you want to be &amp;quot;specific&amp;quot; like you said, then you shouldn&amp;#39;t either. They&amp;#39;re not the same thing. If you&amp;#39;re saying &amp;quot;crow family&amp;quot; you&amp;#39;re referring to the taxonomic grouping of Corvidae, which includes things from nutcrackers to blue jays to ravens. So your reasoning for calling a jackdaw a crow is because random people &amp;quot;call the black ones crows?&amp;quot; Let&amp;#39;s get grackles and blackbirds in there, then, too. Also, calling someone a human or an ape? It&amp;#39;s not one or the other, that&amp;#39;s not how taxonomy works. They&amp;#39;re both. A jackdaw is a jackdaw and a member of the crow family. But that&amp;#39;s not what you said. You said a jackdaw is a crow, which is not true unless you&amp;#39;re okay with calling all members of the crow family crows, which means you&amp;#39;d call blue jays, ravens, and other birds crows, too. Which you said you don&amp;#39;t. It&amp;#39;s okay to just admit you&amp;#39;re wrong, you know? &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Sample output:&lt;/h2&gt; &lt;p&gt;Found here (a bit too big to paste in the challenge itself): &lt;a href=&#34;http://www.hastebin.com/raw/inihibehux.txt&#34;&gt;http://www.hastebin.com/raw/inihibehux.txt&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Remember you can test your decoder on this message, too!&lt;/p&gt; &lt;hr/&gt; &lt;p&gt;C GgggGgg H GgggGgG T GgggGGg a gGg c GGggG d GggG e GgG g ggGgG h GGgGg i gGGg j GgggGGG l gGGG m ggGGg n GGgGG o ggg p ggGGG r GGGg s GGGG t GGgggG u ggGgg v Ggggg w GGggggg y GGggggG GgggGGgGGgGggGGgGGGG GGggGGGgGggGggGGGgGGGGgGGGgGGggGgGGgG GGggggggGgGGGG ggGGGGGGggggggGGGgggGGGGGgGGggG gGgGGgGGGggG GggGgGGgGGGGGGggGggGggGGGGGGGGGgGGggG gggGggggGgGGGGg gGgGGgggG /GGGg/GggGgGggGGggGGGGGggggGggGGGGGGggggggGgGGGGggGgggGGgggGGgGgGGGGg_gGGgGggGGgGgGgGGGG. GgggGgGgGgGggggGgG gGg GGggGgggggggGGG GGggGGGgGggGggGGGgGGGGgGGGgGGggGgGGgG gGGgGggGGgGgGg? GgggGgggggggGGgGgG GgggGGGggggGGgGGgGG ggGggGGGG gggGggggGgGGGGg GGgggGGGgGgGgGGGGgGgG!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3x3hqa/20151216_challenge_245_intermediate_ggggggg_gggg/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3x3hqa/20151216_challenge_245_intermediate_ggggggg_gggg/"&gt;[79 comments]&lt;/a&gt;</description></item><item><title>[2015-12-14] Challenge # 245 [Easy] Date Dilemma</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3wshp7/20151214_challenge_245_easy_date_dilemma/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3wshp7/20151214_challenge_245_easy_date_dilemma/</guid><pubDate>Mon, 14 Dec 2015 14:55:28 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Yesterday, Devon the developer made an awesome webform, which the sales team would use to record the results from today&amp;#39;s big new marketing campaign, but now he realised he forgot to add a validator to the &amp;quot;delivery_date&amp;quot; field! He proceeds to open the generated spreadsheet but, as he expected, the dates are all but normalized... Some of them use &lt;code&gt;M D Y&lt;/code&gt; and others &lt;code&gt;Y M D&lt;/code&gt;, and even arbitrary separators are used! Can you help him parse all the messy text into properly ISO 8601 (&lt;code&gt;YYYY-MM-DD&lt;/code&gt;) formatted dates before beer o&amp;#39;clock?&lt;/p&gt; &lt;p&gt;Assume only dates starting with 4 digits use &lt;code&gt;Y M D&lt;/code&gt;, and others use &lt;code&gt;M D Y&lt;/code&gt;.&lt;/p&gt; &lt;h1&gt;Sample Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;2/13/15 1-31-10 5 10 2015 2012 3 17 2001-01-01 2008/01/07 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Sample Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;2015-02-13 2010-01-31 2015-05-10 2012-03-17 2001-01-01 2008-01-07 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Extension challenge [Intermediate]&lt;/h1&gt; &lt;p&gt;Devon&amp;#39;s nemesis, Sally, is by far the best salesperson in the team, but her writing is also the most idiosyncratic! Can you parse all of her dates? Guidelines:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Use &lt;code&gt;2014-12-24&lt;/code&gt; as the base for relative dates.&lt;/li&gt; &lt;li&gt;When adding &lt;strong&gt;days&lt;/strong&gt;, account for the different number of days in each month; ignore leap years.&lt;/li&gt; &lt;li&gt;When adding &lt;strong&gt;months&lt;/strong&gt; and &lt;strong&gt;years&lt;/strong&gt;, use whole units, so that: &lt;ul&gt; &lt;li&gt;one month before october 10 is september 10&lt;/li&gt; &lt;li&gt;one year after 2001-04-02 is 2002-04-02&lt;/li&gt; &lt;li&gt;one month after january 30 is february 28 (not march 1)&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Sally&amp;#39;s inputs&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;tomorrow 2010-dec-7 OCT 23 1 week ago next Monday last sunDAY 1 year ago 1 month ago last week LAST MONTH 10 October 2010 an year ago 2 years from tomoRRow 1 month from 2016-01-31 4 DAYS FROM today 9 weeks from yesterday &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Sally&amp;#39;s expected outputs&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;2014-12-25 2010-12-01 2014-10-23 2014-12-17 2014-12-29 2014-12-21 2013-12-24 2014-11-24 2014-12-15 2014-11-24 2010-10-10 2013-12-24 2016-12-25 2016-02-28 2014-12-28 2015-02-25 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Notes and Further Reading&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/ISO_8601&#34;&gt;https://en.wikipedia.org/wiki/ISO_8601&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;http://php.net/manual/en/function.strtotime.php&#34;&gt;http://php.net/manual/en/function.strtotime.php&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=&#34;https://xkcd.com/1179/&#34;&gt;https://xkcd.com/1179/&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;em&gt;Moderator note:&lt;/em&gt; If you would like to solve the general case to absolutely work on all possible input dates, check out this video first: &lt;a href=&#34;https://www.youtube.com/watch?v=-5wpm-gesOY&#34;&gt;https://www.youtube.com/watch?v=-5wpm-gesOY&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;PS: Using &lt;code&gt;&amp;lt;?php echo strftime(&amp;#39;%Y-%m-%d&amp;#39;, strtotime($s));&lt;/code&gt; is cheating! :^)&lt;/p&gt; &lt;hr/&gt; &lt;p&gt;This challenge is here thanks to &lt;a href=&#34;/u/alfred300p&#34;&gt;/u/alfred300p&lt;/a&gt; proposing it in &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Do you a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3wshp7/20151214_challenge_245_easy_date_dilemma/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3wshp7/20151214_challenge_245_easy_date_dilemma/"&gt;[118 comments]&lt;/a&gt;</description></item><item><title>[2015-12-09] Challenge #244 [Easy]er - Array language (part 3) - J Forks</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3wdm0w/20151209_challenge_244_easyer_array_language_part/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3wdm0w/20151209_challenge_244_easyer_array_language_part/</guid><pubDate>Fri, 11 Dec 2015 14:14:02 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;This challenge does not require doing the previous 2 parts. If you want something harder, the rank conjunction from Wednesday&amp;#39;s challenge requires concentration.&lt;/p&gt; &lt;h1&gt;Forks&lt;/h1&gt; &lt;p&gt;A fork is a function that takes 3 functions that are all &amp;quot;duck defined&amp;quot; to take 2 parameters with 2nd optional or ignorable.&lt;/p&gt; &lt;p&gt;for 3 functions, &lt;code&gt;f(y,x= default):&lt;/code&gt; , &lt;code&gt;g(y,x= default):&lt;/code&gt; , &lt;code&gt;h(y,x= default):&lt;/code&gt; , where the function g is a &amp;quot;genuine&amp;quot; 2 parameter function,&lt;/p&gt; &lt;p&gt;the call &lt;code&gt;Fork(f,g,h)&lt;/code&gt; executes the function composition:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; g(f(y,x),h(y,x)) (data1,data2) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;1. Produce the string that makes the function call from string input:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt; sum divide count &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(above input are 3 function names to Fork)&lt;/p&gt; &lt;p&gt;&lt;strong&gt;2. Native to your favorite language, create an executable function from above string input&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;or 3. create a function that takes 3 functions as input, and returns a function.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; Fork(sum, divide ,count) (array data) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;should return the mean of that array. Where divide works similarly to add from Monday&amp;#39;s challenge.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;4. Extend above functions to work for any odd number of function parameters&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;for 5 parameters, Fork(a, b, c, d, e) is:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; b(a, Fork(c,d,e)) NB. should expand this if producing strings. &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;challenge input&lt;/h1&gt; &lt;p&gt;(25 functions)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; a b c d e f g h i j k l m n o p q r s t u v w x y &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3wdm0w/20151209_challenge_244_easyer_array_language_part/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3wdm0w/20151209_challenge_244_easyer_array_language_part/"&gt;[23 comments]&lt;/a&gt;</description></item><item><title>[2015-12-09] Challenge #244 [Intermediate] Higher order functions Array language (part 2)</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3w324a/20151209_challenge_244_intermediate_higher_order/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3w324a/20151209_challenge_244_intermediate_higher_order/</guid><pubDate>Wed, 09 Dec 2015 15:34:34 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Monday&amp;#39;s challenge is a prerequisite. Sorry.&lt;/p&gt; &lt;h1&gt;J theory&lt;/h1&gt; &lt;p&gt;Adverbs and Conjunctions in J (modifiers as a shorter group name) are primarily used to implement higher order functions.&lt;/p&gt; &lt;p&gt;An adverb takes 1 parameter (that may be a function ) and may return a function (for today, assume it can only return a function). Adverb parameter name is u.&lt;/p&gt; &lt;p&gt;A conjunction takes 2 parameters and may (does today) return a function. Conjunction parameter names are u and v.&lt;/p&gt; &lt;p&gt;From Monday, the function parameters in our array language all have 2 parameters x and y.&lt;/p&gt; &lt;p&gt;In J, adverbs appear to the right of their u function parameter, and x ( if not missing) and y appear to the left and right of the group (called verb phase). More adverbs and conjunctions can appear to the right of the verb phrase, and the evaluation order inside a verb phrase is left to right. ie. function returned by first adverb, is an input the to next adverb on its right.&lt;/p&gt; &lt;p&gt;In J, Conjunctions have their u parameter (can be a verb phrase without parentheses) on the left, and their v parameter on the right. If v is not parenthesized, then only one token (function or array or variable) is the v conjunction parameter. More adverbs and conjunctions can be added to the right of the verb phrase.&lt;/p&gt; &lt;p&gt;You can use your language&amp;#39;s natural parsing rules instead.&lt;/p&gt; &lt;h1&gt;1. an insert adverb&lt;/h1&gt; &lt;p&gt;This is actually easy and already implemented as &lt;code&gt;reduce&lt;/code&gt; and &lt;code&gt;foldright&lt;/code&gt; in most languages. It is &lt;code&gt;/&lt;/code&gt; in J&lt;/p&gt; &lt;pre&gt;&lt;code&gt; +/ 1 2 3 4 NB. +/ is the whole verb phrase 10 1 + 2 + 3 + 4 10 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;an adverb in general takes one parameter (that may be a verb/function), and may return a function. The insert adverb does take a function as parameter (add in above example), and the result is a monad function (a function that ignores its 2nd x parameter). It may be easier, to model the insert function as the complete chain:&lt;/p&gt; &lt;p&gt;Insert(u, y):&lt;/p&gt; &lt;p&gt;where u is the function parameter, and y is an array where u is applied between items of y. But an ideal model is:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; Insert(u): NB. find a function to return without needing to look at y parameters. &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The result of Insert ignores any x parameter.&lt;/p&gt; &lt;p&gt;The definition of item in J:&lt;br/&gt; A list (1d array) is a list of &amp;quot;scalar items&amp;quot;&lt;br/&gt; A table (2d array) is a list of &amp;quot;list items&amp;quot;&lt;br/&gt; A brick (3d array) is a list of &amp;quot;table items&amp;quot; &lt;/p&gt; &lt;p&gt;so, &lt;/p&gt; &lt;pre&gt;&lt;code&gt; iota 2 3 0 1 2 3 4 5 +/ iota 2 3 NB. or: (add insert) (iota 2 3) 3 5 7 0 1 2 + 3 4 5 3 5 7 +/ iota 10 5 NB. or: insert(add) iota ([2, 3]) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;225 235 245 255 265&lt;/p&gt; &lt;pre&gt;&lt;code&gt; iota 3 2 4 NB. result has 3 items 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 +/ iota 3 2 4 NB. remember insert applies between items. 24 27 30 33 36 39 42 45 +/ +/ iota 3 2 4 60 66 72 78 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Implement an insert adverb in your favorite language.&lt;/p&gt; &lt;p&gt;J definition of insert (variation from builtin to ignore x parameter) : &lt;code&gt;insert =: 1 : &amp;#39;u/@:]&amp;#39;&lt;/code&gt;&lt;/p&gt; &lt;h1&gt;2. a swap adverb&lt;/h1&gt; &lt;p&gt;swap is an adverb that reverses the x and y parameters to its function parameter such that y is passed x, and x is passed y. If there is no x, parameter, then the function is passed (y,y)&lt;/p&gt; &lt;p&gt;a perhaps easy model is: the signature &lt;code&gt;swap(u, x, y=x):&lt;/code&gt; but a better signature would be &lt;code&gt;swap(u):&lt;/code&gt; and return a composition of u and the swapping mechanics needed.&lt;/p&gt; &lt;p&gt;swap is ~ in J. iota is from Monday&amp;#39;s challenge.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 2 3 iota~ 1 NB. 1 + iota 2 3 1 2 3 4 5 6 iota~ 4 NB. 4 + iota 4 4 5 6 7 iota~/ 2 2 4 NB. insert swap iota between items of 2 2 4 4 6 iota~/ 2 4 4 5 iota insert~ 2 2 3 NB. swap (insert iota) between items of 3 2 3. 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;last result is same as if swap is ommitted, because insert has been defined to ignore x parameter, and swap duplicates y as x. swap applies to the function after insert (result of insert)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; swap(add) ([1, 2, 3]) NB. y is copied into x parameter 2 4 6 implement a swap adverb. &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;3. Compose conjunction.&lt;/h1&gt; &lt;p&gt;Composition of functions u and v should be familiar. An easy model is:&lt;/p&gt; &lt;p&gt;&lt;code&gt;compose(u,v,y,x):&lt;/code&gt; creating equivalent result to &lt;code&gt;u(v(y, x))&lt;/code&gt;&lt;/p&gt; &lt;p&gt;note that the u function ignores its x parameter (x default value will be passed to it)&lt;/p&gt; &lt;p&gt;An ideal signature for compose, is compose(u,v): (In J, compose is &lt;code&gt;@:&lt;/code&gt;)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 2 3 iota@:+ 1 2 NB. compose(iota, add)([2,3],[1,2]) 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;4. append itemize, and joincells functions&lt;/h1&gt; &lt;p&gt;In Monday&amp;#39;s bonus and iota function, the request was to make a recursive function that would then &lt;code&gt;joincells&lt;/code&gt; of its recursive calls to make one large array.&lt;/p&gt; &lt;p&gt;if you &lt;code&gt;append&lt;/code&gt; 2 lists together, you get 1 larger list. A scalar appended with a list or scalar is also a list.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;itemize&lt;/code&gt; function takes an array and increases its dimensions by 1, creating a single item in a higher dimension. itemize on a scalar creates a list of 1 item. itemize on a list creates a table with 1 record (that contains the original list). itemize on a table creates a 3d array with 1 item that is a table.&lt;/p&gt; &lt;p&gt;If you &lt;code&gt;append&lt;/code&gt; 2 items of the same dimensions, the result is 2 items. 1 record appended to 3 records is 4 items of records (a table with 4 items). (the difference between a record and a list is that a record is a table with 1 row (item). A list is a collection of scalar (items))&lt;/p&gt; &lt;p&gt;If you &lt;code&gt;append&lt;/code&gt; a smaller-dimensioned item (list) with a larger-dimensioned item (record), the smaller-dimensioned item is &lt;code&gt;itemize&lt;/code&gt;d until it is the same dimension as the larger item. &lt;code&gt;append&lt;/code&gt; of an item with empty item (empty can still be high dimensioned) results in 1 item of the largest-dimensioned-parameter.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 3 4 5 , iota 0 0 0 NB. append list with empty 3d array. 3 4 5 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;above result looks like a list, but is a brick (3d) with 1 table item, that has 1 record item.&lt;/p&gt; &lt;p&gt;the &lt;code&gt;joincells&lt;/code&gt; function is something that was used by iota (whether you realized it or not) on the bonus applications of Monday&amp;#39;s challenge.&lt;/p&gt; &lt;p&gt;&lt;code&gt;cells&lt;/code&gt; are an internal list of arrays. The algorithm is:&lt;br/&gt; Find the largest dimensioned cell (array in the list). With iota, create an empty cell that is 1 dimension higher than that maximum dimension. (for example: if all the cells are lists, then &lt;code&gt;iota 0 0&lt;/code&gt; creates an empty 0 record table.&lt;br/&gt; With that new cell added on the right of the list of cells, insert(append) all the cells. (foldright append to all of the cells). As an alternative to the iota call, you may also repeatedly itemize each of the cell arrays until they are one dimension higher than the max-dimension-cell.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; itemize(y , x=ignored): Rank _ _ NB. adds 1 dimension to y append(y , x): Rank _ _ NB. joins x (first) to y (last). see itemize preprocessing rules above. joincells(listofarrays): internal function NB. see above algorithm. Though an internal function, can also be implemented with boxes. (itemize 4) append 1 2 3 NB. scalar 4 made into list append to other list = list 4 1 2 3 (itemize 4) append (itemize 1 2 3) NB. list append to table = table. Fills are applied to shorter list. 4 0 0 1 2 3 1 2 3 joincells 7 NB. though internal, if there are only 2 arrays to join, it works as a f(y,x) function. 1 2 3 7 0 0 1 2 3 joincells iota 2 4 1 2 3 0 0 0 0 0 0 1 2 3 4 5 6 7 1 2 3 4 joincells iota 2 3 NB. fills are applied on the append stage. 1 2 3 4 0 0 0 0 0 1 2 0 3 4 5 0 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;try to implement joincells as &lt;code&gt;compose(insert(append), pretransform_arrays_function):&lt;/code&gt;&lt;/p&gt; &lt;h1&gt;5. Rank conjunction&lt;/h1&gt; &lt;p&gt;This is the main challenge of the day...&lt;/p&gt; &lt;p&gt;The Rank conjunction can be used to split up a function call into many function calls that each results in a cell, and then the joincells function above turns those individual function calls into a single array result.&lt;/p&gt; &lt;p&gt;While each function has a built in default rank, the rank conjunction &lt;strong&gt;can lower&lt;/strong&gt; the &amp;quot;operating&amp;quot; rank of a function. This is easier to understand as splitting the inputs to the function. &lt;code&gt;&amp;quot;&lt;/code&gt; is the rank in J. the v (right) argument to rank can be:&lt;/p&gt; &lt;p&gt;1 number: splits y argument into cells of that dimension. x rank is infinity (or is ignored).&lt;br/&gt; 2 numbers: splits y into cells of first number dimension, and splits x into 2nd number dimension. &lt;/p&gt; &lt;p&gt;&lt;code&gt;Rank(u, _ _)&lt;/code&gt; specifies rank infinity for x and y which is the same as no rank modifier at all since the full arrays of x and y will be passed to u.&lt;/p&gt; &lt;p&gt;you may use 32000 as a substitute for infinity, or the default value for both &amp;quot;v parameters&amp;quot; to Rank.&lt;/p&gt; &lt;p&gt;&lt;code&gt;Rank(iota, 0 0)&lt;/code&gt; will split the y and x parameters into scalars and call iota for each split&lt;/p&gt; &lt;p&gt;pR 1 3 iota(&amp;quot;0 0) 3 4 NB. &amp;quot;(0 0) is Rank(u, 0 0) (an adverb) iota(&amp;quot;0 0) is Rank(iota, 0 0). returns a function. 1 2 3 0 3 4 5 6&lt;/p&gt; &lt;p&gt;equivalent to:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; (1 iota 3) joincells (3 iota 4) 1 2 3 0 3 4 5 6 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;1 2 + 3 4 5 NB. an error in J, because only length 1 items are expanded to match the other argument lengths.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 1 2 +(&amp;quot;0 1) 3 4 5 NB. using rank to pass compatible lengths. (the order of rank v parameters in J is reversed because x is on the left, and y on the right. 4 5 6 5 6 7 1 2 +(&amp;quot;1 0) 3 4 5 4 5 5 6 6 7 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note in the last 2 examples, 2 items were matched with 1 item (first), and 1 item was matched with 3 items (2nd). When matching different length items, if the lower array count is 1 item, then it is copied the number of times needed to be the same length as the other array.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; (add insert) iota 10 5 NB. seen before puts insert between rows. end result is sum of columns. 225 235 245 255 265 (add insert)&amp;quot;1 iota 10 5 NB. cells are the rows. result of each cell is sum of rows (a scalar). joincells makes a list. 10 35 60 85 110 135 160 185 210 235 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the last call is equivalent to &lt;code&gt;Compose(Rank(insert(add)), 1), iota)([10,5])&lt;/code&gt;&lt;/p&gt; &lt;h1&gt;6. simple functions&lt;/h1&gt; &lt;p&gt;&lt;code&gt;Left(y,x): return y&lt;/code&gt; &lt;code&gt;]&lt;/code&gt; in J&lt;br/&gt; &lt;code&gt;Right(y,x): return swap(Left)(y, x=missing)&lt;/code&gt; NB. returns y if there is no x. &lt;code&gt;[&lt;/code&gt; in J&lt;br/&gt; &lt;code&gt;double(y,x=ignored): return swap(add) y&lt;/code&gt; NB. ignores x. &lt;/p&gt; &lt;pre&gt;&lt;code&gt; double 5 10 1 2 3 double~ 5 NB. swapped so passes x as y. 2 4 6 double~ 5 2 NB. if there was an x, then double that. Since there isn&amp;#39;t, double y. 10 4 double~/ 5 2 NB. insert(swap(double))([5,2]) 10 5 double~ 2 10 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3w324a/20151209_challenge_244_intermediate_higher_order/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3w324a/20151209_challenge_244_intermediate_higher_order/"&gt;[8 comments]&lt;/a&gt;</description></item><item><title>[2015-12-07] Challenge #244 [Intermediate] Turn any language into an Array language (part 1)</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3vswuc/20151207_challenge_244_intermediate_turn_any/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3vswuc/20151207_challenge_244_intermediate_turn_any/</guid><pubDate>Mon, 07 Dec 2015 16:01:54 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Array languages&lt;/h1&gt; &lt;p&gt;Array languages include J, APL and OpenCL. The only criteria is that function in and out parameters are arrays. &lt;/p&gt; &lt;p&gt;In our array language, every function has 2 parameters (each arrays) called y and x. (Optional rule)&lt;/p&gt; &lt;p&gt;In every function, the x parameter is optional, and your function should create a default value to fill in if missing. (Somewhat Optional rule)&lt;/p&gt; &lt;h1&gt;rank and items&lt;/h1&gt; &lt;p&gt;more theory wil come in part 2 but,&lt;br/&gt; Math functions are rank 0, which means they operate on scalars at a time inside the array.&lt;/p&gt; &lt;p&gt;scalar -- for our purposes is the same as a singleton array. A 0D array.&lt;br/&gt; list -- A 1 dimensional array. Each item is a scalar.&lt;br/&gt; table-- A 2 dimensional array. Each item is a list.&lt;br/&gt; brick-- A 3 dimensional array. Each item is a table. &lt;/p&gt; &lt;h1&gt;1. iota function&lt;/h1&gt; &lt;p&gt;In J, the iota function takes just 1 rank 1 parameter (y is processed &amp;quot;list-at-a-time&amp;quot;).&lt;br/&gt; The iota function returns an array whose dimensions is equal to the scalar items of y. The total number of scalars in the returned array is the product of y.&lt;br/&gt; The ravelled (if the returned items were flattened to a 1 dimensional list) items of the return value is the range from (0) to (the product of y - 1)&lt;/p&gt; &lt;p&gt;examples:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; iota 4 NB. 1d 0 1 2 3 iota 2 3 NB. 2d 0 1 2 3 4 5 iota 2 2 3 NB. 3d 0 1 2 3 4 5 6 7 8 9 10 11 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;J&amp;#39;s input and display for arrays does not need brackets around them. 3d arrays are displayed with a blank line between table items.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;the 2nd x parameter to iota&lt;/strong&gt;&lt;br/&gt; Though not part of J or APL, we can add a 2nd optional parameter x to iota. This parameter will add an offset to iota results. Its default value is 0. You may ignore testing it until you make the add function below, but basics:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 1 iota 4 1 2 3 4 10 iota 2 3 10 11 12 13 14 15 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;a python definition for iota would be&lt;br/&gt; iota(y,x=0): &lt;/p&gt; &lt;p&gt;implement the details of iota in any language.&lt;/p&gt; &lt;h1&gt;add function&lt;/h1&gt; &lt;p&gt;addition of arrays is &lt;code&gt;rank 0 0&lt;/code&gt;. It operates at a scalar level (for both x and y). Its default x value is 0.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 5 add 1 2 3 6 7 8 10 10 10 add 1 2 3 11 12 13 1 2 3 add 1 2 3 2 4 6 10 add iota 2 3 10 11 12 13 14 15 0 10 add iota 2 3 0 1 2 13 14 15 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The last case may seem a bit tricky. J/Array functions are implemented such that &lt;/p&gt; &lt;p&gt;if both of its parameters are larger shape than its rank (ie. lists instead of scalars for add) then the function is called recursively for each item of its parameters.&lt;/p&gt; &lt;p&gt;if one of its parameters is the correct rank (scalar for add), but its other parameter is too large (list or higher), then the correct rank item is copied the number of items of the too large parameter. and then called recursively. So, &lt;code&gt;10 + 1 2 3&lt;/code&gt; is the same as &lt;code&gt;10 10 10 + 1 2 3&lt;/code&gt; (ie, the 10 is copied 3 times, then the recursive call does &lt;code&gt;10 + 1&lt;/code&gt; &lt;code&gt;10+2&lt;/code&gt; &lt;code&gt;10 +3&lt;/code&gt; and the results accumulated into a list of 3 items.&lt;/p&gt; &lt;p&gt;So in &lt;code&gt;0 10 add iota 2 3&lt;/code&gt; the result of iota has 2 items, and one of the recursive calls in add will be: &lt;code&gt;0 + 0 1 2&lt;/code&gt; &lt;code&gt;10 + 3 4 5&lt;/code&gt; and the expansion rule above applies.&lt;/p&gt; &lt;p&gt;implement add function. (in python, signature would look like)&lt;br/&gt; add(y,x=0): &lt;/p&gt; &lt;h1&gt;bonus&lt;/h1&gt; &lt;pre&gt;&lt;code&gt; iota (1 + iota 2 2) 0 1 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 7 8 9 10 11 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(&lt;strong&gt;edit:&lt;/strong&gt; note iota is &lt;code&gt;rank _ 1&lt;/code&gt; (x is scalar rank, y is list rank). Above is same result as &lt;code&gt;iota 1 iota 2 2&lt;/code&gt;) rank _ means rank infinity (take whole array/argument). iota internally uses the add function which has &lt;code&gt;rank 0 0&lt;/code&gt; which groups the number of recursive calls down to &lt;code&gt;rank 0 0&lt;/code&gt; after iota has generated its high dimension array.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;detail for what is going on here&lt;/strong&gt; &lt;/p&gt; &lt;pre&gt;&lt;code&gt; 1 + iota 2 2 1 2 3 4 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;which will call iota twice (it is rank 1)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; iota 1 2 NB. product is 2. J &amp;quot;official&amp;quot; result is a table with 1 list of 2 items. 0 1 iota 3 4 NB. table with 3 lists of 4 items. 0 1 2 3 4 5 6 7 8 9 10 11 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When the results of a recursive function application do not have the same shape, then 0s (default) are filled in before returning (accumulating) the array. So when the above 2 results are combined, the 0 1 (first) result is padded with 0s.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 2 3 + (iota (1 + iota 2 2)) NB. parens clarify J&amp;#39;s right to left parsing order. NB. is a comment. 2 3 2 2 2 2 2 2 2 2 2 2 3 4 5 6 7 8 9 10 11 12 13 14 (iota 2 3 4 ) + (iota (1 + iota 2 2)) NB. These parens are not needed in J. But you may not know that. 0 2 2 3 4 5 6 7 8 9 10 11 12 14 16 18 20 22 24 26 28 30 32 34 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3vswuc/20151207_challenge_244_intermediate_turn_any/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3vswuc/20151207_challenge_244_intermediate_turn_any/"&gt;[58 comments]&lt;/a&gt;</description></item><item><title>[2015-12-04] Challenge #243 [Hard] New York Street Sweeper Paths</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3vey01/20151204_challenge_243_hard_new_york_street/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3vey01/20151204_challenge_243_hard_new_york_street/</guid><pubDate>Fri, 04 Dec 2015 13:45:54 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;In graph theory, various walks and cycles occupy a number of theorems, lemmas, and papers. They have practical value, it turns out, in a wide variety of applications: computer networking and street sweepers among them. &lt;/p&gt; &lt;p&gt;For this challenge you&amp;#39;re the commissioner of NYC street sweeping. You have to keep costs down and keep the streets clean, so you&amp;#39;ll minimize the number of streets swept twice while respecting traffic directionality. The goal of this challenge is to visit all edges (aka streets) at least one while minimizing the number of streets swept to the bare minimum. &lt;/p&gt; &lt;p&gt;Can you find a route to give your drivers? &lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;Your program will be given two integers &lt;em&gt;h&lt;/em&gt; and &lt;em&gt;w&lt;/em&gt; on one line which tell you how tall and wide the street map is. On the next line will be a single uppercase letter &lt;em&gt;n&lt;/em&gt; telling you where to begin. Then the ASCII map will begin using the dimensions you were given &lt;em&gt;h&lt;/em&gt;x&lt;em&gt;w&lt;/em&gt;). Your tour should end the day at the starting point (&lt;em&gt;n&lt;/em&gt;).&lt;/p&gt; &lt;p&gt;You&amp;#39;ll be given an ASCII art graph. Intersections will be named as uppercase letters &lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;. Streets will connect them. The streets may be bi-directional (&lt;code&gt;-&lt;/code&gt; or &lt;code&gt;|&lt;/code&gt;) or one-way (one of &lt;code&gt;^&lt;/code&gt; for up only, &lt;code&gt;v&lt;/code&gt; for down only, &lt;code&gt;&amp;lt;&lt;/code&gt; for left only, and &lt;code&gt;&amp;gt;&lt;/code&gt; for right only) and you may not violate the rules of the road as the commissioner by driving down a one way street the wrong way. Bi-directional streets (&lt;code&gt;-&lt;/code&gt; or &lt;code&gt;|&lt;/code&gt;) need only be visited in one direction, not both. &lt;del&gt;You don&amp;#39;t need to return to the starting point.&lt;/del&gt; *&lt;em&gt;Resolved the conflict in favor of doing a cycle. *&lt;/em&gt;&lt;/p&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should emit the intersections visited in order and the number of street segments you swept. &lt;/p&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;3 3 F A - B - C | | v D &amp;gt; E - F ^ v v G - H &amp;lt; I &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;p&gt;Manually inspecting the map, the shortest walk of all streets at least once I&amp;#39;ve been able to come up with is &lt;code&gt;F-I-H-G-D-E-H-G-D-A-B-C-F-E-B-C-F&lt;/code&gt;, but there may be shorter ones.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3vey01/20151204_challenge_243_hard_new_york_street/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3vey01/20151204_challenge_243_hard_new_york_street/"&gt;[51 comments]&lt;/a&gt;</description></item><item><title>[Monthly Challenge #1 - Dec, 2015] - Procedural Pirate Map : proceduralgeneration (x-post from /r/proceduralgeneration)</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3vf0e9/monthly_challenge_1_dec_2015_procedural_pirate/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3vf0e9/monthly_challenge_1_dec_2015_procedural_pirate/</guid><pubDate>Fri, 04 Dec 2015 14:06:22 +0000</pubDate><description>&lt;table&gt; &lt;tr&gt;&lt;td&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3vf0e9/monthly_challenge_1_dec_2015_procedural_pirate/&#34;&gt;&lt;img src=&#34;https://b.thumbs.redditmedia.com/cfrUyXzBx3cUrooU-a0_46NpmGcbYfWZ9wOB8ugwhzY.jpg&#34; alt=&#34;[Monthly Challenge #1 - Dec, 2015] - Procedural Pirate Map : proceduralgeneration (x-post from /r/proceduralgeneration)&#34; title=&#34;[Monthly Challenge #1 - Dec, 2015] - Procedural Pirate Map : proceduralgeneration (x-post from /r/proceduralgeneration)&#34; /&gt;&lt;/a&gt; &lt;/td&gt;&lt;td&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/fvandepitte&#34;&gt; fvandepitte &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/proceduralgeneration/comments/3vcbb3/monthly_challenge_1_dec_2015_procedural_pirate_map/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3vf0e9/monthly_challenge_1_dec_2015_procedural_pirate/"&gt;[1 comment]&lt;/a&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</description><media:title>[Monthly Challenge #1 - Dec, 2015] - Procedural Pirate Map : proceduralgeneration (x-post from /r/proceduralgeneration)</media:title><media:thumbnail url="https://b.thumbs.redditmedia.com/cfrUyXzBx3cUrooU-a0_46NpmGcbYfWZ9wOB8ugwhzY.jpg" /></item><item><title>[2015-12-02] Challenge #243 [Intermediate] Jenny's Fruit Basket</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3v4zsf/20151202_challenge_243_intermediate_jennys_fruit/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3v4zsf/20151202_challenge_243_intermediate_jennys_fruit/</guid><pubDate>Wed, 02 Dec 2015 13:12:04 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Little Jenny has been sent to the market with a 5 dollar bill in hand, to buy fruits for a gift basket for the new neighbors. Since she&amp;#39;s a diligent and literal-minded kid, she intends to spend &lt;em&gt;exactly&lt;/em&gt; 5 dollars - not one cent more or less.&lt;/p&gt; &lt;p&gt;The fact that the market sells fruits per piece at non-round prices, does not make this easy - but Jenny is prepared. She takes out a Netbook from her backpack, types in the unit prices of some of the fruits she sees, and fires off a program from her collection - and voil\u00e0, the possible fruit combinations for a $5 purchase appear on the screen.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Challenge:&lt;/strong&gt; Show what Jenny&amp;#39;s program might look like in the programming language of your choice.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The goal is aways 500 cents (= $5).&lt;/li&gt; &lt;li&gt;Solutions can include multiple fruits of the same type - assume they&amp;#39;re available in unlimited quantities.&lt;/li&gt; &lt;li&gt;Solutions do &lt;em&gt;not&lt;/em&gt; need to include all available types of fruit.&lt;/li&gt; &lt;li&gt;Determine all possible solutions for the given input.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;One line per available type of fruit - each stating the fruit&amp;#39;s &lt;strong&gt;name&lt;/strong&gt; &lt;em&gt;(a word without spaces)&lt;/em&gt; and the fruit&amp;#39;s &lt;strong&gt;unit price&lt;/strong&gt; in cents &lt;em&gt;(an integer)&lt;/em&gt;.&lt;/p&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;One line per solution - each a comma-separated set of &lt;strong&gt;quantity&lt;/strong&gt;+&lt;strong&gt;name&lt;/strong&gt; pairs, describing how many fruits of which type to buy.&lt;/p&gt; &lt;p&gt;Do not list fruits with a quantity of zero in the output. Inflect the names for plural (adding an &lt;code&gt;s&lt;/code&gt; is sufficient).&lt;/p&gt; &lt;h1&gt;Sample Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;banana 32 kiwi 41 mango 97 papaya 254 pineapple 399 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Sample Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;6 kiwis, 1 papaya 7 bananas, 2 kiwis, 2 mangos &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;apple 59 banana 32 coconut 155 grapefruit 128 jackfruit 1100 kiwi 41 lemon 70 mango 97 orange 73 papaya 254 pear 37 pineapple 399 watermelon 500 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: For this input there are &lt;a href=&#34;http://pastebin.com/raw.php?i=7S7pnUyL&#34;&gt;180 solutions&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was submitted by &lt;a href=&#34;/u/smls&#34;&gt;/u/smls&lt;/a&gt;. If you have a challenge idea, please share it on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a chance we&amp;#39;ll use it!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3v4zsf/20151202_challenge_243_intermediate_jennys_fruit/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3v4zsf/20151202_challenge_243_intermediate_jennys_fruit/"&gt;[99 comments]&lt;/a&gt;</description></item><item><title>[2015-11-30] Challenge #243 [Easy] Abundant and Deficient Numbers</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3uuhdk/20151130_challenge_243_easy_abundant_and/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3uuhdk/20151130_challenge_243_easy_abundant_and/</guid><pubDate>Mon, 30 Nov 2015 12:50:55 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;In number theory, a deficient or &lt;strong&gt;deficient number&lt;/strong&gt; is a number n for which the sum of divisors &lt;em&gt;sigma(n)&amp;lt;2n&lt;/em&gt;, or, equivalently, the sum of proper divisors (or aliquot sum) &lt;em&gt;s(n)&amp;lt;n&lt;/em&gt;. The value &lt;em&gt;2n - sigma(n)&lt;/em&gt; (or &lt;em&gt;n - s(n)&lt;/em&gt;) is called the number&amp;#39;s deficiency. In contrast, an &lt;strong&gt;abundant number&lt;/strong&gt; or excessive number is a number for which the sum of its proper divisors is greater than the number itself&lt;/p&gt; &lt;p&gt;As an example, consider the number 21. Its divisors are 1, 3, 7 and 21, and their sum is 32. Because 32 is less than 2 x 21, the number 21 is &lt;em&gt;deficient&lt;/em&gt;. Its deficiency is 2 x 21 - 32 = 10.&lt;/p&gt; &lt;p&gt;&lt;del&gt;The integer 12 is the first &lt;em&gt;abundant&lt;/em&gt; number. Its proper divisors are 1, 2, 3, 4 and 6 for a total of 16. The amount by which the sum exceeds the number is the abundance. The number 12 has an abundance of 4, for example.&lt;/del&gt; The integer 12 is the first abundant number. Its divisors are 1, 2, 3, 4, 6, and 12, and their sum is 28. Because 28 is greater than 2 x 12, the number 12 is abundant. It&amp;#39;s abundant by is 28 - 24 = 4. (Thanks &lt;a href=&#34;/u/Rev0lt_&#34;&gt;/u/Rev0lt_&lt;/a&gt; for the correction.)&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;You&amp;#39;ll be given an integer, one per line. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;18 21 9 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should emit if the number if deficient, abundant (and its abundance), or neither. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;18 abundant by 3 21 deficient 9 ~~neither~~ deficient &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;111 112 220 69 134 85 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;111 ~~neither~~ deficient 112 abundant by 24 220 abundant by 64 69 deficient 134 deficient 85 deficient &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;OOPS&lt;/h1&gt; &lt;p&gt;I had fouled up my implementation, 9 and 111 are deficient, not perfect. See &lt;a href=&#34;http://sites.my.xs.edu.ph/connor-teh-14/aste/mathematics-asteroids/perfect-abundant-and-deficient-numbers-1-100&#34;&gt;http://sites.my.xs.edu.ph/connor-teh-14/aste/mathematics-asteroids/perfect-abundant-and-deficient-numbers-1-100&lt;/a&gt;. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3uuhdk/20151130_challenge_243_easy_abundant_and/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3uuhdk/20151130_challenge_243_easy_abundant_and/"&gt;[237 comments]&lt;/a&gt;</description></item><item><title>[2015-11-27] Challenge # 242 [Hard] Start to Rummikub</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3ufwyf/20151127_challenge_242_hard_start_to_rummikub/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3ufwyf/20151127_challenge_242_hard_start_to_rummikub/</guid><pubDate>Fri, 27 Nov 2015 07:26:26 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Rummikub&#34;&gt;Rummikub&lt;/a&gt; is a game consisting of 104 number tiles and two joker tiles. The number tiles range in value from one to thirteen, in four colors (we pick black, yellow, red and purple). Each combination of color and number is represented twice.&lt;/p&gt; &lt;p&gt;Players at start are given 14 random tiles. The main goal of the game is playout all the tiles you own on the field.&lt;/p&gt; &lt;p&gt;You either play your tiles on the field in &lt;em&gt;Groups&lt;/em&gt; or &lt;em&gt;Runs&lt;/em&gt;. All sets on the field need to consist of at least 3 tiles.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;em&gt;Groups&lt;/em&gt; are tiles consiting of the same number and having different colors. The biggest &lt;em&gt;group&lt;/em&gt; you can make is one of 4 tiles (1 each color).&lt;/li&gt; &lt;li&gt;&lt;em&gt;Runs&lt;/em&gt; are tiles of the same color numbered in consecutive number order. You can&amp;#39;t have a gap between 2 numbers (if this is the case and both sets have 3 or more tiles it is considered 2 runs)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This challenge is a bit more lengthy, so I&amp;#39;ll split it into 2 parts. &lt;/p&gt; &lt;p&gt;&lt;strong&gt;Part I: Starting off&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;To start off you need to play 1 or more sets where the total sum of the tiles are above 30. You can&amp;#39;t use the jokers for the start of the game, so we will ingore them for now.&lt;/p&gt; &lt;p&gt;E.G.:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Red 10, Purple 10, Black 10 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;or&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Black 5, Black 6, Black 7, Black 8 Yellow 2, Purple 2, Red 2 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Are vallid plays to start with.&lt;/p&gt; &lt;p&gt;The first one is a &lt;em&gt;group&lt;/em&gt; with the sum of 30, the second one is a combination of a &lt;em&gt;run&lt;/em&gt; (26) and a &lt;em&gt;group&lt;/em&gt; (6) that have the combined sum of 32.&lt;/p&gt; &lt;p&gt;For the first part of the challenge you need to search the set tiles and look for a good play to start with. If it is possible show the play, if not just show &lt;code&gt;Impossible&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;P12 P7 R2 R5 Y2 Y7 R9 B5 P3 Y8 P2 B7 B6 B8 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;B5 B6 B7 B8 Y2 P2 R2 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;P7 R5 Y2 Y13 R9 B5 P3 P7 R3 Y8 P2 B7 B6 B12 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Impossibe &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;As you see the input is not in any specific order.&lt;/p&gt; &lt;p&gt;You can generate more &lt;a href=&#34;https://dotnetfiddle.net/gQQTdT&#34;&gt;here&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Part II: Grab tiles till we can play&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Now you create a tilebag that would give you random tiles until you can make a set of to start the game off.&lt;/p&gt; &lt;p&gt;The second input gives an &lt;code&gt;Impossible&lt;/code&gt; as result, so now we need to add tiles till we can start the game.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;P7 R5 Y2 Y13 R9 B5 P3 P7 R3 Y8 P2 B7 B6 B12 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Possible output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Grabbed: B13 Y3 B10 R1 B11 Found set: B10 B11 B12 B13 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Formatting is totaly up to you.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Bonus&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Always shows the &lt;em&gt;best&lt;/em&gt; set to play if you have multiple.&lt;/p&gt; &lt;p&gt;The &lt;em&gt;best&lt;/em&gt; set is the set consisting of the most tiles, not the highest score.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Finally&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Have a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/fvandepitte&#34;&gt; fvandepitte &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3ufwyf/20151127_challenge_242_hard_start_to_rummikub/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3ufwyf/20151127_challenge_242_hard_start_to_rummikub/"&gt;[23 comments]&lt;/a&gt;</description></item><item><title>[2015-11-18] Challenge # 242 [Intermediate] VHS recording problem</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3u6o56/20151118_challenge_242_intermediate_vhs_recording/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3u6o56/20151118_challenge_242_intermediate_vhs_recording/</guid><pubDate>Wed, 25 Nov 2015 06:34:55 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All nineties kids will remember the problem of having to program their vhs recorder to tape all their favorite shows. Especially when 2 shows are aired at the same time, which show do we record?&lt;/p&gt; &lt;p&gt;Today we are going to program the recorder, so that we have a maximum amount of tv shows on one tape.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1530 1600 1555 1645 1600 1630 1635 1715 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;3 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Input description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You recieve a timetable with when the shows start and when it ends. All times are in Military time.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Output description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You return the maximum number of shows you can record. We can switch between channels instantaneously, so if a shows start on the same time a other one stops, you can record them.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Inputs&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Set 1&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1530 1600 1605 1630 1645 1725 1700 1730 1700 1745 1705 1745 1720 1815 1725 1810 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Set 2&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1555 1630 1600 1635 1600 1640 1610 1640 1625 1720 1635 1720 1645 1740 1650 1720 1710 1730 1715 1810 1720 1740 1725 1810 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Bonus 1&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;We want to know what shows we have recorded, so instead of showing the number of shows, show the names of the shows we recorded.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1535 1610 Pokémon 1610 1705 Law &amp;amp; Order 1615 1635 ER 1615 1635 Ellen 1615 1705 Family Matters 1725 1810 The Fresh Prince of Bel-Air &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Pokémon Law &amp;amp; Order The Fresh Prince of Bel-Air &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Bonus 2&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Now the first line will be a &lt;strong&gt;must see&lt;/strong&gt; show. We don&amp;#39;t care if we don&amp;#39;t max out the number of shows, but we sure want to have our favorite recorded.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;The Fresh Prince of Bel-Air 1530 1555 3rd Rock from the Sun 1550 1615 The Fresh Prince of Bel-Air 1555 1615 Mad About You 1615 1650 Ellen 1655 1735 Quantum Leap &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;The Fresh Prince of Bel-Air Ellen Quantum Leap &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you want to generate more, I got a dotnetfiddle for:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://dotnetfiddle.net/xjXHl9&#34;&gt;Challenge&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://dotnetfiddle.net/bn5QrS&#34;&gt;Bonus 1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://dotnetfiddle.net/6dwkGl&#34;&gt;Bonus 2&lt;/a&gt;&lt;/p&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Finally&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Have a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/fvandepitte&#34;&gt; fvandepitte &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3u6o56/20151118_challenge_242_intermediate_vhs_recording/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3u6o56/20151118_challenge_242_intermediate_vhs_recording/"&gt;[96 comments]&lt;/a&gt;</description></item><item><title>[2015-11-23] Challenge # 242 [easy] Funny plant</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3twuwf/20151123_challenge_242_easy_funny_plant/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3twuwf/20151123_challenge_242_easy_funny_plant/</guid><pubDate>Mon, 23 Nov 2015 06:34:38 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Scientist have discovered a new plant. The fruit of the plant can feed 1 person for a whole week and best of all, the plant never dies. Fruits needs 1 week to grow, so each weak you can harvest it fruits. Also the plant gives 1 fruit more than the week before and to get more plants you need to plant a fruit.&lt;/p&gt; &lt;p&gt;Now you need to calculate after how many weeks, you can support a group of &lt;code&gt;x&lt;/code&gt; people, given &lt;code&gt;y&lt;/code&gt; fruits to start with.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Input&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;15 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;5 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Input description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The input gives you 2 positive integers &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, being &lt;code&gt;x&lt;/code&gt; the number of people needed to be fed and &lt;code&gt;y&lt;/code&gt; the number of fruits you start with.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Output description&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The number of weeks before you can feed the entire group of people.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Explanation&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Here you have a table that shows the growth when starting with 1 fruit. It shows when the plant came into existence (is planted) and how may fruit it bears each week&lt;/p&gt; &lt;pre&gt;&lt;code&gt; Plant 1 2 3 4 5 6 7 8 9 10 11 12 13 Total # of fruits in a harvest Week 1 0 - - - - - - - - - - - - 0 2 1 0 - - - - - - - - - - - 1 3 2 1 0 0 0 - - - - - - - - 3 4 3 2 1 1 1 0 0 0 0 0 0 0 0 8 5 4 3 2 2 2 1 1 1 1 1 1 1 1 21 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;At week 1 we have 1 plant giving 0 fruits, because it has just been planted.&lt;/p&gt; &lt;p&gt;When week 2 comes along we have 1 plant that gives off a fruit and then we use that fruit to plant plant 2.&lt;/p&gt; &lt;p&gt;Then in week 3 we have 2 fruits from plant 1, 1 from plant 2, so we can plant 3 new plants.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Challenge Input&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;200 15 50000 1 150000 250 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Challenge Output&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt;5 14 9 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Finally&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Have a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/fvandepitte&#34;&gt; fvandepitte &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3twuwf/20151123_challenge_242_easy_funny_plant/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3twuwf/20151123_challenge_242_easy_funny_plant/"&gt;[159 comments]&lt;/a&gt;</description></item><item><title>[2015-11-20] Challenge # 241 [Hard] Chess Puzzle solver</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3tjcn6/20151120_challenge_241_hard_chess_puzzle_solver/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3tjcn6/20151120_challenge_241_hard_chess_puzzle_solver/</guid><pubDate>Fri, 20 Nov 2015 06:19:02 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;1 . Getting out of check&lt;/h1&gt; &lt;p&gt;Wednesday&amp;#39;s challenge 2 (listing pieces that have black king in check) was pretty hard, but getting that one will get you through 2/3rds of this challenge.&lt;/p&gt; &lt;p&gt;A good source of puzzles is this site &lt;a href=&#34;https://www.sparkchess.com/chess-puzzles.html&#34;&gt;https://www.sparkchess.com/chess-puzzles.html&lt;/a&gt;, and the first one is this first challenge:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; toascii&amp;#39;1r3rkR/1pnnq1b1/p1pp2B1/P2P1p2/1PP1pP2/2B3P1/5PK1/2Q4R&amp;#39; .r...rkR .pnnq.b. p.pp..B. P..P.p.. .PP.pP.. ..B...P. .....PK. ..Q....R &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;In this position the black king is in check by the rook at h8. There is only one legal move to get out of this one. But in general, the algorithm to get out of check is:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;If 2 pieces are &amp;quot;checking&amp;quot; the king, then the king must move.&lt;/li&gt; &lt;li&gt;If 1 piece is checking, then capturing that piece also removes the check.&lt;/li&gt; &lt;li&gt;if 1 piece is checking and it is a queen, rook or bishop, then putting a piece in between the king and checker gets out of check.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;It is perfectly reasonable also to try all possible moves filtered by those that result in not being in check anymore. If there is no legal move to get out of check then the condition is called mate, and that side has lost.&lt;/p&gt; &lt;p&gt;For the purpose of these challenges, you do not need to consider castling, 2 space pawn moves, en-passant capture, or pawn promotion. All positions are white to move first, and white is the one looking to check and mate, and black the one running away.&lt;/p&gt; &lt;p&gt;** what move gets black out of check **&lt;/p&gt; &lt;h1&gt;2. Finding a move that causes check&lt;/h1&gt; &lt;p&gt;This position is one move prior to last one.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; toascii&amp;#39;1r3rk1/1pnnq1bR/p1pp2B1/P2P1p2/1PP1pP2/2B3P1/5PK1/2Q4R&amp;#39; .r...rk. .pnnq.bR p.pp..B. P..P.p.. .PP.pP.. ..B...P. .....PK. ..Q....R ┌─┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐ │8│ │@...@│ │.....│ │@...@│ @ │.....│ │ │ │@@@@@│ │.....│ │@@@@@│@@@@@│.....│ │ │ │.@@@.│ │.....│ │.@@@.│ @@@ │.....│ │ │ │.@@@.│ │.....│ │.@@@.│@@@@@│.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │7│.....│ │.@@@.│ @@@ │@.@.@│ │..@..│O O│ │ │.....│ @ │@@@@.│@@@@ │@@@@@│ │.@@@.│OOOOO│ │ │.....│ @ │..@..│ @ │.@@@.│ │..@..│ OOO │ │ │.....│ @@@ │@@@@.│@@@@ │@...@│ │..@..│ OOO │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │6│ │.....│ │.....│ │.....│ O │.....│ │ │ @ │.....│ @ │..@..│ │.....│ OOO │.....│ │ │ @ │.....│ @ │..@..│ │.....│ O │.....│ │ │ @@@ │.....│ @@@ │.@@@.│ │.....│ O │.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │5│.....│ │.....│ │.....│ │.....│ │ │ │..O..│ │.....│ O │.....│ @ │.....│ │ │ │..O..│ │.....│ O │.....│ @ │.....│ │ │ │.OOO.│ │.....│ OOO │.....│ @@@ │.....│ │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │4│ │.....│ │.....│ │.....│ │.....│ │ │ │..O..│ O │.....│ @ │..O..│ │.....│ │ │ │..O..│ O │.....│ @ │..O..│ │.....│ │ │ │.OOO.│ OOO │.....│ @@@ │.OOO.│ │.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │3│.....│ │..O..│ │.....│ │.....│ │ │ │.....│ │.OOO.│ │.....│ │..O..│ │ │ │.....│ │..O..│ │.....│ │..O..│ │ │ │.....│ │..O..│ │.....│ │.OOO.│ │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │2│ │.....│ │.....│ │.....│ O │.....│ │ │ │.....│ │.....│ │..O..│OOOOO│.....│ │ │ │.....│ │.....│ │..O..│ OOO │.....│ │ │ │.....│ │.....│ │.OOO.│OOOOO│.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │1│.....│ │O.O.O│ │.....│ │.....│O O│ │ │.....│ │OOOOO│ │.....│ │.....│OOOOO│ │ │.....│ │.OOO.│ │.....│ │.....│ OOO │ │ │.....│ │O...O│ │.....│ │.....│ OOO │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │ │a │b │c │d │e │f │g │h │ └─┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;here it is white&amp;#39;s turn to play, and there are 3 moves that will result in check.&lt;/p&gt; &lt;p&gt;The most general recommended strategy is to try all possible moves, but for complete possibilities.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;The positions that a king would be in check by a specific type of piece that a such a piece can move to. Intersection of those 2 sets for each piece type.&lt;/li&gt; &lt;li&gt;In the case of a Queen, Bishop or Rook, if the piece is already in the same row, column or diagonal as the king, and there is only 1 piece between the 2, and that piece is white (attacker&amp;#39;s colour) then moving that piece out of the way will result in check. This is the only case that can result in double check on the king.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;** what 3 (white) moves gets black into check **&lt;/p&gt; &lt;h1&gt;3 . Chess puzzle solver&lt;/h1&gt; &lt;p&gt;By repeatedly playing white and black sides in a breadth first search until a mate is forced, the shortest move sequence until mate can be found.&lt;/p&gt; &lt;p&gt;All of these solutions have check moves by white.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Sample input&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;1r3rk1/1pnnq1bR/p1pp2B1/P2P1p2/1PP1pP2/2B3P1/5PK1/2Q4R&lt;/p&gt; &lt;p&gt;3 check options, 1 black reply line. mate in 2.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Sample output&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;h7-h8 g7-h8 h1-h8&lt;/p&gt; &lt;p&gt;&lt;strong&gt;challenge inputs&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;1r3k2/2n1p1b1/3p2QR/p1pq1pN1/bp6/7P/2P2PP1/4RBK1&lt;/p&gt; &lt;p&gt;solution has 5 check options, 2 reply lines&lt;/p&gt; &lt;p&gt;r2q1k1r/ppp1bB1p/2np4/6N1/3PP1bP/8/PPP5/RNB2RK1&lt;/p&gt; &lt;p&gt;solution has 10 check options, 1 reply line&lt;/p&gt; &lt;p&gt;1k1r4/3b1p2/QP1b3p/1p1p4/3P2pN/1R4P1/KPPq1PP1/4r2R&lt;/p&gt; &lt;p&gt;solution has 4 check options 1 reply line&lt;/p&gt; &lt;p&gt;r2r1n2/pp2bk2/2p1p2p/3q4/3PN1QP/2P3R1/P4PP1/5RK1&lt;/p&gt; &lt;p&gt;solution has 9 check options, 1 reply line&lt;/p&gt; &lt;h1&gt;4. Bonus: Forcing moves that are not check.&lt;/h1&gt; &lt;p&gt;As long as the opponent cannot place you in check, and you would be able to check opposing king on next move, then your side (white) still has the initiative.&lt;/p&gt; &lt;p&gt;For these problems all legal moves for white can be considered. But a good filtering criteria would be moves where if white could play again (without Black&amp;#39;s response turn) that a mate could be forced in a short time (with consecutive checks).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;inputs&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;r2qrb2/p1pn1Qp1/1p4Nk/4PR2/3n4/7N/P5PP/R6K&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Thanks to &lt;a href=&#34;/u/szerlok&#34;&gt;/u/szerlok&lt;/a&gt; for this Challenge idea. If you have ideas for challenges, visit &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; &lt;/p&gt; &lt;/blockquote&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3tjcn6/20151120_challenge_241_hard_chess_puzzle_solver/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3tjcn6/20151120_challenge_241_hard_chess_puzzle_solver/"&gt;[10 comments]&lt;/a&gt;</description></item><item><title>[2015-11-18] Challenge # 241 [intermediate] ascii Bitmap Chess</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3t9lar/20151118_challenge_241_intermediate_ascii_bitmap/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3t9lar/20151118_challenge_241_intermediate_ascii_bitmap/</guid><pubDate>Wed, 18 Nov 2015 06:58:20 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;1. unicode sucks&lt;/h1&gt; &lt;p&gt;From Monday&amp;#39;s challenge,&lt;/p&gt; &lt;pre&gt;&lt;code&gt; toascii &amp;#39;1r3rk1/1pnnq1bR/p1pp2B1/P2P1p2/1PP1pP2/2B3P1/5PK1/2Q4R&amp;#39; .r...rk. .pnnq.bR p.pp..B. P..P.p.. .PP.pP.. ..B...P. .....PK. ..Q....R &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;make something like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;┌─┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┐ │8│ │X...X│ │.....│ │X...X│ X │.....│ │ │ │XXXXX│ │.....│ │XXXXX│XXXXX│.....│ │ │ │.XXX.│ │.....│ │.XXX.│ XXX │.....│ │ │ │.XXX.│ │.....│ │.XXX.│XXXXX│.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │7│.....│ │.XXX.│ XXX │X.X.X│ │..X..│O O│ │ │.....│ X │XXXX.│XXXX │XXXXX│ │.XXX.│OOOOO│ │ │.....│ X │..X..│ X │.XXX.│ │..X..│ OOO │ │ │.....│ XXX │XXXX.│XXXX │X...X│ │..X..│ OOO │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │6│ │.....│ │.....│ │.....│ O │.....│ │ │ X │.....│ X │..X..│ │.....│ OOO │.....│ │ │ X │.....│ X │..X..│ │.....│ O │.....│ │ │ XXX │.....│ XXX │.XXX.│ │.....│ O │.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │5│.....│ │.....│ │.....│ │.....│ │ │ │..O..│ │.....│ O │.....│ X │.....│ │ │ │..O..│ │.....│ O │.....│ X │.....│ │ │ │.OOO.│ │.....│ OOO │.....│ XXX │.....│ │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │4│ │.....│ │.....│ │.....│ │.....│ │ │ │..O..│ O │.....│ X │..O..│ │.....│ │ │ │..O..│ O │.....│ X │..O..│ │.....│ │ │ │.OOO.│ OOO │.....│ XXX │.OOO.│ │.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │3│.....│ │..O..│ │.....│ │.....│ │ │ │.....│ │.OOO.│ │.....│ │..O..│ │ │ │.....│ │..O..│ │.....│ │..O..│ │ │ │.....│ │..O..│ │.....│ │.OOO.│ │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │2│ │.....│ │.....│ │.....│ O │.....│ │ │ │.....│ │.....│ │..O..│OOOOO│.....│ │ │ │.....│ │.....│ │..O..│ OOO │.....│ │ │ │.....│ │.....│ │.OOO.│OOOOO│.....│ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │1│.....│ │O.O.O│ │.....│ │.....│O O│ │ │.....│ │OOOOO│ │.....│ │.....│OOOOO│ │ │.....│ │.OOO.│ │.....│ │.....│ OOO │ │ │.....│ │O...O│ │.....│ │.....│ OOO │ ├─┼─────┼─────┼─────┼─────┼─────┼─────┼─────┼─────┤ │ │a │b │c │d │e │f │g │h │ └─┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┘ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Here are some 4x5 crappy bitmaps to get started&lt;/p&gt; &lt;pre&gt;&lt;code&gt;O...O OOOOO .OOO. .OOO. ; .OOO. OOOO. ..O.. OOOO. ; ..O.. .OOO. ..O.. ..O.. ; O.O.O OOOOO .OOO. O...O ; ..O.. OOOOO .OOO. OOOOO ; ..... ..O.. ..O.. .OOO. ; ..... ..O.. .O.O. ..... &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;the last one is that ghost square from Monday&amp;#39;s challenge. Bitmaps differences for Starting, Regular, and Ghost Rooks is encouraged, as is code generating as much as possible of the variations.&lt;/p&gt; &lt;h1&gt;2. Is the black king in check&lt;/h1&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Chess#Movement&#34;&gt;how chess pieces can move&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The black king (k) is in a check position if&lt;/p&gt; &lt;ol&gt; &lt;li&gt;He pretends he is a bishop(b), and can capture a B or Q(ueen)&lt;/li&gt; &lt;li&gt;He pretends he is a rook(r), and can capture a R or Q(ueen)&lt;/li&gt; &lt;li&gt;He pretends he is a knight(n), and can capture a N &lt;/li&gt; &lt;li&gt;He pretends he is a pawn(p), and can capture a P&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;(note that pieces are blocked by other friend and foe pieces from &amp;quot;checking&amp;quot; the king)&lt;/p&gt; &lt;p&gt;For output, list all squares that have a piece that is holding the black king in check.&lt;/p&gt; &lt;p&gt;** sample input **&lt;/p&gt; &lt;p&gt;1r3rk1/1pnnq1bR/p1pp2B1/P2P1p2/1PP1pP2/2B3P1/5PK1/2Q4R&lt;/p&gt; &lt;p&gt;** sample output **&lt;/p&gt; &lt;p&gt;empty - no checks.&lt;/p&gt; &lt;p&gt;** challenge input **&lt;/p&gt; &lt;p&gt;&amp;#39;1r3kR1/4P3/6NB/8/8/Q7/8/4KR2&amp;#39;&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3t9lar/20151118_challenge_241_intermediate_ascii_bitmap/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3t9lar/20151118_challenge_241_intermediate_ascii_bitmap/"&gt;[12 comments]&lt;/a&gt;</description></item><item><title>[2015-11-16] Challenge # 241 [easy] Unicode Chess</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3t0xdw/20151116_challenge_241_easy_unicode_chess/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3t0xdw/20151116_challenge_241_easy_unicode_chess/</guid><pubDate>Mon, 16 Nov 2015 14:46:33 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;1. generate a chessboard&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;1☐☒☐☒☐☒☐☒ 2☒☐☒☐☒☐☒☐ 3☐☒☐☒☐☒☐☒ 4☒☐☒☐☒☐☒☐ 5☐☒☐☒☐☒☐☒ 6☒☐☒☐☒☐☒☐ 7☐☒☐☒☐☒☐☒ 8☒☐☒☐☒☐☒☐ a bc d e fg h &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(or with better glyphs, and lining up of letters)&lt;/p&gt; &lt;h1&gt;2. Modified FEN input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt; rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;is the standard simplified ascii representation of &lt;a href=&#34;https://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation&#34;&gt;a starting chess position&lt;/a&gt;. Lower case are black pieces, upper are white, numbers are consecutive empty squares, and &amp;#39;/&amp;#39; are row separators.&lt;/p&gt; &lt;p&gt;A modified FEN notation replaces rR (rooks) with sS if the rooks are eligible to castle (they have never moved from start of game, and their king has also never moved.) A gG piece is a ghost which can be used to invoke 2 special chess rules. &lt;/p&gt; &lt;ol&gt; &lt;li&gt;A pawn that moves 2 squares can still be captured on the next move by another pawn on the ghost square that he would have been on if he had moved just 1 square instead of 2.&lt;br/&gt;&lt;/li&gt; &lt;li&gt;A king that moves 2 squares through castling can still be captured on the next move by any piece on the ghost square that he would have been on if he had moved just 1 square instead of 2. While such a castle is an illegal move in official chess, for a computer, it may be easier to declare a move illegal after the king is captured on next move.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;strong&gt;modified FEN starting position input&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code&gt; snbqkbns/pppppppp/8/8/4P3/8/PPPP1PPP/SNBQKBNS &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(after most common first move)&lt;/p&gt; &lt;h1&gt;output 2 and input to 3&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;snbqkbns pppppppp ........ ........ ....P... ........ PPPP.PPP SNBQKBNS &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;3. unicode prettified output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;8♜♞♝♛♚♝♞♜ 7♟♟♟♟♟♟♟♟ 6☐☒☐☒☐☒☐☒ 5☒☐☒☐☒☐☒☐ 4☐☒☐☒♙☒☐☒ 3☒☐☒☐☒☐☒☐ 2♙♙♙♙☐♙♙♙ 1♖♘♗♕♔♗♘♖ a bc d e fg h (edit: had bug that had border numbers upside down) &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;reddit (firefox) doesn&amp;#39;t like the size of the empty squares :( help appreciated to find right sized glyphs for the empty squares. Here is unicode pattern:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;9820 9822 9821 9819 9818 9821 9822 9820 9823 9823 9823 9823 9823 9823 9823 9823 9744 9746 9744 9746 9744 9746 9744 9746 9746 9744 9746 9744 9746 9744 9746 9744 9744 9746 9744 9746 9744 9746 9744 9746 9746 9744 9746 9744 9746 9744 9746 9744 9817 9817 9817 9817 9817 9817 9817 9817 9814 9816 9815 9813 9812 9815 9816 9814 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;4. challenge&lt;/h1&gt; &lt;p&gt;Move a few pieces, updating the board. Erase from position, add empty square colour at from position, erase whatever was on to position square, add the piece that was moved there.&lt;/p&gt; &lt;p&gt;input state to this function: (starting chess position)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; snbqkbns/pppppppp/8/8/8/8/PPPPPPPP/SNBQKBNS &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;suggested moves: (at least first 3. bonus for up to 5)&lt;/p&gt; &lt;p&gt;e2-e4 c7-c5&lt;br/&gt; f1-c4 g8-f6&lt;br/&gt; c4xf7 e8xf7&lt;br/&gt; e4-e5 d7-d5&lt;br/&gt; e5xd6 (en passant)&lt;/p&gt; &lt;p&gt;Move format: for each line: (white move &amp;quot;from square&amp;quot;(- or x)&amp;quot;to square&amp;quot;) space(s) (black move &amp;quot;from square&amp;quot;(- or x)&amp;quot;to square&amp;quot;). x is optional indicator of move that captures an oponent piece.&lt;/p&gt; &lt;p&gt;Easier Move format: for each line: (white move &amp;quot;from square&amp;quot;-&amp;quot;to square&amp;quot;) space(s) (black move &amp;quot;from square&amp;quot;-&amp;quot;to square&amp;quot;)&lt;/p&gt; &lt;p&gt;each &amp;quot;half move&amp;quot; returns a new board. (a half move is when just white or black moves. A full move includes both) the en-passant rule lets a pawn capture another pawn if the opponent pawn &lt;strong&gt;just&lt;/strong&gt; moved 2 squares. The capture takes place as if the opponent pawn was 1 square behind. (see section 2 for ghost pieces above)&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3t0xdw/20151116_challenge_241_easy_unicode_chess/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3t0xdw/20151116_challenge_241_easy_unicode_chess/"&gt;[40 comments]&lt;/a&gt;</description></item><item><title>[2015-11-13] Challenge #240 [Hard] KenKen Solver</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3snorf/20151113_challenge_240_hard_kenken_solver/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3snorf/20151113_challenge_240_hard_kenken_solver/</guid><pubDate>Fri, 13 Nov 2015 13:07:03 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;KenKen are trademarked names for a style of arithmetic and logic puzzle invented in 2004 by Japanese math teacher Tetsuya Miyamoto, who intended the puzzles to be an instruction-free method of training the brain. KenKen now appears in more than 200 newspapers in the United States and worldwide. &lt;/p&gt; &lt;p&gt;As in sudoku, the goal of each puzzle is to fill a grid with digits –– 1 through 4 for a 4x4 grid, 1 through 5 for a 5x5, etc. –– so that no digit appears more than once in any row or any column (a Latin square). Grids range in size from 3x3 to 9x9. Additionally, KenKen grids are divided into heavily outlined groups of cells –– often called “cages” –– and the numbers in the cells of each cage must produce a certain “target” number when combined using a specified mathematical operation (either addition, subtraction, multiplication or division). For example, a linear three-cell cage specifying addition and a target number of 6 in a 4x4 puzzle must be satisfied with the digits 1, 2, and 3. Digits may be repeated within a cage, as long as they are not in the same row or column. No operation is relevant for a single-cell cage: placing the &amp;quot;target&amp;quot; in the cell is the only possibility (thus being a &amp;quot;free space&amp;quot;). The target number and operation appear in the upper left-hand corner of the cage.&lt;/p&gt; &lt;p&gt;Because we can&amp;#39;t use the same layout that a printed KenKen board does, we will have to express the board in a lengthier fashion. The board layout will be given as row and column, with rows as numbers and columns as letters. A 6x6 board, therefore, looks like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; A B C D E F G 1. . . . . . . 2. . . . . . . 3. . . . . . . 4. . . . . . . 5. . . . . . . 6. . . . . . . &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Cages will be described as the target value, the operator to use, and then the cells to include. For example, if the upper left corner&amp;#39;s cage covered A1 and A2 and should combine using the addition operator to a sum of 11, we would write:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;11 + A1 A2 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;We will use standard ASCII notation for mathematical operators: &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, and &lt;code&gt;=&lt;/code&gt;. The equals sign basically says &amp;quot;this square is this value&amp;quot; - a gimme. &lt;/p&gt; &lt;h1&gt;Sample Input&lt;/h1&gt; &lt;p&gt;Describing the representative KenKen problem from &lt;a href=&#34;https://en.wikipedia.org/wiki/KenKen&#34;&gt;the Wikipedia KenKen page&lt;/a&gt; we have this as our input, describing a 6x6 grid:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;6 11 + A1 A2 2 / B1 C1 20 * D1 D2 6 * E1 F1 F2 F3 3 - B2 C2 3 / E2 E3 240 * A3 A4 B3 B4 6 * C3 D3 6 * C4 C5 7 + D4 D5 E5 30 * E4 F4 6 * A5 B5 9 + F5 F6 8 + A6 B6 C6 2 / D6 E6 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Sample Output&lt;/h1&gt; &lt;p&gt;Your program should emit the grid of numbers that satisfies the rules - yield the target value for each cage using the operator specified, and ensure that no number is repeated per column and row. From the above example you should get this solution:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;5 6 3 4 1 2 6 1 4 5 2 3 4 5 2 3 6 1 3 4 1 2 5 6 2 3 6 1 4 5 1 2 5 6 3 4 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;6 13 + A1 A2 B1 B2 180 * C1 D1 D2 E1 9 + F1 F2 F3 2 = C2 20 * E2 E3 15 + A3 A4 A5 6 * B3 C3 11 + C4 D3 D4 3 = B4 9 + D5 E4 E5 F4 2 / B5 C5 18 + D6 E6 F5 F6 8 + A6 B6 C6 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;p&gt;You can see the result here: &lt;a href=&#34;http://imgur.com/JHHt6Hg&#34;&gt;http://imgur.com/JHHt6Hg&lt;/a&gt; &lt;/p&gt; &lt;pre&gt;&lt;code&gt;1 4 3 5 2 6 3 5 2 6 4 1 4 6 1 3 5 2 5 3 6 2 1 4 6 2 4 1 3 5 2 1 5 4 6 3 &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3snorf/20151113_challenge_240_hard_kenken_solver/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3snorf/20151113_challenge_240_hard_kenken_solver/"&gt;[34 comments]&lt;/a&gt;</description></item><item><title>[2015-11-11] Challenge #240 [Intermediate] Economic/Social modeling and queries</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3sd86k/20151111_challenge_240_intermediate/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3sd86k/20151111_challenge_240_intermediate/</guid><pubDate>Wed, 11 Nov 2015 04:03:37 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;This is a task of reading a small database, and querying it and processing results, or building a model from the data.&lt;/p&gt; &lt;p&gt;You have been tasked with saving Humanity from politicized bickering preventing any honest discourse of economic and social policy. &lt;/p&gt; &lt;p&gt;It is 2040, and ever since the beginning of the 2016 Trump economist beheading regime (yes he is still your ruler), honest economic information became even more suppressive than in the beginning of the millenium. Good luck.&lt;/p&gt; &lt;h1&gt;the core model&lt;/h1&gt; &lt;p&gt;The cornerstone of any society is the &amp;quot;make food available&amp;quot; (farmer/hunter/gatherer/magician/importer from intergalactic worlds) person.&lt;/p&gt; &lt;p&gt;A society is made up of citizens (&lt;strong&gt;P&lt;/strong&gt;), &lt;strong&gt;S&lt;/strong&gt;laves, &lt;strong&gt;A&lt;/strong&gt;nimals, and &lt;strong&gt;M&lt;/strong&gt;achines. Each (of the 4) category consumes $10000 (constant unit-inflation proof) per unit per year to sustain itself. 1 person is 1 unit of citizen. 1 slave-human is 1 unit of slave and its consumption cost includes security. 1 unit of animals is however many (fractional is ok) animals it takes to cost $10000 in resources to maintain. 1 unit of machine is similar to animals but includes the purchase and operating costs (a $50k tractor would be 1/5th of a unit that can be shared).&lt;/p&gt; &lt;p&gt;&lt;strong&gt;sample input:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Input is a list of records (space delimited fields) each record describes one group in society: &lt;/p&gt; &lt;p&gt;Group name, population of that group, production($) from each group unit, PSAM (category), tax factor(1 is max, meaning that all of that group&amp;#39;s production is taxable (if there is a tax rate). 0 would mean their production value is not taxable)&lt;/p&gt; &lt;pre&gt;&lt;code&gt; farmer 50 30000 P 1 spouse 30 15000 S 0.5 police 1 0 P 0 hippie 4 -3000 S 0.8 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The above numbers suggest that farmers produce $30k worth of stuff. Their (a farmer&amp;#39;s) spouses help them produce another $15k (but the couple consumes $20k together). A policeman doesn&amp;#39;t produce anything, but his presence may limit the number and destruction caused by hippies. Thieves destroy value in the sense that it discourages production if work will be stolen, or producers attacked. A hippie is a euphemism for thief, beggars and scamsters, as viewed by the established society. The word hippie is chosen because they may be unfairly persecuted, and simply misunderstood. &lt;strong&gt;For every 1 police, 1 hippie is scared away. 1 hippie joins society for every 10 establishment households&lt;/strong&gt;. Taxation (or alternate socialization) must be introduced to afford police.&lt;/p&gt; &lt;p&gt;Spouses, children and hippies are classified as slaves, for unfortunate convenience. The coding allows the simplification of their production flowing to a household, and to indicate that they do not take spouses of their own.&lt;/p&gt; &lt;p&gt;The other cornerstone of civilization is making children. A farmer&amp;#39;s child might produce along the formula: (age - 6)* 1000 for age &amp;lt;= 18. It may be easier to model as total cost of $160k less production benefit of $55k, and so net cost of $105K, or $7k per year.&lt;/p&gt; &lt;p&gt;This simplification of the &lt;strong&gt;cost of children being $7k/year for 16 years to farmers&lt;/strong&gt; is probably the most useful and easiest to model. We can make separate entries for non-farmer-spouses production value, and non-farmer-children may cost $10k/year for 16 years (same as all people and production units).&lt;/p&gt; &lt;h1&gt;more complete input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt; farmer 50 30000 P 1 clothier 5 22000 P 1 builder 5 22000 P 1 miscellaneous 5 10000 P 1 entertainer 5 5000 P 0.5 hippie 7 -3000 S 0.8 farmer-spouse 0 15000 S 0.5 spouse 0 8000 S 0.5 farmer-child 0 3000 S 0 child 0 0 S 0 police 0 0 P 0 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;New categories needing explanation: Clothiers and builders production value is what is needed by society for sustainability. More can be added to provide &amp;quot;premium&amp;quot; value. Entertainers as a group indicate part of the sustainable need for entertainment, but the sustainabiliy value contributed by each is deemed low to indicate that they are not high need and depend more on audience than audience depends on them. Miscellaneous covers communication, policy, perhaps basics of transportation, containers for farmer products, special children products...&lt;/p&gt; &lt;p&gt;The tax field represents the percentage of production or destruction that is taxable. A 50% taxability for entertainers reflects the point that much of their production escapes accountability. Spouses similarly provide value that is not taxable. Theives/hippies have a high 80% taxability because their destruction is assumed to be a tax deduction to those that lose value.&lt;/p&gt; &lt;p&gt;The model is meant to adapt to various stages of industrialization. The input above is meant as a platform for exploring sustainability&lt;/p&gt; &lt;h1&gt;challenge questions&lt;/h1&gt; &lt;p&gt;1 . What is the surplus produced by the above society?&lt;/p&gt; &lt;p&gt;2 . What surplus spending rate (after the $10k to meet their own and other family needs) must exist to allow other professions to exist and survive? (assuming uniform surplus spending rate in all society, other professions exist only if farmers spend sufficiently.) You can save this surplus spending rate as a field for each profession (even if they are all initially equal)&lt;/p&gt; &lt;p&gt;These first 2 problems don&amp;#39;t directly help with problem 3 and 4. They are warm up queries (though may be relevant in open problem 5). Something to notice that is being ignored is that way more food is being produced than there are eaters.&lt;/p&gt; &lt;p&gt;3 . With the constraint that every group member can have only 1 spouse, and that a spouse is needed for a child, how many 1 child famillies can the society support? (spouses are conjured from thin air - like mail order or something)&lt;/p&gt; &lt;p&gt;You will probably note here that the clothier/builder populations can only afford a spouse and a child if hippie/thiefs do not directly harm them. You may assume the easier charity from mainly farmers compensates for individual losses, or model (harder) random child mortality equal to one gypsy act per year.&lt;/p&gt; &lt;p&gt;4 . A sustainable population requires 2 children per family. Of the above professions, only farmers can produce enough to self-sustain. What number of farmers is needed to support the rest of society (with a sustainable population)? (this magic number is if 100% of each family surplus were taxed and distributed according to need)&lt;/p&gt; &lt;p&gt;5 . Taxation has been ignored so far. Use whatever taxation rate you would like to see, and measure how many fewer families it sustainably generates. If you have an alternate social policy &lt;/p&gt; &lt;h1&gt;tips and cheats&lt;/h1&gt; &lt;p&gt;Databases and spreadsheets are allowed. Class or record structures should help too.&lt;/p&gt; &lt;p&gt;An easier challenge than SOLVING for numbers, and one I expect from most solutions, is to create a measuring program. ie. if some numbers are plugged in, a program/function measures the output from those numbers, and you can change plugged in numbers until the input is valid, and creates maximized output.&lt;/p&gt; &lt;p&gt;The challenge is mostly to organize data and code so that you can query and extend it in ways that are asked, and/or could interest you.&lt;/p&gt; &lt;p&gt;If you want to do anything else with this record format, but different inputs, just post your inputs (please put any new columns at the end)&lt;/p&gt; &lt;h1&gt;Bonus challenges: (will perhaps form basis for harder challenge next month)&lt;/h1&gt; &lt;p&gt;Analyze effects of a productivity innovation. &lt;/p&gt; &lt;p&gt;Compare the effects of a taxation system to support bureaucracy vs. one of basic income.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Godspiral&#34;&gt; Godspiral &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3sd86k/20151111_challenge_240_intermediate/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3sd86k/20151111_challenge_240_intermediate/"&gt;[23 comments]&lt;/a&gt;</description></item><item><title>[2015-11-09] Challenge #240 [Easy] Typoglycemia</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3s4nyq/20151109_challenge_240_easy_typoglycemia/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3s4nyq/20151109_challenge_240_easy_typoglycemia/</guid><pubDate>Mon, 09 Nov 2015 13:10:28 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Typoglycemia is a relatively new word given to a purported recent discovery about how people read written text. &lt;a href=&#34;https://en.wikipedia.org/wiki/Typoglycemia&#34;&gt;As wikipedia puts it&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;The legend, propagated by email and message boards, purportedly demonstrates that readers can understand the meaning of words in a sentence even when the interior letters of each word are scrambled. As long as all the necessary letters are present, and the first and last letters remain the same, readers appear to have little trouble reading the text.&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;&lt;a href=&#34;http://www.urbandictionary.com/define.php?term=Typoglycemia&amp;amp;defid=1561227&#34;&gt;Or as Urban Dictionary puts it&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;Typoglycemia&lt;br/&gt; The mind&amp;#39;s ability to decipher a mis-spelled word if the first and last letters of the word are correct.&lt;/p&gt; &lt;p&gt;The word Typoglycemia describes Teh mdin&amp;#39;s atbiliy to dpeihecr a msi-selpeld wrod if the fsirt and lsat lteetrs of the wrod are cerorct.&lt;/p&gt; &lt;/blockquote&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;Any string of words with/without punctuation.&lt;/p&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;A scrambled form of the same sentence but with the word&amp;#39;s first and last letter&amp;#39;s positions intact.&lt;/p&gt; &lt;h1&gt;Sample Inputs&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;According to a research team at Cambridge University, it doesn&amp;#39;t matter in what order the letters in a word are, the only important thing is that the first and last letter be in the right place. The rest can be a total mess and you can still read it without a problem. This is because the human mind does not read every letter by itself, but the word as a whole. Such a condition is appropriately called Typoglycemia. &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Sample Outputs&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;Aoccdrnig to a rseearch taem at Cmabrigde Uinervtisy, it deosn&amp;#39;t mttaer in waht oredr the ltteers in a wrod are, the olny iprmoatnt tihng is taht the frist and lsat ltteer be in the rghit pclae. The rset can be a taotl mses and you can sitll raed it wouthit a porbelm. Tihs is bcuseae the huamn mnid deos not raed ervey lteter by istlef, but the wrod as a wlohe. Scuh a cdonition is arppoiatrely cllaed Typoglycemia. &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/lepickle&#34;&gt;/u/lepickle&lt;/a&gt;. If you have any challenge ideas please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a good chance we&amp;#39;ll use them.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/G33kDude&#34;&gt; G33kDude &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3s4nyq/20151109_challenge_240_easy_typoglycemia/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3s4nyq/20151109_challenge_240_easy_typoglycemia/"&gt;[223 comments]&lt;/a&gt;</description></item><item><title>[2015-11-06] Challenge #239 [Hard] An Encoding of Threes</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3rrtxh/20151106_challenge_239_hard_an_encoding_of_threes/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3rrtxh/20151106_challenge_239_hard_an_encoding_of_threes/</guid><pubDate>Fri, 06 Nov 2015 15:34:07 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Are you ready to take the &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3rhzdj/20151104_challenge_239_intermediate_a_zerosum/&#34;&gt;Game of Threes&lt;/a&gt; to the next level? &lt;/p&gt; &lt;h1&gt;Background&lt;/h1&gt; &lt;p&gt;As it turns out, if we chain the steps of a Threes solution into a sequence (ignoring their signs), the sequence becomes a &lt;a href=&#34;https://en.wikipedia.org/wiki/Ternary_numeral_system&#34;&gt;ternary&lt;/a&gt; representation of numeric data. In other words, we can use base 3 (instead of decimal or binary) to store numbers! &lt;/p&gt; &lt;p&gt;For example, if we were to use &lt;a href=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/ASCII-Table-wide.svg/2000px-ASCII-Table-wide.svg.png&#34;&gt;ASCII character values&lt;/a&gt; as our &amp;quot;data&amp;quot;, then we could encode the letter &lt;code&gt;a&lt;/code&gt; into a Threes solution like this:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;a&lt;/code&gt; is &lt;code&gt;97&lt;/code&gt; in decimal&lt;/li&gt; &lt;li&gt;&lt;code&gt;97&lt;/code&gt; in base 3 (ternary) is &lt;code&gt;10121&lt;/code&gt;&lt;/li&gt; &lt;li&gt;We can &amp;quot;reverse&amp;quot; the Threes process in order to come up with a number that has a threes solution containing the numbers &lt;code&gt;[1, 0, 1, 2, 1]&lt;/code&gt; in that order. &lt;ul&gt; &lt;li&gt;Start at 1 (where Threes ends)&lt;/li&gt; &lt;li&gt;&lt;code&gt;1 * 3 + 1&lt;/code&gt; = &lt;code&gt;4&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;4 * 3 - 2&lt;/code&gt; = &lt;code&gt;10&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;10 * 3 - 1&lt;/code&gt; = &lt;code&gt;29&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;29 * 3 + 0&lt;/code&gt; = &lt;code&gt;87&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;87 * 3 + 1&lt;/code&gt; = &lt;code&gt;262&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/li&gt; &lt;li&gt;A &amp;quot;Threes-encoded&amp;quot; &lt;code&gt;a&lt;/code&gt; is then the number &lt;code&gt;262&lt;/code&gt;. &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Note that at a couple steps, we subtracted instead of adding. Since the sign in the solution is not significant, additions can be flipped for subtractions to achieve different results. That means that &lt;code&gt;a&lt;/code&gt; could actually be encoded as: &lt;code&gt;260&lt;/code&gt;, &lt;code&gt;278&lt;/code&gt;, &lt;code&gt;386&lt;/code&gt;, &lt;code&gt;388&lt;/code&gt;, or others. For example, &lt;code&gt;260&lt;/code&gt; could be decoded like this:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;260 1 87 0 29 1 10 2 4 -1 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;That still results in &lt;code&gt;10121&lt;/code&gt;, in base 10 is &lt;code&gt;97&lt;/code&gt;, or ASCII &lt;code&gt;a&lt;/code&gt;. However, there is now the possibility to go wrong in the decoding!&lt;/p&gt; &lt;pre&gt;&lt;code&gt;262 2 88 2 30 0 10 -1 3 0 1 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;That decoding resulted in &lt;code&gt;22010&lt;/code&gt;, which is base 10 &lt;code&gt;219&lt;/code&gt;, or ASCII &lt;code&gt;Û&lt;/code&gt;. Oops!&lt;/p&gt; &lt;h1&gt;The Problem&lt;/h1&gt; &lt;p&gt;Now that we have a way to encode/decode characters into &amp;quot;Threes&amp;quot;, let&amp;#39;s encode words:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;three&lt;/code&gt; -&amp;gt; &lt;code&gt;[11022, 10212, 11020, 10202, 10202]&lt;/code&gt; (ternary)&lt;/li&gt; &lt;li&gt;Concatenate them all into: &lt;code&gt;1102210212110201020210202&lt;/code&gt;&lt;/li&gt; &lt;li&gt;Encode that string by working Threes backwards so it becomes: &lt;code&gt;1343814725227&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Where is this all going? Your mission for this challenge is to take a Threes-encoded English word as input, and output the original, un-encoded word. You may want to use a dictionary file containing a list of valid words. See: &lt;a href=&#34;https://raw.githubusercontent.com/fsufitch/dailyprogrammer/master/common/enable1.txt&#34;&gt;enable1.txt&lt;/a&gt;. Since enable1.txt is all lowercase, you should make your word checking case-insensitive (e.g. &amp;quot;ExtrapOlation&amp;quot; is a word). Just remember that encoded upper and lower case letters have very different codes.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Some encoded numbers have multiple possible word solutions. If you get a slightly different word, that&amp;#39;s okay. Alternatively, you could make your solution output &lt;em&gt;all&lt;/em&gt; possible word solutions!&lt;/p&gt; &lt;h2&gt;Sample Input 1&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;1343814725227 &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Sample Output 1&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;three &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Sample Input 2&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;66364005622431677379166556 &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Sample Output 2&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;Programming &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Challenge Input&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;1023141284209081472421723187973153755941662449 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Bonus Points&lt;/h1&gt; &lt;p&gt;Solve the problem without using a words file (like &amp;quot;enable1.txt&amp;quot;). &lt;em&gt;Note:&lt;/em&gt; This may or may not be possible; I&amp;#39;m not actually sure. &lt;strong&gt;Update:&lt;/strong&gt; The bonus is actually impossible. As &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3rrtxh/20151106_challenge_239_hard_an_encoding_of_threes/cwqwn5s&#34;&gt;others&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3rrtxh/20151106_challenge_239_hard_an_encoding_of_threes/cwr5cnt&#34;&gt;I&lt;/a&gt; remarked, there are just too many possible solutions/combinations. A dictionary or other language guide is necessary.&lt;/p&gt; &lt;h1&gt;Fluff&lt;/h1&gt; &lt;p&gt;This concludes the Game of Threes series. Since this was my (&lt;a href=&#34;/u/Blackshell&#34;&gt;/u/Blackshell&lt;/a&gt;&amp;#39;s) first series of posted problems, I would really appreciate feedback on how it went. Thanks for playing!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3rrtxh/20151106_challenge_239_hard_an_encoding_of_threes/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3rrtxh/20151106_challenge_239_hard_an_encoding_of_threes/"&gt;[40 comments]&lt;/a&gt;</description></item><item><title>[2015-11-04] Challenge #239 [Intermediate] A Zero-Sum Game of Threes</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3rhzdj/20151104_challenge_239_intermediate_a_zerosum/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3rhzdj/20151104_challenge_239_intermediate_a_zerosum/</guid><pubDate>Wed, 04 Nov 2015 15:04:03 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Let&amp;#39;s pursue Monday&amp;#39;s &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3r7wxz/20151102_challenge_239_easy_a_game_of_threes/&#34;&gt;Game of Threes&lt;/a&gt; further!&lt;/p&gt; &lt;p&gt;To make it more fun (and make it a 1-player instead of a &lt;a href=&#34;https://en.wikipedia.org/wiki/Zero-player_game&#34;&gt;0-player&lt;/a&gt; game), let&amp;#39;s change the rules a bit: &lt;em&gt;You can now add any of [-2, -1, 1, 2] to reach a multiple of 3&lt;/em&gt;. This gives you two options at each step, instead of the original single option. &lt;/p&gt; &lt;p&gt;With this modified rule, find a Threes sequence to get to 1, with this extra condition: &lt;em&gt;The sum of all the numbers that were added must equal 0&lt;/em&gt;. If there is no possible correct solution, print &lt;code&gt;Impossible&lt;/code&gt;.&lt;/p&gt; &lt;h1&gt;Sample Input:&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;929 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Sample Output:&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;929 1 310 -1 103 -1 34 2 12 0 4 -1 1 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Since &lt;code&gt;1 - 1 - 1 + 2 - 1 == 0&lt;/code&gt;, this is a correct solution. &lt;/p&gt; &lt;h1&gt;Bonus points&lt;/h1&gt; &lt;p&gt;Make your solution work (and run reasonably fast) for numbers up to your operating system&amp;#39;s maximum long int value, or its equivalent. For some concrete test cases, try:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;18446744073709551615&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;18446744073709551614&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3rhzdj/20151104_challenge_239_intermediate_a_zerosum/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3rhzdj/20151104_challenge_239_intermediate_a_zerosum/"&gt;[114 comments]&lt;/a&gt;</description></item><item><title>[2015-11-02] Challenge #239 [Easy] A Game of Threes</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3r7wxz/20151102_challenge_239_easy_a_game_of_threes/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3r7wxz/20151102_challenge_239_easy_a_game_of_threes/</guid><pubDate>Mon, 02 Nov 2015 15:29:56 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Background&lt;/h1&gt; &lt;p&gt;Back in middle school, I had a peculiar way of dealing with super boring classes. I would take my handy pocket calculator and play a &amp;quot;Game of Threes&amp;quot;. Here&amp;#39;s how you play it:&lt;/p&gt; &lt;p&gt;First, you mash in a random large number to start with. Then, repeatedly do the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If the number is divisible by 3, divide it by 3.&lt;/li&gt; &lt;li&gt;If it&amp;#39;s not, either add 1 or subtract 1 (to make it divisible by 3), then divide it by 3.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The game stops when you reach &amp;quot;1&amp;quot;. &lt;/p&gt; &lt;p&gt;While the game was originally a race against myself in order to hone quick math reflexes, it also poses an opportunity for some interesting programming challenges. Today, the challenge is to create a program that &amp;quot;plays&amp;quot; the Game of Threes.&lt;/p&gt; &lt;h1&gt;Challenge Description&lt;/h1&gt; &lt;p&gt;The input is a single number: the number at which the game starts. Write a program that plays the Threes game, and outputs a valid sequence of steps you need to take to get to 1. Each step should be output as the number you start at, followed by either -1 or 1 (if you are adding/subtracting 1 before dividing), or 0 (if you are just dividing). The last line should simply be 1.&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;The input is a single number: the number at which the game starts.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;100 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;The output is a list of valid steps that must be taken to play the game. Each step is represented by the number you start at, followed by either -1 or 1 (if you are adding/subtracting 1 before dividing), or 0 (if you are just dividing). The last line should simply be 1.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;100 -1 33 0 11 1 4 -1 1 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;31337357 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Fluff&lt;/h1&gt; &lt;p&gt;Hi everyone! I am &lt;a href=&#34;/u/Blackshell&#34;&gt;/u/Blackshell&lt;/a&gt;, one of the new moderators for this sub. I am very happy to meet everyone and contribute to the community (and to give &lt;a href=&#34;/u/jnazario&#34;&gt;/u/jnazario&lt;/a&gt; a little bit of a break). If you have any feedback for me, I would be happy to hear it. Lastly, as always, remember if you would like to propose a challenge to be posted, head over to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/Blackshell&#34;&gt; Blackshell &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3r7wxz/20151102_challenge_239_easy_a_game_of_threes/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3r7wxz/20151102_challenge_239_easy_a_game_of_threes/"&gt;[372 comments]&lt;/a&gt;</description></item><item><title>[2015-10-30] Challenge #238 [Hard] Searching a Dungeon</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3qtr01/20151030_challenge_238_hard_searching_a_dungeon/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3qtr01/20151030_challenge_238_hard_searching_a_dungeon/</guid><pubDate>Fri, 30 Oct 2015 11:13:37 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Our hero is lost in a dungeon. You will be given ASCII maps of a few floors, her starting position, and her goal. On some floors there are holes in the ground/roof, so that you can move between floors. Some only open one way, so going up doesn&amp;#39;t guarantee that you can thereafter go down.&lt;/p&gt; &lt;p&gt;Your goal is to paint the path the hero takes in the dungeon to go from their starting position to the goal.&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;There are a few characters used to build the ASCII map.&lt;/p&gt; &lt;p&gt;&amp;#39;#&amp;#39; means wall. You cannot go here&lt;/p&gt; &lt;p&gt;&amp;#39; &amp;#39; means empty. You can go here from adjacent positions on the same floor.&lt;/p&gt; &lt;p&gt;&amp;#39;S&amp;#39; means start. You start here&lt;/p&gt; &lt;p&gt;&amp;#39;G&amp;#39; means goal. You need to go here to find the treasure and complete the challenge!&lt;/p&gt; &lt;p&gt;&amp;#39;U&amp;#39; means up. You can go from floor &amp;#39;n&amp;#39; to floor &amp;#39;n+1&amp;#39; here.&lt;/p&gt; &lt;p&gt;&amp;#39;D&amp;#39; means down. You can go from floor &amp;#39;n&amp;#39; to floor &amp;#39;n-1&amp;#39; here.&lt;/p&gt; &lt;p&gt;Your output is the same as the input, but with &amp;#39;*&amp;#39; used to paint the route.&lt;/p&gt; &lt;p&gt;The route has to be the shortest possible route.&lt;/p&gt; &lt;p&gt;Lower floors are printed below higher floors&lt;/p&gt; &lt;p&gt;Example input:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;##### #S# # # # # #D#G# ##### ##### # U# # ### # ## ##### &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should emit the levels of the dungeon with the hero&amp;#39;s path painted from start to goal. &lt;/p&gt; &lt;p&gt;Example output:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;##### #S#*# #*#*# #D#G# ##### ##### #**U# #*### #* ## ##### &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(It doesn&amp;#39;t matter whether you paint over U and D or not)&lt;/p&gt; &lt;h1&gt;Challenge input&lt;/h1&gt; &lt;p&gt;(if you want to, you may use the fact that these floors are all 10x10 in size, as well as there being 4 floors, by either putting this at the top of your input file, or hardcoding it)&lt;/p&gt; &lt;pre&gt;&lt;code&gt;########## #S### # # # #### ### # #D## # # # ## #D# # # ## ### ## ### ### ## ### ## ########## ########## # # D# # #### ### # ## #U# # ## # # D## ########## # ## #D# # # ## ########## ########## # # # ######## # #U # # # # # #### # # ##### #### ##U## # D# ## ########## ########## # # # ###### # # # # # # # ## # # # # # # # ## # # # # ## # # # #####G# ########## &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/Darklightos&#34;&gt;/u/Darklightos&lt;/a&gt;. If you have any challenge ideas, please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a good chance we&amp;#39;ll use it.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3qtr01/20151030_challenge_238_hard_searching_a_dungeon/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3qtr01/20151030_challenge_238_hard_searching_a_dungeon/"&gt;[52 comments]&lt;/a&gt;</description></item><item><title>[2015-10-28] Challenge #238 [Intermediate] Fallout Hacking Game</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3qjnil/20151028_challenge_238_intermediate_fallout/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3qjnil/20151028_challenge_238_intermediate_fallout/</guid><pubDate>Wed, 28 Oct 2015 11:05:26 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;The popular video games &lt;em&gt;Fallout 3&lt;/em&gt; and &lt;em&gt;Fallout: New Vegas&lt;/em&gt; have &lt;a href=&#34;http://gamewiki.net/Fallout_3/Hacking_Guide&#34;&gt;a computer &amp;quot;hacking&amp;quot; minigame&lt;/a&gt; where the player must correctly guess the correct password from a list of same-length words. Your challenge is to implement this game yourself.&lt;/p&gt; &lt;p&gt;The game operates similarly to the classic board game &lt;a href=&#34;http://en.wikipedia.org/wiki/Mastermind_(board_game)&#34;&gt;Mastermind&lt;/a&gt;. The player has only 4 guesses and on each incorrect guess the computer will indicate how many letter &lt;em&gt;positions&lt;/em&gt; are correct.&lt;/p&gt; &lt;p&gt;For example, if the password is MIND and the player guesses MEND, the game will indicate that 3 out of 4 positions are correct (M_ND). If the password is COMPUTE and the player guesses PLAYFUL, the game will report 0/7. While some of the letters match, they&amp;#39;re in the wrong position.&lt;/p&gt; &lt;p&gt;Ask the player for a difficulty (very easy, easy, average, hard, very hard), then present the player with 5 to 15 words of the same length. The length can be 4 to 15 letters. More words and letters make for a harder puzzle. The player then has 4 guesses, and on each incorrect guess indicate the number of correct positions.&lt;/p&gt; &lt;p&gt;Here&amp;#39;s an example game:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Difficulty (1-5)? 3 SCORPION FLOGGING CROPPERS MIGRAINE FOOTNOTE REFINERY VAULTING VICARAGE PROTRACT DESCENTS Guess (4 left)? migraine 0/8 correct Guess (3 left)? protract 2/8 correct Guess (2 left)? croppers 8/8 correct You win! &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You can draw words from our favorite dictionary file: &lt;a href=&#34;http://code.google.com/p/dotnetperls-controls/downloads/detail?name=enable1.txt&#34;&gt;enable1.txt&lt;/a&gt;. Your program should completely ignore case when making the position checks.&lt;/p&gt; &lt;p&gt;There may be ways to increase the difficulty of the game, perhaps even making it impossible to guarantee a solution, based on your particular selection of words. For example, your program could supply words that have little letter position overlap so that guesses reveal as little information to the player as possible.&lt;/p&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was created by user &lt;a href=&#34;/u/skeeto&#34;&gt;/u/skeeto&lt;/a&gt;. If you have any challenge ideas please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a good chance we&amp;#39;ll use them. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3qjnil/20151028_challenge_238_intermediate_fallout/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3qjnil/20151028_challenge_238_intermediate_fallout/"&gt;[148 comments]&lt;/a&gt;</description></item><item><title>[2015-10-26] Challenge #238 [Easy] Consonants and Vowels</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3q9vpn/20151026_challenge_238_easy_consonants_and_vowels/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3q9vpn/20151026_challenge_238_easy_consonants_and_vowels/</guid><pubDate>Mon, 26 Oct 2015 12:52:03 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;You were hired to create words for a new language. However, your boss wants these words to follow a strict pattern of consonants and vowels. You are bad at creating words by yourself, so you decide it would be best to randomly generate them.&lt;/p&gt; &lt;p&gt;Your task is to create a program that generates a random word given a pattern of consonants (c) and vowels (v).&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;Any string of the letters c and v, uppercase or lowercase.&lt;/p&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;A random lowercase string of letters in which consonants (bcdfghjklmnpqrstvwxyz) occupy the given &amp;#39;c&amp;#39; indices and vowels (aeiou) occupy the given &amp;#39;v&amp;#39; indices.&lt;/p&gt; &lt;h1&gt;Sample Inputs&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;cvcvcc CcvV cvcvcvcvcvcvcvcvcvcv &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Sample Outputs&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;litunn ytie poxuyusovevivikutire &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Bonus&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;Error handling: make your program react when a user inputs a pattern that doesn&amp;#39;t consist of only c&amp;#39;s and v&amp;#39;s.&lt;/li&gt; &lt;li&gt;When the user inputs a capital C or V, capitalize the letter in that index of the output.&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/boxofkangaroos&#34;&gt;/u/boxofkangaroos&lt;/a&gt;. If you have any challenge ideas please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a good chance we&amp;#39;ll use them.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3q9vpn/20151026_challenge_238_easy_consonants_and_vowels/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3q9vpn/20151026_challenge_238_easy_consonants_and_vowels/"&gt;[294 comments]&lt;/a&gt;</description></item><item><title>[2015-10-23] Challenge #237 [Hard] Takuzu Solver</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3pwf17/20151023_challenge_237_hard_takuzu_solver/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3pwf17/20151023_challenge_237_hard_takuzu_solver/</guid><pubDate>Fri, 23 Oct 2015 12:40:49 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Takuzu is a simple and fairly unknown logic game similar to Sudoku. The objective is to fill a square grid with either a &amp;quot;1&amp;quot; or a &amp;quot;0&amp;quot;. There are a couple of rules you must follow:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;You can&amp;#39;t put more than two identical numbers next to each other in a line (i.e. you can&amp;#39;t have a &amp;quot;111&amp;quot; or &amp;quot;000&amp;quot;).&lt;/li&gt; &lt;li&gt;The number of 1s and 0s on each row and column must match.&lt;/li&gt; &lt;li&gt;You can&amp;#39;t have two identical rows or columns.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To get a better hang of the rules you can play an online version of this game (which inspired this challenge) &lt;a href=&#34;http://0hh1.com/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;You&amp;#39;ll be given a square grid representing the game board. Some cells have already been filled; the remaining ones are represented by a dot. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;.... 0.0. ..0. ...1 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should display the filled game board. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1010 0101 1100 0011 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Inputs used here (and available at the online version of the game) have only one solution. For extra challenge, you can make your program output all possible solutions, if there are more of them.&lt;/p&gt; &lt;h1&gt;Challenge Input 1&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;110... 1...0. ..0... 11..10 ....0. ...... &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output 1&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;110100 101100 010011 110010 001101 001011 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Input 2&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;0....11..0.. ...1...0.... .0....1...00 1..1..11...1 .........1.. 0.0...1..... ....0....... ....01.0.... ..00..0.0..0 .....1....1. 10.0........ ..1....1..00 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output 2&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;010101101001 010101001011 101010110100 100100110011 011011001100 010010110011 101100101010 001101001101 110010010110 010101101010 101010010101 101011010100 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was submitted by &lt;a href=&#34;/u/adrian17&#34;&gt;/u/adrian17&lt;/a&gt;. If you have any challenge ideas, please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;, there&amp;#39;s a good chance we&amp;#39;ll use them.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3pwf17/20151023_challenge_237_hard_takuzu_solver/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3pwf17/20151023_challenge_237_hard_takuzu_solver/"&gt;[48 comments]&lt;/a&gt;</description></item><item><title>[2015-10-21] Challenge #237 [Intermediate] Heighmap of Boxes</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3pnd3t/20151021_challenge_237_intermediate_heighmap_of/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3pnd3t/20151021_challenge_237_intermediate_heighmap_of/</guid><pubDate>Wed, 21 Oct 2015 16:06:19 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Have a look at this ASCII art diagram of various boxes:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;+--------------------------------------------------------------+ | | | +-------------------------------+ +-------+ | | | | | | | | | | | | | | | +----------------+ | | | | | | | | | +-------+ | | | | | | | | | | | | +-------+ | | | +----------------+ | | | | | | | | | | | | | | | | | +-------------------------------+ +-------+ | | | +--------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Each box is formed with pipe characters for the vertical parts (&lt;code&gt;|&lt;/code&gt;), dashes for the horizontal parts (&lt;code&gt;-&lt;/code&gt;), and pluses for the corners (&lt;code&gt;+&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;The diagram also shows boxes inside other boxes. We&amp;#39;ll call the number of boxes that a box is contained within that box&amp;#39;s &lt;em&gt;layer&lt;/em&gt;. Here&amp;#39;s the diagram again with the layer of each box annotated:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;+--------------------------------------------------------------+ | | | +-------------------------------+ +-------+ | | | | | | | | | | | 1 | | | | +----------------+ | | | | | | | | | 0 +-------+ | | | | 2 | 1 | | | | | | | +-------+ | | | +----------------+ | | | | | | | | 1 | | | | | | | | | +-------------------------------+ +-------+ | | | +--------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Your program will take in a box diagram similar to the one at the top as input. As output, your program should output the box diagram with:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Boxes on layer 0 should be filled with the character &lt;code&gt;#&lt;/code&gt;;&lt;/li&gt; &lt;li&gt;Boxes on layer 1 should be filled with the character &lt;code&gt;=&lt;/code&gt;;&lt;/li&gt; &lt;li&gt;Boxes on layer 2 should be filled with the character &lt;code&gt;-&lt;/code&gt;;&lt;/li&gt; &lt;li&gt;Boxes on layer 3 should be filled with the character &lt;code&gt;.&lt;/code&gt;;&lt;/li&gt; &lt;li&gt;Boxes on layer 4 and above should not be filled.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Here is what the output of the above input should look like:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;+--------------------------------------------------------------+ |##############################################################| |###+-------------------------------+##########+-------+#######| |###|===============================|##########|=======|#######| |###|===============================|##########|=======|#######| |###|=====+----------------+========|##########|=======|#######| |###|=====|----------------|========|##########+-------+#######| |###|=====|----------------|========|##########################| |###|=====|----------------|========|##########+-------+#######| |###|=====+----------------+========|##########|=======|#######| |###|===============================|##########|=======|#######| |###|===============================|##########|=======|#######| |###+-------------------------------+##########+-------+#######| |##############################################################| +--------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Formal Inputs and Outputs&lt;/h1&gt; &lt;h2&gt;Input&lt;/h2&gt; &lt;p&gt;Input shall begin with two space separated integers &lt;code&gt;N&lt;/code&gt; and &lt;code&gt;M&lt;/code&gt; on the first line. Following that will be &lt;code&gt;N&lt;/code&gt; lines with &lt;code&gt;M&lt;/code&gt; characters (including spaces) each which represent the ASCII art diagram.&lt;/p&gt; &lt;h2&gt;Output&lt;/h2&gt; &lt;p&gt;Output the map with the boxes of different layers filled in with their appropriate characters.&lt;/p&gt; &lt;h1&gt;Sample Inputs and Outputs&lt;/h1&gt; &lt;h2&gt;Sample Input&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;20 73 +-----------------------------------------------------------------------+ | +--------------------------------------------------------------+ | | | +-----------------------------------------------------+ | | | | | +-----------------------------------------+ | | | | | | | +---------------------------+ | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | +---------------------------+ | | | | | | | | | | | | | | | +-----------------------------------------+ | | | | | | | | | | | | | | | | | +-----------------------------------------------------+ | | | | | | | +--------------------------------------------------------------+ | | | | | | | +-----------------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;h2&gt;Sample Output&lt;/h2&gt; &lt;pre&gt;&lt;code&gt;+-----------------------------------------------------------------------+ |#####+--------------------------------------------------------------+##| |#####|======+-----------------------------------------------------+=|##| |#####|======|---------+-----------------------------------------+-|=|##| |#####|======|---------|...........+---------------------------+.|-|=|##| |#####|======|---------|...........| |.|-|=|##| |#####|======|---------|...........| |.|-|=|##| |#####|======|---------|...........| |.|-|=|##| |#####|======|---------|...........+---------------------------+.|-|=|##| |#####|======|---------|.........................................|-|=|##| |#####|======|---------+-----------------------------------------+-|=|##| |#####|======|-----------------------------------------------------|=|##| |#####|======|-----------------------------------------------------|=|##| |#####|======+-----------------------------------------------------+=|##| |#####|==============================================================|##| |#####+--------------------------------------------------------------+##| |#######################################################################| |#######################################################################| |#######################################################################| +-----------------------------------------------------------------------+ &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/katyai&#34;&gt;/u/katyai&lt;/a&gt;. If you have any challenge ideas please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a good chance we&amp;#39;ll use them!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3pnd3t/20151021_challenge_237_intermediate_heighmap_of/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3pnd3t/20151021_challenge_237_intermediate_heighmap_of/"&gt;[46 comments]&lt;/a&gt;</description></item><item><title>[2015-10-19] Challenge #237 [Easy] Broken Keyboard</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3pcb3i/20151019_challenge_237_easy_broken_keyboard/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3pcb3i/20151019_challenge_237_easy_broken_keyboard/</guid><pubDate>Mon, 19 Oct 2015 11:33:40 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Help! My keyboard is broken, only a few keys work any more. If I tell you what keys work, can you tell me what words I can write?&lt;/p&gt; &lt;p&gt;(You should use the trusty &lt;a href=&#34;http://norvig.com/ngrams/enable1.txt&#34;&gt;enable1.txt&lt;/a&gt; file, or &lt;code&gt;/usr/share/dict/words&lt;/code&gt; to chose your valid English words from.)&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;You&amp;#39;ll be given a line with a single integer on it, telling you how many lines to read. Then you&amp;#39;ll be given that many lines, each line a list of letters representing the keys that work on my keyboard. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;3 abcd qwer hjklo &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should emit the longest valid English language word you can make for each keyboard configuration. &lt;/p&gt; &lt;pre&gt;&lt;code&gt;abcd = bacaba qwer = ewerer hjklo = kolokolo &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;4 edcf bnik poil vybu &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;edcf = deedeed bnik = bikini poil = pililloo vybu = bubby &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was inspired by &lt;a href=&#34;/u/ThinkinWithSand&#34;&gt;/u/ThinkinWithSand&lt;/a&gt;, many thanks! If you have any ideas, please share them on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a chance we&amp;#39;ll use it. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3pcb3i/20151019_challenge_237_easy_broken_keyboard/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3pcb3i/20151019_challenge_237_easy_broken_keyboard/"&gt;[161 comments]&lt;/a&gt;</description></item><item><title>[2015-10-16] Challenge #236 [Hard] Balancing chemical equations</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3oz82g/20151016_challenge_236_hard_balancing_chemical/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3oz82g/20151016_challenge_236_hard_balancing_chemical/</guid><pubDate>Fri, 16 Oct 2015 11:35:05 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Rob was just learning to balance chemical equations from his teacher, but Rob was also a programmer, so he wanted to automate the process of doing it by hand. Well, it turns out that Rob isn&amp;#39;t a great programmer, and so he&amp;#39;s looking to you for help. Can you help him out?&lt;/p&gt; &lt;p&gt;Balancing chemical equations is pretty straight forward - it&amp;#39;s all in conservation of mass. Remember this: A balanced equation MUST have EQUAL numbers of EACH type of atom on BOTH sides of the arrow. Here&amp;#39;s a great tutorial on the subject: &lt;a href=&#34;http://www.chemteam.info/Equations/Balance-Equation.html&#34;&gt;http://www.chemteam.info/Equations/Balance-Equation.html&lt;/a&gt; &lt;/p&gt; &lt;h1&gt;Input&lt;/h1&gt; &lt;p&gt;The input is a chemical equation without amounts. In order to make this possible in pure ASCII, we write any subscripts as ordinary numbers. Element names always start with a capital letter and may be followed by a lowercase letter (e.g. Co for cobalt, which is different than CO for carbon monoxide, a C carbon and an O oxygen). The molecules are separated with + signs, an ASCII-art arrow -&amp;gt; is inserted between both sides of the equation and represents the reaction:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Al + Fe2O4 -&amp;gt; Fe + Al2O3 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output&lt;/h1&gt; &lt;p&gt;The output of your program is the input equation augmented with extra numbers. The number of atoms for each element must be the same on both sides of the arrow. For the example above, a valid output is:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;8Al + 3Fe2O4 -&amp;gt; 6Fe + 4Al2O3 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If the number for a molecule is 1, drop it. A number must always be a positive integer. Your program must yield numbers such that their sum is minimal. For instance, the following is illegal:&lt;/p&gt; &lt;pre&gt;&lt;code&gt; 800Al + 300Fe2O3 -&amp;gt; 600Fe + 400Al2O3 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If there is not any solution print:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Nope! &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;for any equation like&lt;/p&gt; &lt;pre&gt;&lt;code&gt; Pb -&amp;gt; Au &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(FWIW that&amp;#39;s transmutation, or alchemy, and is simply not possible - lead into gold.) &lt;/p&gt; &lt;p&gt;Preferably, format it neatly with spaces for greater readability but if and only if it&amp;#39;s not possible, format your equation like:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;Al+Fe2O4-&amp;gt;Fe+Al2O3 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge inputs&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;C5H12 + O2 -&amp;gt; CO2 + H2O Zn + HCl -&amp;gt; ZnCl2 + H2 Ca(OH)2 + H3PO4 -&amp;gt; Ca3(PO4)2 + H2O FeCl3 + NH4OH -&amp;gt; Fe(OH)3 + NH4Cl K4[Fe(SCN)6] + K2Cr2O7 + H2SO4 -&amp;gt; Fe2(SO4)3 + Cr2(SO4)3 + CO2 + H2O + K2SO4 + KNO3 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge outputs&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;C5H12 + 8O2 -&amp;gt; 5CO2 + 6H2O Zn + 2HCl -&amp;gt; ZnCl2 + H2 3Ca(OH)2 + 2H3PO4 -&amp;gt; Ca3(PO4)2 + 6H2O FeCl3 + 3NH4OH -&amp;gt; Fe(OH)3 + 3NH4Cl 6K4[Fe(SCN)6] + 97K2Cr2O7 + 355H2SO4 -&amp;gt; 3Fe2(SO4)3 + 97Cr2(SO4)3 + 36CO2 + 355H2O + 91K2SO4 + 36KNO3 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was created by &lt;a href=&#34;/u/StefanAlecu&#34;&gt;/u/StefanAlecu&lt;/a&gt;, many thanks for their submission. If you have any challenge ideas, please share them using &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and there&amp;#39;s a chance we&amp;#39;ll use them.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3oz82g/20151016_challenge_236_hard_balancing_chemical/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3oz82g/20151016_challenge_236_hard_balancing_chemical/"&gt;[44 comments]&lt;/a&gt;</description></item><item><title>[2015-10-14] Challenge #236 [Intermediate] Fibonacci-ish Sequence</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3opin7/20151014_challenge_236_intermediate_fibonacciish/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3opin7/20151014_challenge_236_intermediate_fibonacciish/</guid><pubDate>Wed, 14 Oct 2015 11:00:32 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Fibonacci_number&#34;&gt;The Fibonacci Sequence&lt;/a&gt; is a famous integer series in the field of mathematics. The sequence is recursively defined for n &amp;gt; 1 by the formula &lt;em&gt;f(n) = f(n-1) + f(n-2)&lt;/em&gt;. In plain english, each term in the sequence is found by adding the previous two terms together. Given the starting values of &lt;em&gt;f(0) = 0&lt;/em&gt; and &lt;em&gt;f(1) = 1&lt;/em&gt; the first ten terms of the sequence are:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;0 1 1 2 3 5 8 13 21 34&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;We will notice however that some numbers are left out of the sequence and don&amp;#39;t get any of the fame, 9 is an example. However, if we were to start the sequence with a different value for &lt;em&gt;f(1)&lt;/em&gt; we will generate a new sequence of numbers. Here is the series for &lt;em&gt;f(1) = 3&lt;/em&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;0 3 3 6 &lt;strong&gt;9&lt;/strong&gt; 15 24 39 102 165&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;We now have a sequence that contains the number 9. What joy!&lt;br/&gt; Today you will write a program that will find the lowest positive integer for &lt;em&gt;f(1)&lt;/em&gt; that will generate a Fibonacci-ish sequence containing the desired integer (let&amp;#39;s call it &lt;em&gt;x&lt;/em&gt;).&lt;/p&gt; &lt;h1&gt;Input description&lt;/h1&gt; &lt;p&gt;Your input will be a single positive integer &lt;em&gt;x&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;Sample Input 1: 21 &lt;/p&gt; &lt;p&gt;Sample Input 2: 84 &lt;/p&gt; &lt;h1&gt;Output description&lt;/h1&gt; &lt;p&gt;The sequence of integers generated using the recursion relation starting from 0 and ending at the desired integer &lt;em&gt;x&lt;/em&gt; with the lowest value of &lt;em&gt;f(1)&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;Sample Output 1: 0 1 1 2 3 5 8 13 21&lt;/p&gt; &lt;p&gt;Sample Output 2: 0 4 4 8 12 20 32 52 84&lt;/p&gt; &lt;h1&gt;Challenge Inputs&lt;/h1&gt; &lt;p&gt;Input 1: 0&lt;br/&gt; Input 2: 578&lt;br/&gt; Input 3: 123456789 &lt;/p&gt; &lt;h1&gt;Notes/Hints&lt;/h1&gt; &lt;p&gt;Large inputs (such as input 3) may take some time given your implementation. However, there is a relationship between sequences generated using &lt;em&gt;f(1) &amp;gt; 1&lt;/em&gt; and the classic sequence that can be exploited.&lt;/p&gt; &lt;h1&gt;Bonus&lt;/h1&gt; &lt;p&gt;Make your program run as fast as possible.&lt;/p&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggsted by &lt;a href=&#34;/u/nmacholl&#34;&gt;/u/nmacholl&lt;/a&gt;. Have a good challenge idea? Consider submitting it to &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and we might use it&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3opin7/20151014_challenge_236_intermediate_fibonacciish/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3opin7/20151014_challenge_236_intermediate_fibonacciish/"&gt;[126 comments]&lt;/a&gt;</description></item><item><title>[2015-10-12] Challenge #236 [Easy] Random Bag System</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3ofsyb/20151012_challenge_236_easy_random_bag_system/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3ofsyb/20151012_challenge_236_easy_random_bag_system/</guid><pubDate>Mon, 12 Oct 2015 11:04:22 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Contrary to popular belief, the &lt;a href=&#34;http://i.imgur.com/65G37Aq.png&#34;&gt;tetromino pieces&lt;/a&gt; you are given in a game of &lt;a href=&#34;https://en.wikipedia.org/wiki/Tetris&#34;&gt;Tetris&lt;/a&gt; are not randomly selected. Instead, all seven pieces are placed into a &amp;quot;bag.&amp;quot; A piece is randomly removed from the bag and presented to the player until the bag is empty. When the bag is empty, it is refilled and the process is repeated for any additional pieces that are needed. &lt;/p&gt; &lt;p&gt;In this way, it is assured that the player will never go too long without seeing a particular piece. It is possible for the player to receive two identical pieces in a row, but never three or more. Your task for today is to implement this system. &lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;None. &lt;/p&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Output a string signifying 50 tetromino pieces given to the player using the random bag system. This will be on a single line.&lt;/p&gt; &lt;p&gt;The &lt;a href=&#34;http://i.imgur.com/65G37Aq.png&#34;&gt;pieces&lt;/a&gt; are as follows: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;O&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;I&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;S&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Z&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;L&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;J&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;T&lt;/code&gt;&lt;br/&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Sample Inputs&lt;/h1&gt; &lt;p&gt;None. &lt;/p&gt; &lt;h1&gt;Sample Outputs&lt;/h1&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;LJOZISTTLOSZIJOSTJZILLTZISJOOJSIZLTZISOJTLIOJLTSZO&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;OTJZSILILTZJOSOSIZTJLITZOJLSLZISTOJZTSIOJLZOSILJTS&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ITJLZOSILJZSOTTJLOSIZIOLTZSJOLSJZITOZTLJISTLSZOIJO&lt;/code&gt;&lt;br/&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h1&gt;Note&lt;/h1&gt; &lt;p&gt;Although the output is semi-random, you can verify whether it is likely to be correct by making sure that pieces do not repeat within chunks of seven. &lt;/p&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was developed by &lt;a href=&#34;/u/chunes&#34;&gt;/u/chunes&lt;/a&gt; on &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt;. If you have any challenge ideas please share them there and there&amp;#39;s a chance we&amp;#39;ll use them.&lt;/p&gt; &lt;h1&gt;Bonus&lt;/h1&gt; &lt;p&gt;Write a function that takes your output as input and verifies that it is a valid sequence of pieces.&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3ofsyb/20151012_challenge_236_easy_random_bag_system/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3ofsyb/20151012_challenge_236_easy_random_bag_system/"&gt;[334 comments]&lt;/a&gt;</description></item><item><title>[Weekly #24] Mini Challenges</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3o4tpz/weekly_24_mini_challenges/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3o4tpz/weekly_24_mini_challenges/</guid><pubDate>Fri, 09 Oct 2015 18:59:21 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;So this week, let&amp;#39;s do some mini challenges. Too small for an easy but great for a mini challenge. Here is your chance to post some good warm up mini challenges. How it works. Start a new main thread in here. &lt;/p&gt; &lt;p&gt;if you post a challenge, here&amp;#39;s a template from &lt;a href=&#34;/u/lengau&#34;&gt;/u/lengau&lt;/a&gt; for anyone wanting to post challenges (you can copy/paste this text rather than having to get the source):&lt;/p&gt; &lt;p&gt;&lt;code&gt;**[CHALLENGE NAME]** - [CHALLENGE DESCRIPTION]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;**Given:** [INPUT DESCRIPTION]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;**Output:** [EXPECTED OUTPUT DESCRIPTION]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;**Special:** [ANY POSSIBLE SPECIAL INSTRUCTIONS]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;**Challenge input:** [SAMPLE INPUT]&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt; &lt;p&gt;If you want to solve a mini challenge you reply in that thread. Simple. Keep checking back all week as people will keep posting challenges and solve the ones you want.&lt;/p&gt; &lt;p&gt;Please check other mini challenges before posting one to avoid duplications within a certain reason.&lt;/p&gt; &lt;p&gt;Many thanks to &lt;a href=&#34;/u/hutsboR&#34;&gt;/u/hutsboR&lt;/a&gt; and &lt;a href=&#34;/u/adrian17&#34;&gt;/u/adrian17&lt;/a&gt; for suggesting a return of these. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3o4tpz/weekly_24_mini_challenges/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3o4tpz/weekly_24_mini_challenges/"&gt;[108 comments]&lt;/a&gt;</description></item><item><title>[2015-10-09] Challenge #235 [Hard] Contiguous Chain Variation</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3o36b6/20151009_challenge_235_hard_contiguous_chain/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3o36b6/20151009_challenge_235_hard_contiguous_chain/</guid><pubDate>Fri, 09 Oct 2015 11:15:42 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;Based on &lt;a href=&#34;http://redd.it/3gpjn3&#34;&gt;Challenge #227 Contiguous chains&lt;/a&gt; ... but with a chain meaning 1 &lt;em&gt;continuous&lt;/em&gt; strand, where each link in the chain can be connected to &lt;em&gt;at most&lt;/em&gt; two neighbors. For the purposes of this problem, chains can only be contiguous if they connect horizontally of vertically, not diagonally (which is the same original constraint).&lt;/p&gt; &lt;p&gt;For example, the input:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;4 9 xxxx xxxx xxx x x x xxxxxxxxx &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;has at least 3 chains, with several valid layouts for the chains. One possible layout that shows 3 chains:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1111 2222 112 3 1 3 333333333 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Another way to find 3:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1111 1111 111 2 2 3 222223333 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;There is also a valid set of 4 chains:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;1111 2222 111 3 3 4 333334444 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;but 4 is not a correct (minimal) output, because 3 is possible.&lt;/p&gt; &lt;p&gt;Your challenge, should you choose to accept it, is to find the minimum number of chains in a given input.&lt;/p&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;4 9 xxxx xxxx xxx x x x xxxxxxxxx &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;3 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/BarqsDew&#34;&gt;/u/BarqsDew&lt;/a&gt; over in &lt;a href=&#34;/r/DailyProgrammer_Ideas&#34;&gt;/r/DailyProgrammer_Ideas&lt;/a&gt;. If you have any suggested challenges, please share them and there&amp;#39;s a good chance we&amp;#39;ll use them. &lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3o36b6/20151009_challenge_235_hard_contiguous_chain/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3o36b6/20151009_challenge_235_hard_contiguous_chain/"&gt;[25 comments]&lt;/a&gt;</description></item><item><title>[2015-10-07] Challenge #235 [Intermediate] Scoring a Bowling Game</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3ntsni/20151007_challenge_235_intermediate_scoring_a/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3ntsni/20151007_challenge_235_intermediate_scoring_a/</guid><pubDate>Wed, 07 Oct 2015 11:12:15 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;The game of bowling is pretty simple: you have ten pins arranged in a triangle, and you roll a ball down a slick alley towards them and try and knock as many down as possible. In most frames (see below about the tenth frame) you get two attempts per &amp;quot;frame&amp;quot; before the remaining pins are cleared. &lt;/p&gt; &lt;p&gt;The bowler is allowed 10 frames in which to knock down pins, with frames one (1) through nine (9) being composed of up to two rolls. The tenth frame may be composed of up to three rolls: the bonus roll(s) following a strike or spare in the tenth (sometimes referred to as the eleventh and twelfth frames) are fill ball(s) used only to calculate the score of the mark rolled in the tenth.&lt;/p&gt; &lt;p&gt;Bowing scoring is a bit tricky (which is why this is an &lt;em&gt;intermediate&lt;/em&gt; challenge). In addition to a gutter ball (which is 0 pins), you have strikes and spares as well as 1 to 9 pins being knocked down. Strikes and spares affect the next balls in different ways. &lt;/p&gt; &lt;p&gt;When all ten pins are knocked down with the first ball of a frame (called a strike and typically rendered as an &amp;quot;X&amp;quot; on a scoresheet), a player is awarded ten points, plus a bonus of whatever is scored with the next two balls. In this way, the points scored for the two balls after the strike are counted twice.&lt;/p&gt; &lt;p&gt;A &amp;quot;spare&amp;quot; is awarded when no pins are left standing after the second ball of a frame; i.e., a player uses both balls of a frame to clear all ten pins. A player achieving a spare is awarded ten points, plus a bonus of whatever is scored with the next ball (only the first ball is counted). It is typically rendered as a slash on scoresheets in place of the second pin count for a frame.&lt;/p&gt; &lt;p&gt;Your challenge today is to determine a bowling score from a score sheet.&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;You&amp;#39;ll be given a bowling sheet for a single person on a line, with the ten frames separated by a space. All scores are single characters: &lt;code&gt;-&lt;/code&gt; for zero (aka a gutter ball), &lt;code&gt;1-9&lt;/code&gt; for 1-9 pins knocked down, &lt;code&gt;/&lt;/code&gt; for a spare, and &lt;code&gt;X&lt;/code&gt; for a strike. If you see any two digit numbers (e.g. &amp;quot;63&amp;quot;) that&amp;#39;s actually the first and second ball scores (a six then a three). Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;X X X X X X X X X XXX &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should calculate the score for the sheet and report it. From our example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;300 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Aka a perfect game.&lt;/p&gt; &lt;h1&gt;Challenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;X -/ X 5- 8/ 9- X 81 1- 4/X 62 71 X 9- 8/ X X 35 72 5/8 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;137 140 &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Bonus ASCII Art&lt;/h1&gt; &lt;pre&gt;&lt;code&gt; ! ! ! ! .&amp;quot; ! ! ! / .&amp;quot; ! ! / .&amp;quot; ! / .&amp;quot; / .&amp;quot; o / .&amp;quot; / .&amp;quot; / .&amp;quot; / .&amp;quot; . &amp;#39;. / .&amp;quot; &amp;#39; &amp;#39; / .&amp;quot; / grh .&amp;quot; 0 | / |/ /| / | &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Credit&lt;/h1&gt; &lt;p&gt;This challenge was suggested by &lt;a href=&#34;/u/firebolt0777&#34;&gt;/u/firebolt0777&lt;/a&gt;. If you have an idea for a challenge please share it over at &lt;a href=&#34;/r/dailyprogrammer_ideas&#34;&gt;/r/dailyprogrammer_ideas&lt;/a&gt; and we may wind up using it!&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3ntsni/20151007_challenge_235_intermediate_scoring_a/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3ntsni/20151007_challenge_235_intermediate_scoring_a/"&gt;[87 comments]&lt;/a&gt;</description></item><item><title>[2015-10-05] Challenge #235 [Easy] Ruth-Aaron Pairs</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3nkanm/20151005_challenge_235_easy_ruthaaron_pairs/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3nkanm/20151005_challenge_235_easy_ruthaaron_pairs/</guid><pubDate>Mon, 05 Oct 2015 11:29:13 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;In mathematics, a Ruth–Aaron pair consists of two consecutive integers (e.g. 714 and 715) for which the sums of the &lt;em&gt;distinct&lt;/em&gt; prime factors of each integer are equal. For example, we know that (714, 715) is a valid Ruth-Aaron pair because its distinct prime factors are:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;714 = 2 * 3 * 7 * 17 715 = 5 * 11 * 13 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and the sum of those is both 29:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;2 + 3 + 7 + 17 = 5 + 11 + 13 = 29 &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The name was given by Carl Pomerance, a mathematician at the University of Georgia, for Babe Ruth and Hank Aaron, as Ruth&amp;#39;s career regular-season home run total was 714, a record which Aaron eclipsed on April 8, 1974, when he hit his 715th career home run. A student of one of Pomerance&amp;#39;s colleagues noticed that the sums of the distinct prime factors of 714 and 715 were equal.&lt;/p&gt; &lt;p&gt;For a little more on it, see MathWorld - &lt;a href=&#34;http://mathworld.wolfram.com/Ruth-AaronPair.html&#34;&gt;http://mathworld.wolfram.com/Ruth-AaronPair.html&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Your task today is to determine if a pair of numbers is indeed a valid Ruth-Aaron pair.&lt;/p&gt; &lt;h1&gt;Input Description&lt;/h1&gt; &lt;p&gt;You&amp;#39;ll be given a single integer &lt;em&gt;N&lt;/em&gt; on one line to tell you how many pairs to read, and then that many pairs as two-tuples. For example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;3 (714,715) (77,78) (20,21) &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Output Description&lt;/h1&gt; &lt;p&gt;Your program should emit if the numbers are valid Ruth-Aaron pairs. Example:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;(714,715) VALID (77,78) VALID (20,21) NOT VALID &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Chalenge Input&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;4 (5,6) (2107,2108) (492,493) (128,129) &lt;/code&gt;&lt;/pre&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;pre&gt;&lt;code&gt;(5,6) VALID (2107,2108) VALID (492,493) VALID (128,129) NOT VALID &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3nkanm/20151005_challenge_235_easy_ruthaaron_pairs/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3nkanm/20151005_challenge_235_easy_ruthaaron_pairs/"&gt;[123 comments]&lt;/a&gt;</description></item><item><title>ANNOUNCEMENT - We're Hiring</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3nhxk8/announcement_were_hiring/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3nhxk8/announcement_were_hiring/</guid><pubDate>Sun, 04 Oct 2015 21:33:42 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;new moderators have been identified and you&amp;#39;ll see them in coming weeks. &lt;/p&gt; &lt;h1&gt;We&amp;#39;re Hiring&lt;/h1&gt; &lt;p&gt;Hiring moderators, that is. Moderating for &lt;a href=&#34;/r/DailyProgrammer&#34;&gt;/r/DailyProgrammer&lt;/a&gt; is not a walk in the park. Each challenge written must be as suitable as possible for as many people as possible, not to mention other work aside from writing challenges. We run a close-knit team of mods here, and sometimes we&amp;#39;re rushing around on weeknights trying to get the daily challenge out on time! Therefore we think that adding two or three extra members to the team would be helpful for all involved, as you&amp;#39;ll get more varied and fleshed-out challenges. Your role as a moderator will include:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Being able to write your share of the challenges reliably and somewhat predictably on-time.&lt;/li&gt; &lt;li&gt;Having good English writing and communication skills; explaining challenges well is not as easy as it seems.&lt;/li&gt; &lt;li&gt;Being a competent computer programmer. Your language of choice is irrelevant; the universal skills are the important part. ( Writing challenges that are challenging and interesting, while still being solvable and enjoyable, to as many people as possible. (To extend on this, a good knowledge of reddit&amp;#39;s Markdown is important.)&lt;/li&gt; &lt;li&gt;Being able to help users via the moderator mail system, and handle unsuitable user comments responsibly and maturely.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Having the experience of writing challenges could be a great thing to include in a job application; it shows you have the skills to not only solve the challenges, but to formulate them effectively and clearly. If you think you have what it takes, read on!&lt;/p&gt; &lt;h1&gt;Application&lt;/h1&gt; &lt;p&gt;We&amp;#39;re not going to make the application too formal. We want a few things in the application:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Past programming evidence.&lt;/strong&gt; Evidence of past projects, existing solutions to DailyProgrammer and examples of contributions to open-source projects are the sort of stuff we&amp;#39;re looking for. We don&amp;#39;t want a great big portfolio of your work; something such as a link to a GitHub/GitLab/BitBucket/Codeplex profile would be ideal, so we can see the sort of stuff you&amp;#39;ve done.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Prior challenge submission.&lt;/strong&gt; We need an example of the sort of challenge that you are capable of writing. Head on over to &lt;a href=&#34;/r/DailyProgrammer_Ideas&#34;&gt;/r/DailyProgrammer_Ideas&lt;/a&gt; and show us what you can do! Include a link to your challenge in your application - remember to read the sidebar in that subreddit to submit your challenge correctly. If you&amp;#39;ve already submitted a challenge in the past, you can just link to that one instead, rather than writing another one.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Availability.&lt;/strong&gt; We don&amp;#39;t ask too much of you - a few of hours of your time per week should be enough! Give us a brief overview of when you&amp;#39;ll be available or not.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;General programming/academic experience.&lt;/strong&gt; A sentence or two describing the programming languages you enjoy/work with, any relevant qualifications, and anything in the world of programming, tech and CS that interests you. This isn&amp;#39;t really necessary, so omit it if you want, but we&amp;#39;ll be able to get a better understanding of who you are. If you have a programming-related blog or anything similar, we&amp;#39;d love to check it out!&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Submit a comment on this post including the above stuff, we&amp;#39;ll have a read through them, and we&amp;#39;ll get in touch shortly. We&amp;#39;re looking for around two or three members here, so don&amp;#39;t feel at all bad if you don&amp;#39;t get a response. We&amp;#39;ll put you onto the shortlist for next time!&lt;/p&gt; &lt;p&gt;Signed, The &lt;a href=&#34;/r/DailyProgrammer&#34;&gt;/r/DailyProgrammer&lt;/a&gt; team&lt;/p&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3nhxk8/announcement_were_hiring/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3nhxk8/announcement_were_hiring/"&gt;[28 comments]&lt;/a&gt;</description></item><item><title>[2015-10-02] Challenge #234 [Hard] Kanoodle Solver</title><link>https://www.reddit.com/r/dailyprogrammer/comments/3n7xau/20151002_challenge_234_hard_kanoodle_solver/</link><guid isPermaLink="true">https://www.reddit.com/r/dailyprogrammer/comments/3n7xau/20151002_challenge_234_hard_kanoodle_solver/</guid><pubDate>Fri, 02 Oct 2015 12:35:19 +0000</pubDate><description>&lt;!-- SC_OFF --&gt;&lt;div class=&#34;md&#34;&gt;&lt;p&gt;Getting back on track today.&lt;/p&gt; &lt;h1&gt;Description&lt;/h1&gt; &lt;p&gt;The game of Kanoodle provides 12 distinctly shaped pieces (triminoes, tetraminoes and pentaminoes) and asks the player to assemble them into a 5 by 11 rectangular grid. Furthermore they&amp;#39;re shown in one column to aide your solution in reading them in.&lt;/p&gt; &lt;p&gt;The pieces are shown below (and they&amp;#39;re given here made up with different letters to help you see them in place). Pieces may be rotated, flipped, etc to make them fit but you may not overlap them or leave any blank squares in the 5x11 grid. &lt;/p&gt; &lt;pre&gt;&lt;code&gt; A A AA B BB BB C C C CC D D DD D E E EE E F FF G G GGG H HH HH I I III J J J J KK KK L LLL L &lt;/code&gt;&lt;/pre&gt; &lt;p&gt;A solution is found when: &lt;/p&gt; &lt;ul&gt; &lt;li&gt;Every piece is used exactly once.&lt;/li&gt; &lt;li&gt;Every square in the grid is covered exactly once (no overlaps).&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Note&lt;/h2&gt; &lt;p&gt;This is an instance of the exact cover problem. There&amp;#39;s &amp;quot;Algorithm X&amp;quot; by Knuth for finding solutions to the exact cover problem. It&amp;#39;s not particularly sophisticated; indeed Knuth refers to it as &amp;quot;a statement of the obvious trial-and-error approach.&amp;quot;&lt;/p&gt; &lt;h1&gt;Challenge Output&lt;/h1&gt; &lt;p&gt;The puzzle is to arrange all of the above tiles into a four sided figure with no gaps or overlaps. &lt;/p&gt; &lt;p&gt;Your program should be able to emit a solution to this challenge. Bonus points if you can discover all of them. It&amp;#39;s helpful if you keep the pieces identified by their letters to indicate their uniqueness. &lt;/p&gt; &lt;p&gt;One solution is:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;EEGGGJJJJII AEEEGCDDDDI AAALGCHHDII BBLLLCFHHKK BBBLCCFFHKK &lt;/code&gt;&lt;/pre&gt; &lt;/div&gt;&lt;!-- SC_ON --&gt; submitted by &lt;a href=&#34;https://www.reddit.com/user/jnazario&#34;&gt; jnazario &lt;/a&gt; &lt;br/&gt; &lt;a href=&#34;https://www.reddit.com/r/dailyprogrammer/comments/3n7xau/20151002_challenge_234_hard_kanoodle_solver/&#34;&gt;[link]&lt;/a&gt; &lt;a href="https://www.reddit.com/r/dailyprogrammer/comments/3n7xau/20151002_challenge_234_hard_kanoodle_solver/"&gt;[13 comments]&lt;/a&gt;</description></item></channel></rss>